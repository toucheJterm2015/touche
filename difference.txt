diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..bf6691b
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,3 @@
+develop/*_jail
+.*.swp
+lockFile.lock
diff --git a/COPYING b/COPYING
old mode 100755
new mode 100644
diff --git a/README.md b/README.md
old mode 100755
new mode 100644
index c1cb248..199d4ee
--- a/README.md
+++ b/README.md
@@ -1,6 +1,3 @@
-OLD README //Not sure if this still applies to touche
-
-
 For directions on installing Touche, see that installation docs in the
 top level of this repository.
 
diff --git a/Touche-Installation-Instructions.doc b/Touche-Installation-Instructions.doc
new file mode 100644
index 0000000..0f3e341
Binary files /dev/null and b/Touche-Installation-Instructions.doc differ
diff --git a/createcontest.php b/createcontest.php
new file mode 100755
index 0000000..b5a5f39
--- /dev/null
+++ b/createcontest.php
@@ -0,0 +1,75 @@
+<?php
+include_once("lib/session.inc");
+include_once("lib/create.inc");
+?>
+<html>
+<body bgcolor="<?=$page_bg_color?>" link="0000cc" alink="000066" vlink="0000cc">
+<table width="90%" align="center" cellpadding="1" cellspacing="0" border="0" bgcolor="#000000">
+        <tr><td>
+                <table width="100%" cellpadding="5" cellspacing="0" border="0">
+                        <tr bgcolor="<?=$title_bg_color?>">
+                                <td>
+                                <!-- Beautification hack. 2006-09-25 -sb -->
+
+                                <font color="#ffffff">
+                                <b>Creating Contest</b>  <small></small>
+                                </font>
+                                </td>
+                                <td align="right">
+                                         <font color="#ffffff">
+                                         <b>ADMIN</b>
+                                         </font>
+                                </td>
+                        </tr>
+                        <tr>
+                                <td bgcolor="#ffffff" colspan="2">
+<?php			echo "<center>\n";
+
+                # Print out any errors
+                if(isset($error)) {
+                    echo "<br>";
+                    foreach($error as $er) {
+                        echo "<b><font color=#ff0000>$er</font></b>";
+                    }
+                }
+
+                echo "</center>";
+                echo "<p>";
+                echo "<form method=POST action=createcontest2.php>\n";
+                echo "<table align=center bgcolor=#ffffff cellpadding=0 cellspacing=0 border=0<tr><td>";
+                echo "<table width=100% cellpadding=5 cellspacing=1 border=0>\n";
+                echo "  <tr bgcolor=\"$hd_bg_color1\">\n";
+                echo "          <td align=\"center\" colspan=\"2\"><font color=\"$hd_txt_color1\"><b>Contest Setup</b></font></td>\n";
+                echo "  </tr>";
+                echo "  <tr bgcolor=\"$hd_bg_color2\">";
+                echo "          <td colspan=\"2\">Fill out info for your contest:</td>";
+                echo "  </tr>";
+        echo "          <tr bgcolor=\"$data_bg_color1\">";
+        echo "                  <td>Name of the contest <b>host</b>:</td>";
+        echo "                  <td><input type=\"text\" name=\"contest_host\" ";
+        echo "                          size=\"20\" value=\"$host\">";
+        echo "                          </input></td>";
+        echo "          </tr>";
+        echo "          <tr bgcolor=\"$data_bg_color1\">";
+        echo "                  <td>The contest's <b>name</b>:</td>";
+        echo "                  <td><input type=\"text\" name=\"contest_name\" ";
+        echo "                          size=\"20\" value=\"$contest_name\">";
+        echo "                          </input></td>";
+        echo "          </tr>";
+        echo "          <tr bgcolor=\"$data_bg_color1\">";
+        echo "                  <td>Database Host:</td> ";
+        echo "                  <td><input type=\"text\" name=\"dbhost\" ";
+        echo "                          size=\"20\" value=\"$username\"></td>";
+        echo "          </tr>";
+        echo "          <tr bgcolor=\"$data_bg_color1\">";
+        echo "                  <td>Database Host Password</td> ";
+        echo "                  <td><input type=password name=\"dbpassword\" ";
+        echo "                          size=\"20\" value=\"$password\"></td>";
+        echo "          </tr>";
+        echo "          <tr align=center bgcolor=\"$data_bg_color1\">";
+        echo "                  <td colspan=2> <input type=\"submit\" value=";
+        echo                    "\"Submit\" name=\"B1\"></input></td> ";
+        echo "          </tr>";
+        echo "  </table>";
+        echo "  </form>";
+?>
diff --git a/createcontest2.php b/createcontest2.php
new file mode 100755
index 0000000..5a527d7
--- /dev/null
+++ b/createcontest2.php
@@ -0,0 +1,205 @@
+<?php
+include_once("lib/session.inc");
+include_once("lib/create.inc");
+if($_POST['B1'] == "Submit") {
+   $contest = $_POST['contest_name'];
+   $dbhost = $_POST['dbhost'];
+   $dbpw = $_POST['dbpassword'];
+   $HOST = $_POST['contest_host'];
+}
+?>
+<html>
+<body bgcolor="<?=$page_bg_color?>" link="0000cc" alink="000066" vlink="0000cc">
+<table width="90%" align="center" cellpadding="1" cellspacing="0" border="0" bgcolor="#000000">
+        <tr><td>
+                <table width="100%" cellpadding="5" cellspacing="0" border="0">
+                        <tr bgcolor="<?=$title_bg_color?>">
+                                <td>
+                                <!-- Beautification hack. 2006-09-25 -sb -->
+
+                                <font color="#ffffff">
+                                <b>Creating Contest</b>  <small></small>
+                                </font>
+                                </td>
+                                <td align="right">
+                                         <font color="#ffffff">
+                                         <b>ADMIN</b>
+                                         </font>
+                                </td>
+                        </tr>
+                        <tr>
+                                <td bgcolor="#ffffff" colspan="2">
+				<center><b>
+<?php
+$db_name = preg_replace("/ /", "_", $contest);
+$contest_noesc = $contest;
+$contest = preg_replace("/ /", "\ ", $contest);
+$contest_dir = "../$contest";
+echo "<p>Creating contest folder (takes a while) . . . \n";
+   $cmd = "cp -pr ../develop/ ";
+   $cmd .= $contest_dir;
+   system($cmd, $result);
+echo "Finished.</p>\n";
+echo "<p>Clearing folders . . . ";
+   $cmd2 = "rm -rf ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/data/*";
+   system($cmd2, $result);
+   $cmd2 = "rm -rf ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/judged/*";
+   system($cmd2, $result);
+   $cmd2 = "rm -rf ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/queue/*";
+   system($cmd2, $result);
+   $cmd2 = "rm -rf ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/test_compile/*";
+   system($cmd2, $result);
+   $cmd2 = "rm -rf ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/c_jail/home/contest/*";
+   system($cmd2, $result);
+   $cmd2 = "rm -rf ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/cpp_jail/home/contest/*";
+   system($cmd2, $result);
+   $cmd2 = "rm -rf ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/java_jail/home/contest/*";
+   system($cmd2, $result);
+echo"Finished.</p>\n";
+echo "<p>Making Directories . . . ";
+   $cmd2 = "mkdir -p ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/c_jail/home/contest/";
+   $cmd2 .= $contest;
+   $cmd2 .= "/judged";
+   system($cmd2, $result);
+   $cmd2 = "mkdir -p ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/c_jail/home/contest/";
+   $cmd2 .= $contest;
+   $cmd2 .= "/data";
+   system($cmd2, $result);
+   $cmd2 = "mkdir -p ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/cpp_jail/home/contest/";
+   $cmd2 .= $contest;
+   $cmd2 .= "/judged";
+   system($cmd2, $result);
+   $cmd2 = "mkdir -p ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/cpp_jail/home/contest/";
+   $cmd2 .= $contest;
+   $cmd2 .= "/data";
+   system($cmd2, $result);
+   $cmd2 = "mkdir -p ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/java_jail/home/contest/";
+   $cmd2 .= $contest;
+   $cmd2 .= "/judged";
+   system($cmd2, $result);
+   $cmd2 = "mkdir -p ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/java_jail/home/contest/";
+   $cmd2 .= $contest;
+   $cmd2 .= "/data";
+   system($cmd2, $result);
+echo"Finished.</p>\n";
+echo "<p>Creating Database . . . ";
+   $mypwd = "pc2bgone";
+   $cmd3 = "mysqladmin --password=$mypwd -u root create $db_name";
+   system($cmd3, $result);
+   $cmd3 = "mysql --password=$mypwd -u root $db_name < dbcreate.sql";
+   system($cmd3, $result);
+   $cmd4 = "cp -r develop/ ./";
+   $cmd4 .= $contest;
+   system($cmd4, $result);
+$dbU = "contest_skeleton";
+$link = mysql_connect($dbhost, $dbU, $dbpw);
+if (!$link) {
+    print "Sorry.  Database connect failed.";
+    exit;
+}
+
+$connect_good = mysql_select_db($db_name);
+if (!$connect_good) {
+    print "Sorry.  Database selection failed.";
+    exit;
+}
+$base_dir = "/home/contest/$contest";
+$contest_info = mysql_query("INSERT INTO CONTEST_CONFIG (HOST, CONTEST_NAME, FREEZE_DELAY, CONTEST_END_DELAY, BASE_DIRECTORY, JUDGE_USER) VALUES ('$HOST', '$contest', '14400', '18000', '$base_dir', 'judge')");
+if (!$contest_info) {
+    print "Sorry.  Database request (INSERT) failed.";
+    exit;
+}
+echo"Finished.</p>";
+#-----------editing database.inc----------------------------------
+echo "<p>Editing Settings . . . ";
+$fhdl = fopen("$contest_noesc/lib/database.inc", "r") OR die("Error with opening file");
+$file = fread($fhdl, filesize("$contest_noesc/lib/database.inc"));
+$file = preg_replace("/YOUR.DB.HOST/", $dbhost, $file);
+$file = preg_replace("/YOUR_PASSWORD_HERE/", "$dbpw", $file);
+$file = preg_replace("/CONTEST_DATABASE_HERE/", "$db_name", $file);
+#$file = preg_replace("/jacob/", $dbhost, $file);
+#$file = preg_replace("/guessme/", "$dbpw", $file);
+#$file = preg_replace("/tlitwill/", "$db_name", $file);
+fclose($fhdl);
+$fhdl = fopen("$contest_noesc/lib/database.inc", "w") OR die("Error with opening file");
+$chk = fwrite($fhdl, $file);
+fclose($fhdl);
+#-------------------edit cron start-------------------------------
+$fhdl = fopen("../$contest_noesc/start_contest.crontab", "r") OR dir("Error opening start crontab");
+$file = fread($fhdl, filesize("../$contest_noesc/start_contest.crontab"));
+$file = preg_replace("/CHANGE/", "$contest", $file);
+fclose($fhdl);
+$fhdl = fopen("../$contest_noesc/start_contest.crontab", "w") OR die("Error opening start crontab");
+$chk = fwrite($fhdl, $file);
+fclose($fhdl);
+#---------editing chroot_wrapper.c--------------------------------
+$fhdl = fopen("../$contest_noesc/chroot_wrapper.c", "r") OR die("Error with opening file");
+$file = fread($fhdl, filesize("../$contest_noesc/chroot_wrapper.c"));
+$file = preg_replace("/develop/", "$contest", $file);
+#$file = preg_replace("/502/", "success", $file);
+#$file = preg_replace("/need if diff/", "502", $file);
+fclose($fhdl);
+$fhdl = fopen("../$contest_noesc/chroot_wrapper.c", "w") OR die("Error with opening file");
+$chk = fwrite($fhdl, $file);
+fclose($fhdl);
+$cmd5 = "gcc -o ../$contest_noesc/chroot_wrapper.exe ../$contest_noesc/chroot_wrapper.c";
+system($cmd5, $result);
+if($result) {
+echo "Something happened<br>";
+}
+$cmd5 = "sudo chown root:root ../$contest_noesc/chroot_wrapper.exe";
+system($cmd5, $result);
+if($result) {
+echo "Unable to set root permissions on chroot wrapper<br>";
+}
+$cmd5 = "sudo chmod +xs ../$contest_noesc/chroot_wrapper.exe";
+system($cmd5, $result);
+if($result) {
+echo "Unable to set chroot wrapper setuid<br>";
+}
+$cmd5 = "sudo chmod -R go+rx $contest_noesc";
+system($cmd5, $result);
+if ($result) {
+echo "Unable to set contest directory permissions<br />";
+}
+echo "Finished.</p>";
+#-------------------------edit readme-----------------------------
+$fhdl = fopen("readme/inst.html", "r") OR die("Error with opening file");
+$file = fread($fhdl, filesize("readme/inst.html"));
+$file = preg_replace("/URLHERE/", "http://jacob.cse.taylor.edu/~contest/$contest", $file);
+fclose($fhdl);
+$fhdl = fopen("readme/inst.html", "w") OR die("Error with opening file");
+$chk = fwrite($fhdl, $file);
+fclose($fhdl);
+#-----------------------------------------------------------------
+echo "<p>To finish setting up the contest go to: <a href='http://jacob.cse.taylor.edu/~contest/$contest_noesc/admin'>Administration setup</a></p>";
+?>
+</center></b></td></tr>
+</body>
+</html>
diff --git a/dbcreate.sql b/dbcreate.sql
new file mode 100755
index 0000000..55ea12a
--- /dev/null
+++ b/dbcreate.sql
@@ -0,0 +1,397 @@
+# phpMyAdmin MySQL-Dump
+# version 2.3.2
+# http://www.phpmyadmin.net/ (download page)
+#
+# Host: abe
+# Generation Time: Jan 4, 2005 at 09:27 AM
+# Server version: 3.23.54
+# PHP Version: 4.1.1
+# Database : `prog_contest`
+# --------------------------------------------------------
+
+#
+# Copyright (C) 2003 David Whittington
+# Copyright (C) 2005 Steve Overton
+# Copyright (C) 2005 David Crim
+# Copyright (C) 2009 Jonathan Geisler
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: dbcreate.sql
+#
+#
+# Table structure for table `CLARIFICATION_REQUESTS`
+#
+DROP TABLE IF EXISTS CLARIFICATION_REQUESTS;
+
+CREATE TABLE CLARIFICATION_REQUESTS (
+  CLARIFICATION_ID int(11) NOT NULL auto_increment,
+  TEAM_ID int(11) NOT NULL default '0',
+  PROBLEM_ID int(11) NOT NULL default '0',
+  SUBMIT_TS int(11) NOT NULL default '0',
+  QUESTION text NOT NULL,
+  REPLY_TS int(11) NOT NULL default '0',
+  RESPONSE text NOT NULL,
+  BROADCAST int(11) NOT NULL default '0',
+  PRIMARY KEY  (CLARIFICATION_ID)
+) TYPE=MyISAM;
+# --------------------------------------------------------
+
+#
+# Table structure for table `JUDGED_SUBMISSIONS`
+#
+DROP TABLE IF EXISTS JUDGED_SUBMISSIONS;
+
+CREATE TABLE JUDGED_SUBMISSIONS (
+  JUDGED_ID int(11) NOT NULL auto_increment,
+  TEAM_ID int(11) NOT NULL default '0',
+  PROBLEM_ID int(11) NOT NULL default '0',
+  TS int(11) NOT NULL default '0',
+  ATTEMPT int(11) NOT NULL default '0',
+  SOURCE_FILE char(255) NOT NULL default '',
+  RESPONSE_ID int(11) NOT NULL default '0',
+  VIEWED int(11) NOT NULL default '0',
+  JUDGED int(10) NOT NULL default '0',
+  PRIMARY KEY  (JUDGED_ID)
+) TYPE=MyISAM;
+# --------------------------------------------------------
+
+#
+# Table structure for table `QUEUED_SUBMISSIONS`
+#
+DROP TABLE IF EXISTS QUEUED_SUBMISSIONS;
+
+CREATE TABLE QUEUED_SUBMISSIONS (
+  QUEUE_ID int(11) NOT NULL auto_increment,
+  TEAM_ID int(11) NOT NULL default '0',
+  PROBLEM_ID int(11) NOT NULL default '0',
+  TS int(11) NOT NULL default '0',
+  ATTEMPT int(11) NOT NULL default '0',
+  SOURCE_FILE char(255) NOT NULL default '',
+  PRIMARY KEY  (QUEUE_ID)
+) TYPE=MyISAM;
+# --------------------------------------------------------
+
+#
+# Table structure for table `RESPONSES`
+#
+DROP TABLE IF EXISTS RESPONSES;
+
+CREATE TABLE RESPONSES (
+  RESPONSE_ID int(11) NOT NULL,
+  RESPONSE char(50) NOT NULL default '',
+  RESPONSE_COLOR char(255) NOT NULL default '',
+  PRIMARY KEY  (RESPONSE_ID)
+) TYPE=MyISAM;
+
+#
+# Set default table data
+#
+INSERT INTO RESPONSES VALUES("0","Pending","FFFF00");
+INSERT INTO RESPONSES VALUES("9","Accepted","00FF00");
+INSERT INTO RESPONSES VALUES("2","Forbidden Word in Source","FF0000");
+INSERT INTO RESPONSES VALUES("1","Undefined File Type","FF0000");
+INSERT INTO RESPONSES VALUES("3","Compile Error","FF0000");
+INSERT INTO RESPONSES VALUES("4","Exceeds Time Limit","FF0000");
+INSERT INTO RESPONSES VALUES("6","Incorrect Output","FF0000");
+INSERT INTO RESPONSES VALUES("7","Format Error","FF0000");
+INSERT INTO RESPONSES VALUES("5","Runtime Error","FF0000");
+INSERT INTO RESPONSES VALUES("8","Error (Reason Unknown)","FF0000");
+# --------------------------------------------------------
+
+#
+# Table structure for table `PROBLEMS`
+#
+DROP TABLE IF EXISTS PROBLEMS;
+
+CREATE TABLE PROBLEMS (
+  PROBLEM_ID int(11) NOT NULL auto_increment,
+  PROBLEM_NAME char(30) NOT NULL default '',
+  PROBLEM_LOC char(20) NOT NULL default '',
+  PROBLEM_NOTE char(100) NOT NULL default '',
+  PRIMARY KEY  (PROBLEM_ID)
+) TYPE=MyISAM;
+# --------------------------------------------------------
+
+#
+# Table structure for table `TEAMS`
+#
+DROP TABLE IF EXISTS TEAMS;
+
+CREATE TABLE TEAMS (
+  TEAM_ID int(11) NOT NULL auto_increment,
+  TEAM_NAME char(100) NOT NULL default '',
+  ORGANIZATION char(100) NOT NULL default '',
+  USERNAME char(30) NOT NULL default '',
+  PASSWORD char(20) NOT NULL default '',
+  SITE_ID int(11) NOT NULL default '0',
+  COACH_NAME char(30) NOT NULL default '',
+  CONTESTANT_1_NAME char(30) NOT NULL default '',
+  CONTESTANT_2_NAME char(30) NOT NULL default '',
+  CONTESTANT_3_NAME char(30) NOT NULL default '',
+  ALTERNATE_NAME char(30) NOT NULL default '',
+  EMAIL char(30) NOT NULL default '',
+  PRIMARY KEY  (TEAM_ID)
+) TYPE=MyISAM;
+# --------------------------------------------------------
+
+#
+# Table structure for table `CATEGORY_TEAM`
+#
+DROP TABLE IF EXISTS CATEGORY_TEAM;
+
+CREATE TABLE CATEGORY_TEAM (
+  TEAM_ID int(11) NOT NULL default '0',
+  CATEGORY_ID int(11) NOT NULL default'0',
+  PRIMARY KEY  (TEAM_ID,CATEGORY_ID)
+) TYPE=MyISAM;
+# --------------------------------------------------------
+
+#
+# Table structure for table `CATEGORIES`
+#
+DROP TABLE IF EXISTS CATEGORIES;
+
+CREATE TABLE CATEGORIES (
+  CATEGORY_ID int(11) NOT NULL auto_increment,
+  CATEGORY_NAME char(30) NOT NULL default '',
+  PRIMARY KEY  (CATEGORY_ID)
+) TYPE=MyISAM;
+# --------------------------------------------------------
+
+#
+# Table structure for table `SITE`
+#
+DROP TABLE IF EXISTS SITE;
+
+CREATE TABLE SITE (
+  SITE_ID int(11) NOT NULL auto_increment,
+  SITE_NAME char(30) NOT NULL default '',
+  START_TIME time NOT NULL default '0',
+  PRIMARY KEY  (SITE_ID),
+  START_TS int(11) NOT NULL default '0',
+  HAS_STARTED int(11) NOT NULL default '0'
+) TYPE=MyISAM;
+# --------------------------------------------------------
+
+#
+# Table structure for table `CONTEST_CONFIG`
+#
+DROP TABLE IF EXISTS CONTEST_CONFIG;
+
+CREATE TABLE CONTEST_CONFIG (
+  HOST char(30) NOT NULL default '',
+  CONTEST_NAME char(30) NOT NULL default '',
+  CONTEST_DATE date NOT NULL,
+  START_TIME time NOT NULL,
+  FREEZE_DELAY int(11) NOT NULL default '0',
+  CONTEST_END_DELAY int(11) NOT NULL default '0',
+  BASE_DIRECTORY char(255) NOT NULL default '',
+  QUEUE_DIRECTORY char(255) NOT NULL default '',
+  JUDGE_DIRECTORY char(255) NOT NULL default '',
+  DATA_DIRECTORY char(255) NOT NULL default '',
+  NUM_PROBLEMS int(11) NOT NULL default '0',
+  IGNORE_STDERR int(1) NOT NULL default '0',
+  JUDGE_USER char(30) NOT NULL default '',
+  JUDGE_PASS char(30) NOT NULL default '',
+  START_TS int(11) NOT NULL default '0',
+  HAS_STARTED int(11) NOT NULL default '0',
+  TEAM_SHOW smallint(1) NOT NULL default '0'
+) TYPE=MyISAM;
+# --------------------------------------------------------
+
+#
+# Table structure for table `LANGUAGE`
+#
+DROP TABLE IF EXISTS LANGUAGE;
+
+CREATE TABLE LANGUAGE (
+  LANGUAGE_ID int(11) NOT NULL auto_increment,
+  LANGUAGE_NAME char(30) NOT NULL default '',
+  MAX_CPU_TIME int(11) NOT NULL default '0',
+  CHROOT_DIRECTORY char(15) NOT NULL default '',
+  REPLACE_HEADERS int(1) NOT NULL default '0',
+  CHECK_BAD_WORDS int(1) NOT NULL default '0',
+  PRIMARY KEY  (LANGUAGE_ID)
+) TYPE=MyISAM;
+
+#
+# Set default table data
+#
+INSERT INTO LANGUAGE VALUES(NULL,"C","30","c_jail",
+	"1","1");
+INSERT INTO LANGUAGE VALUES(NULL,"CXX","30","cpp_jail",
+	"1","1");
+INSERT INTO LANGUAGE VALUES(NULL,"JAVA","60","java_jail",
+	"0","0");
+# --------------------------------------------------------
+
+#
+# Table structure for table `FILE_EXTENSIONS`
+#
+DROP TABLE IF EXISTS FILE_EXTENSIONS;
+CREATE TABLE FILE_EXTENSIONS (
+  EXT_ID int(11) NOT NULL auto_increment,
+  EXT char(10) NOT NULL default '',
+  PRIMARY KEY  (EXT_ID)
+) TYPE=MyISAM;
+
+#
+# Set default table data
+#
+INSERT INTO FILE_EXTENSIONS VALUES(NULL,"c");
+INSERT INTO FILE_EXTENSIONS VALUES(NULL,"C");
+INSERT INTO FILE_EXTENSIONS VALUES(NULL,"cpp");
+INSERT INTO FILE_EXTENSIONS VALUES(NULL,"cc");
+INSERT INTO FILE_EXTENSIONS VALUES(NULL,"java");
+# --------------------------------------------------------
+
+#
+# Table structure for table `LANGUAGE_FILE_EXTENSIONS`
+#
+DROP TABLE IF EXISTS LANGUAGE_FILE_EXTENSIONS;
+
+CREATE TABLE LANGUAGE_FILE_EXTENSIONS (
+  EXT_ID int(11) NOT NULL default '0',
+  LANGUAGE_ID int(11) NOT NULL default '0',
+  PRIMARY KEY  (EXT_ID,LANGUAGE_ID)
+) TYPE=MyISAM;
+
+#
+# Set default table data
+#
+INSERT INTO LANGUAGE_FILE_EXTENSIONS VALUES(1,1);
+INSERT INTO LANGUAGE_FILE_EXTENSIONS VALUES(2,2);
+INSERT INTO LANGUAGE_FILE_EXTENSIONS VALUES(3,2);
+INSERT INTO LANGUAGE_FILE_EXTENSIONS VALUES(4,2);
+INSERT INTO LANGUAGE_FILE_EXTENSIONS VALUES(5,3);
+# --------------------------------------------------------
+
+#
+# Table structure for table `FORBIDDEN_WORDS`
+#
+DROP TABLE IF EXISTS FORBIDDEN_WORDS;
+
+CREATE TABLE FORBIDDEN_WORDS (
+  LANGUAGE_ID int(11) NOT NULL default '0',
+  WORD char(15) NOT NULL default ''
+) TYPE=MyISAM;
+
+#
+# Set default table data
+#
+INSERT INTO FORBIDDEN_WORDS VALUES(1,"system");
+INSERT INTO FORBIDDEN_WORDS VALUES(1,"fstream");
+INSERT INTO FORBIDDEN_WORDS VALUES(1,"open");
+INSERT INTO FORBIDDEN_WORDS VALUES(1,"__asm__");
+INSERT INTO FORBIDDEN_WORDS VALUES(1,"socket");
+INSERT INTO FORBIDDEN_WORDS VALUES(1,"connect");
+INSERT INTO FORBIDDEN_WORDS VALUES(1,"accept");
+INSERT INTO FORBIDDEN_WORDS VALUES(1,"listen");
+INSERT INTO FORBIDDEN_WORDS VALUES(1,"mmap");
+INSERT INTO FORBIDDEN_WORDS VALUES(2,"system");
+INSERT INTO FORBIDDEN_WORDS VALUES(2,"fstream");
+INSERT INTO FORBIDDEN_WORDS VALUES(2,"open");
+INSERT INTO FORBIDDEN_WORDS VALUES(2,"__asm__");
+INSERT INTO FORBIDDEN_WORDS VALUES(2,"socket");
+INSERT INTO FORBIDDEN_WORDS VALUES(2,"connect");
+INSERT INTO FORBIDDEN_WORDS VALUES(2,"accept");
+INSERT INTO FORBIDDEN_WORDS VALUES(2,"listen");
+INSERT INTO FORBIDDEN_WORDS VALUES(2,"mmap");
+# --------------------------------------------------------
+
+#
+# Table structure for table `HEADERS`
+#
+DROP TABLE IF EXISTS HEADERS;
+
+CREATE TABLE HEADERS (
+  LANGUAGE_ID int(11) NOT NULL default '0',
+  HEADER char(15) NOT NULL default ''
+) TYPE=MyISAM;
+
+#
+# Set default table data
+#
+INSERT INTO HEADERS VALUES("1","stdio.h");
+INSERT INTO HEADERS VALUES("1","stdlib.h");
+INSERT INTO HEADERS VALUES("1","string.h");
+INSERT INTO HEADERS VALUES("1","math.h");
+INSERT INTO HEADERS VALUES("1","malloc.h");
+INSERT INTO HEADERS VALUES("1","ctype.h");
+INSERT INTO HEADERS VALUES("1","assert.h");
+INSERT INTO HEADERS VALUES("1","limits.h");
+INSERT INTO HEADERS VALUES("2","cassert");
+INSERT INTO HEADERS VALUES("2","cstdio");
+INSERT INTO HEADERS VALUES("2","cstdlib");
+INSERT INTO HEADERS VALUES("2","cstring");
+INSERT INTO HEADERS VALUES("2","cmath");
+INSERT INTO HEADERS VALUES("2","climits");
+INSERT INTO HEADERS VALUES("2","iostream");
+INSERT INTO HEADERS VALUES("2","sstream");
+INSERT INTO HEADERS VALUES("2","iomanip");
+INSERT INTO HEADERS VALUES("2","string");
+INSERT INTO HEADERS VALUES("2","new");
+INSERT INTO HEADERS VALUES("2","stdexcept");
+INSERT INTO HEADERS VALUES("2","cctype");
+INSERT INTO HEADERS VALUES("2","list");
+INSERT INTO HEADERS VALUES("2","queue");
+INSERT INTO HEADERS VALUES("2","stack");
+INSERT INTO HEADERS VALUES("2","vector");
+INSERT INTO HEADERS VALUES("2","map");
+INSERT INTO HEADERS VALUES("2","iterator");
+INSERT INTO HEADERS VALUES("2","bitset");
+INSERT INTO HEADERS VALUES("2","algorithm");
+INSERT INTO HEADERS VALUES("2","iomanip");
+INSERT INTO HEADERS VALUES("2","set");
+INSERT INTO HEADERS VALUES("3","java.lang.*");
+INSERT INTO HEADERS VALUES("3","java.io.*");
+INSERT INTO HEADERS VALUES("3","java.util.*");
+INSERT INTO HEADERS VALUES("3","java.math.*");
+#------------------------------------------------------------
+
+#
+# Table structure for table QUEUED_COMPILE
+#
+#
+#DROP TABLE IF EXISTS QUEUED_COMPILE;
+#
+#CREATE TABLE QUEUED_COMPILE (
+#  COMPILE_ID int(11) NOT NULL auto_increment,
+#  TEAM_ID int(11) NOT NULL default '0',
+#  PROBLEM_ID int(11) NOT NULL default '0',
+#  TS int(11) NOT NULL default '0',
+#  SOURCE_FILE varchar(255) NOT NULL,
+#  PRIMARY KEY  (COMPILE_ID)
+#) TYPE=MyISAM;
+#------------------------------------------------------------
+#
+#
+# Table structure for table JUDGED_COMPILE
+#
+#
+#DROP TABLE IF EXISTS JUDGED_COMPILE;
+#
+#CREATE TABLE JUDGED_COMPILE (
+#  COMPILE_ID int(11) NOT NULL auto_increment,
+#  TEAM_ID int(11) NOT NULL default '0',
+#  TS int(11) NOT NULL default '0',
+#  SOURCE_FILE varchar(255) NOT NULL,
+#  RESPONSE_ID int(11) NOT NULL default '0',
+#  AUTO_RESPONSE_ID int(11) NOT NULL default '0',
+#  PRIMARY KEY  (COMPILE_ID)
+#) TYPE=MyISAM;
+
+#
+# Table structure for table AUTO_RESPONSES
+#
+
+DROP TABLE IF EXISTS AUTO_RESPONSES;
+
+CREATE TABLE AUTO_RESPONSES (
+  JUDGED_ID int(11) NOT NULL default '0',
+  IN_FILE varchar(255) NOT NULL, 
+  AUTO_RESPONSE int(10) NOT NULL default '0',
+  ERROR_NO int(10) default NULL
+) TYPE=MyISAM;
diff --git a/develop/.chroot_wrapper.c.swp b/develop/.chroot_wrapper.c.swp
deleted file mode 100644
index 4f0f110..0000000
Binary files a/develop/.chroot_wrapper.c.swp and /dev/null differ
diff --git a/develop/chroot_wrapper.c b/develop/chroot_wrapper.c
old mode 100755
new mode 100644
index aab4344..7ca8ea8
--- a/develop/chroot_wrapper.c
+++ b/develop/chroot_wrapper.c
@@ -10,8 +10,6 @@
    COMMAND - the command to execute within the new chroot (local to the new chroot)
 */
 
-//edit line 26,27,28
-
 #include <sys/types.h>
 #include <unistd.h>
 #include <errno.h>
@@ -23,7 +21,6 @@
 #include <stdio.h>
 // Configurable values go here
 // Ideally, all the "configurables" (uid, gid, judge home, chroot.log) will be parameterized. -sb
-
 //Values are replaced in createcontest2
 const int JUDGE_UID = UIDCHANGEME;
 const int JUDGE_GID = GIDCHANGEME;
@@ -257,8 +254,7 @@ int main(int argc, char** argv) {
 			execvp call: %d\n%s\n", errno, msg);
 		return -1;
 	} else {
-		while(waitpid(pid, &child_exit_status, 0) != pid) {
-		}
+		while(waitpid(pid, &child_exit_status, 0) != pid) {}
 		fprintf(pErrFileP, "Parent: Child exit status%d\n", child_exit_status);
 		fprintf(pErrFileP, "Parent: Done waiting\n");
 		if(PROC) {
diff --git a/develop/dbcreate.sql b/develop/dbcreate.sql
new file mode 100755
index 0000000..29b98ab
--- /dev/null
+++ b/develop/dbcreate.sql
@@ -0,0 +1,383 @@
+# phpMyAdmin MySQL-Dump
+# version 2.3.2
+# http://www.phpmyadmin.net/ (download page)
+#
+# Host: abe
+# Generation Time: Jan 4, 2005 at 09:27 AM
+# Server version: 3.23.54
+# PHP Version: 4.1.1
+# Database : `prog_contest`
+# --------------------------------------------------------
+
+#
+# Copyright (C) 2003 David Whittington
+# Copyright (C) 2005 Steve Overton
+# Copyright (C) 2005 David Crim
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: dbcreate.sql
+#
+#
+# Table structure for table `CLARIFICATION_REQUESTS`
+#
+DROP TABLE IF EXISTS CLARIFICATION_REQUESTS;
+
+CREATE TABLE CLARIFICATION_REQUESTS (
+  CLARIFICATION_ID int(11) NOT NULL auto_increment,
+  TEAM_ID int(11) NOT NULL default '0',
+  PROBLEM_ID int(11) NOT NULL default '0',
+  SUBMIT_TS int(11) NOT NULL default '0',
+  QUESTION char(100) NOT NULL,
+  REPLY_TS int(11) NOT NULL default '0',
+  RESPONSE char(100) NOT NULL,
+  BROADCAST int(11) NOT NULL default '0',
+  PRIMARY KEY  (CLARIFICATION_ID)
+) TYPE=MyISAM;
+# --------------------------------------------------------
+
+#
+# Table structure for table `JUDGED_SUBMISSIONS`
+#
+DROP TABLE IF EXISTS JUDGED_SUBMISSIONS;
+
+CREATE TABLE JUDGED_SUBMISSIONS (
+  JUDGED_ID int(11) NOT NULL auto_increment,
+  TEAM_ID int(11) NOT NULL default '0',
+  PROBLEM_ID int(11) NOT NULL default '0',
+  TS int(11) NOT NULL default '0',
+  ATTEMPT int(11) NOT NULL default '0',
+  SOURCE_FILE char(255) NOT NULL default '',
+  RESPONSE_ID int(11) NOT NULL default '0',
+  AUTO_RESPONSE_ID int(11) NOT NULL default '0',
+  VIEWED int(10) NOT NULL default '0',
+  PRIMARY KEY  (JUDGED_ID)
+) TYPE=MyISAM;
+# --------------------------------------------------------
+
+#
+# Table structure for table `QUEUED_SUBMISSIONS`
+#
+DROP TABLE IF EXISTS QUEUED_SUBMISSIONS;
+
+CREATE TABLE QUEUED_SUBMISSIONS (
+  QUEUE_ID int(11) NOT NULL auto_increment,
+  TEAM_ID int(11) NOT NULL default '0',
+  PROBLEM_ID int(11) NOT NULL default '0',
+  TS int(11) NOT NULL default '0',
+  ATTEMPT int(11) NOT NULL default '0',
+  SOURCE_FILE char(255) NOT NULL default '',
+  PRIMARY KEY  (QUEUE_ID)
+) TYPE=MyISAM;
+# --------------------------------------------------------
+
+#
+# Table structure for table `RESPONSES`
+#
+DROP TABLE IF EXISTS RESPONSES;
+
+CREATE TABLE RESPONSES (
+  RESPONSE_ID int(11) NOT NULL,
+  RESPONSE char(50) NOT NULL default '',
+  RESPONSE_COLOR char(255) NOT NULL default '',
+  PRIMARY KEY  (RESPONSE_ID)
+) TYPE=MyISAM;
+
+#
+# Set default table data
+#
+INSERT INTO RESPONSES VALUES("0","Pending","FFFF00");
+INSERT INTO RESPONSES VALUES("1","Accepted","00FF00");
+INSERT INTO RESPONSES VALUES("2","Forbidden Word in Source","FF0000");
+INSERT INTO RESPONSES VALUES("3","Undefined File Type","FF0000");
+INSERT INTO RESPONSES VALUES("4","Compile Error","FF0000");
+INSERT INTO RESPONSES VALUES("5","Exceeds Time Limit","FF0000");
+INSERT INTO RESPONSES VALUES("6","Incorrect Output","FF0000");
+INSERT INTO RESPONSES VALUES("7","Format Error","FF0000");
+INSERT INTO RESPONSES VALUES("8","Runtime Error","FF0000");
+INSERT INTO RESPONSES VALUES("9","Error (Reason Unknown)","FF0000");
+# --------------------------------------------------------
+
+#
+# Table structure for table `PROBLEMS`
+#
+DROP TABLE IF EXISTS PROBLEMS;
+
+CREATE TABLE PROBLEMS (
+  PROBLEM_ID int(11) NOT NULL auto_increment,
+  PROBLEM_NAME char(30) NOT NULL default '',
+  PROBLEM_LOC char(20) NOT NULL default '',
+  PROBLEM_NOTE char(100) NOT NULL default '',
+  PRIMARY KEY  (PROBLEM_ID)
+) TYPE=MyISAM;
+# --------------------------------------------------------
+
+#
+# Table structure for table `TEAMS`
+#
+DROP TABLE IF EXISTS TEAMS;
+
+CREATE TABLE TEAMS (
+  TEAM_ID int(11) NOT NULL auto_increment,
+  TEAM_NAME char(30) NOT NULL default '',
+  ORGANIZATION char(50) NOT NULL default '',
+  USERNAME char(30) NOT NULL default '',
+  PASSWORD char(20) NOT NULL default '',
+  SITE_ID int(11) NOT NULL default '0',
+  COACH_NAME char(30) NOT NULL default '',
+  CONTESTANT_1_NAME char(30) NOT NULL default '',
+  CONTESTANT_2_NAME char(30) NOT NULL default '',
+  CONTESTANT_3_NAME char(30) NOT NULL default '',
+  ALTERNATE_NAME char(30) NOT NULL default '',
+  EMAIL char(30) NOT NULL default '',
+  PRIMARY KEY  (TEAM_ID)
+) TYPE=MyISAM;
+# --------------------------------------------------------
+
+#
+# Table structure for table `CATEGORY_TEAM`
+#
+DROP TABLE IF EXISTS CATEGORY_TEAM;
+
+CREATE TABLE CATEGORY_TEAM (
+  TEAM_ID int(11) NOT NULL default '0',
+  CATEGORY_ID int(11) NOT NULL default'0',
+  PRIMARY KEY  (TEAM_ID,CATEGORY_ID)
+) TYPE=MyISAM;
+# --------------------------------------------------------
+
+#
+# Table structure for table `CATEGORIES`
+#
+DROP TABLE IF EXISTS CATEGORIES;
+
+CREATE TABLE CATEGORIES (
+  CATEGORY_ID int(11) NOT NULL auto_increment,
+  CATEGORY_NAME char(30) NOT NULL default '',
+  PRIMARY KEY  (CATEGORY_ID)
+) TYPE=MyISAM;
+# --------------------------------------------------------
+
+#
+# Table structure for table `SITE`
+#
+DROP TABLE IF EXISTS SITE;
+
+CREATE TABLE SITE (
+  SITE_ID int(11) NOT NULL auto_increment,
+  SITE_NAME char(30) NOT NULL default '',
+  START_TIME time NOT NULL default '',
+  PRIMARY KEY  (SITE_ID),
+  START_TS int(11) NOT NULL default '0',
+  HAS_STARTED int(11) NOT NULL default '0'
+) TYPE=MyISAM;
+# --------------------------------------------------------
+
+#
+# Table structure for table `CONTEST_CONFIG`
+#
+DROP TABLE IF EXISTS CONTEST_CONFIG;
+
+CREATE TABLE CONTEST_CONFIG (
+  HOST char(30) NOT NULL default '',
+  CONTEST_NAME char(30) NOT NULL default '',
+  CONTEST_DATE date NOT NULL,
+  START_TIME time NOT NULL,
+  FREEZE_DELAY int(11) NOT NULL default '0',
+  CONTEST_END_DELAY int(11) NOT NULL default '0',
+  BASE_DIRECTORY char(255) NOT NULL default '',
+  QUEUE_DIRECTORY char(255) NOT NULL default '',
+  JUDGE_DIRECTORY char(255) NOT NULL default '',
+  DATA_DIRECTORY char(255) NOT NULL default '',
+  NUM_PROBLEMS int(11) NOT NULL default '0',
+  IGNORE_STDERR int(1) NOT NULL default '0',
+  JUDGE_USER char(30) NOT NULL default '',
+  JUDGE_PASS char(30) NOT NULL default '',
+  START_TS int(11) NOT NULL default '0',
+  HAS_STARTED int(11) NOT NULL default '0',
+  TEAM_SHOW smallint(1) NOT NULL default '0'
+) TYPE=MyISAM;
+# --------------------------------------------------------
+
+#
+# Table structure for table `LANGUAGE`
+#
+DROP TABLE IF EXISTS LANGUAGE;
+
+CREATE TABLE LANGUAGE (
+  LANGUAGE_ID int(11) NOT NULL auto_increment,
+  LANGUAGE_NAME char(30) NOT NULL default '',
+  MAX_CPU_TIME int(11) NOT NULL default '0',
+  CHROOT_DIRECTORY char(15) NOT NULL default '',
+  REPLACE_HEADERS int(1) NOT NULL default '0',
+  CHECK_BAD_WORDS int(1) NOT NULL default '0',
+  PRIMARY KEY  (LANGUAGE_ID)
+) TYPE=MyISAM;
+
+#
+# Set default table data
+#
+INSERT INTO LANGUAGE VALUES(NULL,"C","30","c_jail",
+	"1","1");
+INSERT INTO LANGUAGE VALUES(NULL,"C++","30","cpp_jail",
+	"1","1");
+INSERT INTO LANGUAGE VALUES(NULL,"JAVA","60","java_jail",
+	"0","0");
+# --------------------------------------------------------
+
+#
+# Table structure for table `FILE_EXTENSIONS`
+#
+DROP TABLE IF EXISTS FILE_EXTENSIONS;
+CREATE TABLE FILE_EXTENSIONS (
+  EXT_ID int(11) NOT NULL auto_increment,
+  EXT char(10) NOT NULL default '',
+  PRIMARY KEY  (EXT_ID)
+) TYPE=MyISAM;
+
+#
+# Set default table data
+#
+INSERT INTO FILE_EXTENSIONS VALUES(NULL,"c");
+INSERT INTO FILE_EXTENSIONS VALUES(NULL,"C");
+INSERT INTO FILE_EXTENSIONS VALUES(NULL,"cpp");
+INSERT INTO FILE_EXTENSIONS VALUES(NULL,"cc");
+INSERT INTO FILE_EXTENSIONS VALUES(NULL,"java");
+# --------------------------------------------------------
+
+#
+# Table structure for table `LANGUAGE_FILE_EXTENSIONS`
+#
+DROP TABLE IF EXISTS LANGUAGE_FILE_EXTENSIONS;
+
+CREATE TABLE LANGUAGE_FILE_EXTENSIONS (
+  EXT_ID int(11) NOT NULL default '0',
+  LANGUAGE_ID int(11) NOT NULL default '0',
+  PRIMARY KEY  (EXT_ID,LANGUAGE_ID)
+) TYPE=MyISAM;
+
+#
+# Set default table data
+#
+INSERT INTO LANGUAGE_FILE_EXTENSIONS VALUES(1,1);
+INSERT INTO LANGUAGE_FILE_EXTENSIONS VALUES(2,2);
+INSERT INTO LANGUAGE_FILE_EXTENSIONS VALUES(3,2);
+INSERT INTO LANGUAGE_FILE_EXTENSIONS VALUES(4,2);
+INSERT INTO LANGUAGE_FILE_EXTENSIONS VALUES(5,3);
+# --------------------------------------------------------
+
+#
+# Table structure for table `FORBIDDEN_WORDS`
+#
+DROP TABLE IF EXISTS FORBIDDEN_WORDS;
+
+CREATE TABLE FORBIDDEN_WORDS (
+  LANGUAGE_ID int(11) NOT NULL default '0',
+  WORD char(15) NOT NULL default ''
+) TYPE=MyISAM;
+
+#
+# Set default table data
+#
+INSERT INTO FORBIDDEN_WORDS VALUES(1,"system");
+INSERT INTO FORBIDDEN_WORDS VALUES(1,"fstream");
+INSERT INTO FORBIDDEN_WORDS VALUES(1,"open");
+INSERT INTO FORBIDDEN_WORDS VALUES(1,"__asm__");
+INSERT INTO FORBIDDEN_WORDS VALUES(1,"socket");
+INSERT INTO FORBIDDEN_WORDS VALUES(1,"connect");
+INSERT INTO FORBIDDEN_WORDS VALUES(1,"accept");
+INSERT INTO FORBIDDEN_WORDS VALUES(1,"listen");
+INSERT INTO FORBIDDEN_WORDS VALUES(1,"mmap");
+INSERT INTO FORBIDDEN_WORDS VALUES(2,"system");
+INSERT INTO FORBIDDEN_WORDS VALUES(2,"fstream");
+INSERT INTO FORBIDDEN_WORDS VALUES(2,"open");
+INSERT INTO FORBIDDEN_WORDS VALUES(2,"__asm__");
+INSERT INTO FORBIDDEN_WORDS VALUES(2,"socket");
+INSERT INTO FORBIDDEN_WORDS VALUES(2,"connect");
+INSERT INTO FORBIDDEN_WORDS VALUES(2,"accept");
+INSERT INTO FORBIDDEN_WORDS VALUES(2,"listen");
+INSERT INTO FORBIDDEN_WORDS VALUES(2,"mmap");
+# --------------------------------------------------------
+
+#
+# Table structure for table `HEADERS`
+#
+DROP TABLE IF EXISTS HEADERS;
+
+CREATE TABLE HEADERS (
+  LANGUAGE_ID int(11) NOT NULL default '0',
+  HEADER char(15) NOT NULL default ''
+) TYPE=MyISAM;
+
+#
+# Set default table data
+#
+INSERT INTO HEADERS VALUES("1","stdio.h");
+INSERT INTO HEADERS VALUES("1","stdlib.h");
+INSERT INTO HEADERS VALUES("1","string.h");
+INSERT INTO HEADERS VALUES("1","math.h");
+INSERT INTO HEADERS VALUES("1","malloc.h");
+INSERT INTO HEADERS VALUES("1","ctype.h");
+INSERT INTO HEADERS VALUES("1","assert.h");
+INSERT INTO HEADERS VALUES("1","limits.h");
+INSERT INTO HEADERS VALUES("2","cassert");
+INSERT INTO HEADERS VALUES("2","cstdio");
+INSERT INTO HEADERS VALUES("2","cstdlib");
+INSERT INTO HEADERS VALUES("2","cstring");
+INSERT INTO HEADERS VALUES("2","cmath");
+INSERT INTO HEADERS VALUES("2","climits");
+INSERT INTO HEADERS VALUES("2","iostream");
+INSERT INTO HEADERS VALUES("2","sstream");
+INSERT INTO HEADERS VALUES("2","iomanip");
+INSERT INTO HEADERS VALUES("2","string");
+INSERT INTO HEADERS VALUES("2","new");
+INSERT INTO HEADERS VALUES("2","stdexcept");
+INSERT INTO HEADERS VALUES("2","cctype");
+INSERT INTO HEADERS VALUES("2","list");
+INSERT INTO HEADERS VALUES("2","queue");
+INSERT INTO HEADERS VALUES("2","stack");
+INSERT INTO HEADERS VALUES("2","vector");
+INSERT INTO HEADERS VALUES("2","map");
+INSERT INTO HEADERS VALUES("2","iterator");
+INSERT INTO HEADERS VALUES("2","bitset");
+INSERT INTO HEADERS VALUES("2","algorithm");
+INSERT INTO HEADERS VALUES("2","iomanip");
+INSERT INTO HEADERS VALUES("2","set");
+INSERT INTO HEADERS VALUES("3","java.lang.*");
+INSERT INTO HEADERS VALUES("3","java.io.*");
+INSERT INTO HEADERS VALUES("3","java.util.*");
+INSERT INTO HEADERS VALUES("3","java.math.*");
+#------------------------------------------------------------
+
+#
+# Table structure for table QUEUED_COMPILE
+#
+
+DROP TABLE IF EXISTS QUEUED_COMPILE;
+
+CREATE TABLE QUEUED_COMPILE (
+  COMPILE_ID int(11) NOT NULL auto_increment,
+  TEAM_ID int(11) NOT NULL default '0',
+  PROBLEM_ID int(11) NOT NULL default '0',
+  TS int(11) NOT NULL default '0',
+  SOURCE_FILE varchar(255) NOT NULL,
+  PRIMARY KEY  (COMPILE_ID)
+) TYPE=MyISAM;
+#------------------------------------------------------------
+
+#
+# Table structure for table JUDGED_COMPILE
+#
+
+DROP TABLE IF EXISTS JUDGED_COMPILE;
+
+CREATE TABLE JUDGED_COMPILE (
+  COMPILE_ID int(11) NOT NULL auto_increment,
+  TEAM_ID int(11) NOT NULL default '0',
+  TS int(11) NOT NULL default '0',
+  SOURCE_FILE varchar(255) NOT NULL,
+  RESPONSE_ID int(11) NOT NULL default '0',
+  AUTO_RESPONSE_ID int(11) NOT NULL default '0',
+  PRIMARY KEY  (COMPILE_ID)
+) TYPE=MyISAM;
diff --git a/develop/new_chroot_wrapper.c b/develop/new_chroot_wrapper.c
old mode 100755
new mode 100644
index 75fb513..890c142
--- a/develop/new_chroot_wrapper.c
+++ b/develop/new_chroot_wrapper.c
@@ -281,7 +281,7 @@ void execute_command(const char *path, const char *command, const char *input, c
 
 	char* msg = (char*)strerror(errno);
 	child_log("Child: An error has occured during the \
-		  execvp call: %d\n%s\n", errno, msg);
+		execvp call: %d\n%s\n", errno, msg);
 	exit(-1);
 }
 
diff --git a/develop/start_contest.crontab b/develop/start_contest.crontab
new file mode 100644
index 0000000..711bce9
--- /dev/null
+++ b/develop/start_contest.crontab
@@ -0,0 +1 @@
+* * * * * /home/contest/public_html/CHANGE/judge/cronScript.php >/dev/null 2>&1
diff --git a/develop/stop_contest.crontab b/develop/stop_contest.crontab
new file mode 100644
index 0000000..4218937
--- /dev/null
+++ b/develop/stop_contest.crontab
@@ -0,0 +1 @@
+#this file has nothing for crontab to do
diff --git a/index.php b/index.php
new file mode 100755
index 0000000..2229f9e
--- /dev/null
+++ b/index.php
@@ -0,0 +1,87 @@
+<?
+#
+# Copyright (C) 2002 David Whittington
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/index.php
+#
+#    include("lib/admin_config.inc");
+    include("lib/create.inc");
+
+session_name("TOUCHE-CREATE");
+session_start();
+$_SESSION = array();
+
+if($_SERVER['REQUEST_METHOD'] == 'GET'){
+
+?>
+<!DOCTYPE HTML PUBLIC "-//W3C/DTD HTML 4.0 Transitional//EN">
+<html>
+<head>
+<script language="javascript">
+    function set_focus() {
+	if (document.f.user.value) {
+	    document.f.password.focus();
+	} else {
+	    document.f.user.focus();
+	}
+    }
+</script>
+</head>
+<body bgcolor=<?=$page_bg_color?> onLoad="set_focus()">
+
+<form name="f" method="post" action="index.php">
+<table align="center" height="100%" border="0"><tr><td>
+<table cellpadding="1" cellspacing="0" border="0" bgcolor="#000000"><tr><td>
+<table cellpadding="5" cellspacing="0" border="0" bgcolor="<?=$title_bg_color?>"><tr><td>
+<font color="#ffffff">
+<b>Touche</b><br>
+<small>Creating Contest</small>
+</font>
+</td></tr><tr><td bgcolor="#ffffff">
+<?
+
+    if (isset($state) && $state == 1) {
+	echo "<center><font color=#cc0000><b>";
+	echo "Login or Password Invalid</b></font></center>\n";
+    }
+    else if (isset($state) && $state == 2) {
+	echo "<center><font color=#cc0000><b>";
+	    echo "You are not yet logged in</b></font></center>\n";
+    }
+
+?><table cellpadding="5" cellspacing="0" border="0">
+<tr><td>Login:</td><td><input type="text" name="user" size="20">
+</td></tr>
+<tr><td>Password:</td><td><input type="password" name="password" size="20"></td></tr>
+<tr><td>&nbsp;</td><td><input type="submit" name="submit" value="  OK  ">
+<input type="reset" name="submit" value=" Cancel "></td></tr>
+</table>
+</td></tr></table>
+</td></tr></table>
+</td></tr></table>
+</form>
+
+</body>
+</html>
+<?
+}
+else if($_SERVER['REQUEST_METHOD'] == 'POST'){
+    $user = $_POST['user'];
+    $password = $_POST['password'];
+
+    if($user == $create_user && $password == $create_pass) {
+	$_SESSION['admin_user'] = $user;
+	$_SESSION['admin_pass'] = $password;
+	header ("Location: createcontest.php");
+	exit(0);
+    }
+    else {
+    	header ("Location: index.php?state=1");
+	exit(0);
+    }
+}
+?>
+
diff --git a/lib/create.inc b/lib/create.inc
new file mode 100644
index 0000000..8bee895
--- /dev/null
+++ b/lib/create.inc
@@ -0,0 +1,20 @@
+<?php
+	$page_bg_color  = "#cccccc";
+        $body_bg_color  = "#ffffff";
+        $title_bg_color = "#3480ba";
+        $hd_bg_color1   = "#3480ba";
+        $hd_bg_color2   = "#cccc99";
+        $data_bg_color1 = "#dddddd";
+        $data_bg_color2 = "#cccc99";
+
+        $page_txt_color  = "#000000";
+        $body_txt_color  = "#ffffff";
+        $title_txt_color = "#ffffff";
+        $hd_txt_color1   = "#ffffff";
+        $hd_txt_color2   = "#000000";
+        $data_txt_color1 = "#000000";
+        $data_txt_color2 = "#000000";
+
+	$create_user = "create";
+	$create_pass = "contest";
+?>
diff --git a/lib/session.inc b/lib/session.inc
new file mode 100644
index 0000000..e614b74
--- /dev/null
+++ b/lib/session.inc
@@ -0,0 +1,14 @@
+<?
+    include_once("create.inc");
+
+    session_name("TOUCHE-CREATE");
+    session_start();
+        header ("expires:Tuesday, 25 Apr 1995 09:30:00 -0700");
+    if(   $_SESSION['admin_user'] != $create_user
+       || $_SESSION['admin_pass'] != $create_pass)
+    {
+        header ("Location: index.php?state=2");
+        exit(0);
+    }
+?>
+
diff --git a/master-crontab.cron b/master-crontab.cron
index 040bd46..e22da26 100755
--- a/master-crontab.cron
+++ b/master-crontab.cron
@@ -1,6 +1,7 @@
 #!/bin/sh
 
 # Copyright (C) 2013 Jonathan Geisler
+
 # Replace touche with the correct user folder
 
 if [ `ls $HOME/active-contests | wc -l` -gt 0 ] ; then
diff --git a/public_html/Lang/C.inc b/public_html/Lang/C.inc
new file mode 100755
index 0000000..d4618c8
--- /dev/null
+++ b/public_html/Lang/C.inc
@@ -0,0 +1,44 @@
+<?
+include("generic.inc");
+
+function C_init($problem_handle) {
+	$problem_handle['preprocess'] = "c_preprocess";
+	$problem_handle['compile'] = "c_compile";
+	$problem_handle['execute'] = "generic_execute";
+	$problem_handle['post_process'] = "generic_post_process";
+	$problem_handle['copy_cmd'] = "generic_copy";
+	$problem_handle['process_errors'] = "generic_process_errors";
+}
+
+function c_preprocess($replace_headers) {
+    global $problem_handle;
+    $replace_text = "";
+    foreach($replace_headers as $header) {
+        $replace_text .= "#include <$header>\n";
+    }
+
+    $pattern = "/#include\s*[<\"](\s|\w|\.)+[\">]/";
+    $replace = "";
+    $replace_text.= preg_replace($pattern,
+        $replace,
+        $problem_handle['judged_source']);
+    $problem_handle['judged_source'] = $replace_text;
+}
+
+function c_compile() {
+    global $problem_handle;
+    $command  = "gcc ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= ".";
+    $command .= $problem_handle['file_extension'];
+    $command .= " -lm -o ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= " &> ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= ".err";
+    return $command;
+}
+?>
diff --git a/public_html/Lang/CXX.inc b/public_html/Lang/CXX.inc
new file mode 100755
index 0000000..e6453cd
--- /dev/null
+++ b/public_html/Lang/CXX.inc
@@ -0,0 +1,44 @@
+<?
+include_once("generic.inc");
+
+function CXX_init($problem_handle) {
+	$problem_handle['preprocess'] = "cxx_preprocess";
+	$problem_handle['compile'] = "cxx_compile";
+	$problem_handle['execute'] = "generic_execute";
+	$problem_handle['post_process'] = "generic_post_process";
+	$problem_handle['copy_cmd'] = "generic_copy";
+	$problem_handle['process_errors'] = "generic_process_errors";
+}
+
+function cxx_preprocess($replace_headers) {
+    global $problem_handle;
+    $replace_text = "";
+    foreach($replace_headers as $header) {
+        $replace_text .= "#include <$header>\n";
+    }
+
+    $pattern = "/#include\s*[<\"](\s|\w|\.)+[\">]/";
+    $replace = "";
+    $replace_text.= preg_replace($pattern,
+        $replace,
+        $problem_handle['judged_source']);
+    $problem_handle['judged_source'] = $replace_text;
+}
+
+function cxx_compile() {
+	global $problem_handle;
+    $command  = "g++ ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= ".";
+    $command .= $problem_handle['file_extension'];
+    $command .= " -fno-asm -lm -w -o ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= " &> ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= ".err";
+    return $command;
+}
+?>
diff --git a/public_html/Lang/JAVA.inc b/public_html/Lang/JAVA.inc
new file mode 100755
index 0000000..a2e7599
--- /dev/null
+++ b/public_html/Lang/JAVA.inc
@@ -0,0 +1,114 @@
+<?
+include_once("generic.inc");
+
+function JAVA_init($problem_handle) {
+	$problem_handle['preprocess'] = "java_preprocess";
+	$problem_handle['compile'] = "java_compile";
+	$problem_handle['execute'] = "java_execute";
+	$problem_handle['post_process'] = "java_post_process";
+	$problem_handle['copy_cmd'] = "java_copy";
+	$problem_handle['use_proc_fs'] = 1; 
+	$problem_handle['process_errors'] = "generic_process_errors"; 
+}
+
+function java_copy(){
+	global $problem_handle;
+	global $chroot_directory;
+	$tmp_cmd = "cp -pr ";
+	$tmp_cmd .= $problem_handle['judged_dir'];
+	$tmp_cmd .= $problem_handle['file_name'];
+	$tmp_cmd .= " ";
+	$tmp_cmd .= $chroot_directory;
+	$tmp_cmd .= $problem_handle['judged_dir'];
+	$tmp_cmd .= $problem_handle['file_name'];
+	return $tmp_cmd;
+}
+
+function java_preprocess($replace_headers) {
+    global $problem_handle;
+    $pattern = "/import\s+\S+\s*/";
+    $replace = "";
+    $replace_text = "";
+    foreach($replace_headers as $header) {
+	$replace_text .= "import $header;\n";
+    }
+
+    $replace_text .= preg_replace($pattern,
+	$replace,
+	$problem_handle['judged_source']);
+    $problem_handle['judged_source'] = $replace_text;
+}
+
+function java_compile() {
+    global $problem_handle;
+    mkdir($problem_handle['judged_dir'] . $problem_handle['file_name'], 0700);
+
+// Embedded version assumption! -- Needs to be "parameterized" through a setting in some config file. -sb
+    $command  = "/usr/java/jdk1.5.0_02/bin/javac ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= ".java -d ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= " &> ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= ".err";
+    return $command;
+}
+
+function java_execute() {
+    global $problem_handle;
+    $mem_size = "128M";
+// Embedded version assumption! -- Needs to be "parameterized" through a setting in some config file. -sb
+    $command  = "\"/usr/java/jdk1.5.0_02/bin/java -Xms$mem_size -Xmx$mem_size -jar ";
+    $command .= $problem_handle['jar_filename'] . "\"";
+    return $command;
+}
+
+function java_post_process() {
+    global $problem_handle;
+    $manifest_filename  = $problem_handle['judged_dir'];
+    $manifest_filename .= $problem_handle['file_name'];
+    $manifest_filename .= "/manifest.mf";
+
+    # JGG
+    #
+    # This assumes two critical things:
+    #   1. The first class name contains the main method.  We don't
+    #      know where to look otherwise.
+    #   2. The same first class is not declared as public.  The
+    #      compiler will not let us compile a public class without
+    #      using the same name as the class for the filename!!!
+    #
+    #preg_match("/class\s+(\w+)/",
+    #	$problem_handle['judged_source'],
+    #	$classes);
+    #$main_class = $classes[1];
+    $main_class = "Main";
+    echo "<br>PostProcess:: main_class = $main_class<br>\n";
+    $output = fopen($manifest_filename,"w+");
+    if(!$output) {
+	echo "Error: Could not open file";
+	die("Error creating the manifest list file");
+    }
+    fwrite($output, "Manifest-Version: 1.0\n");
+    fwrite($output, "Main-Class: $main_class\n");
+    fclose($output);
+	
+    $problem_handle['jar_filename']  = $problem_handle['judged_dir'];
+    $problem_handle['jar_filename'] .= $problem_handle['file_name'];
+    $problem_handle['jar_filename'] .= "/$main_class.jar";
+
+    $command  = "jar cfm ";
+    $command .= $problem_handle['jar_filename'];
+    $command .= " $manifest_filename -C ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= "/ . &> ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= ".err";
+    return $command;
+}
+?>
diff --git a/public_html/Lang/generic.inc b/public_html/Lang/generic.inc
new file mode 100755
index 0000000..6f7d8cf
--- /dev/null
+++ b/public_html/Lang/generic.inc
@@ -0,0 +1,36 @@
+<?
+
+$problem_handle['use_proc_fs'] = 0;
+function generic_copy() {
+	global $problem_handle;
+	global $chroot_directory;
+	$tmp_cmd = "cp ";
+	$tmp_cmd .= $problem_handle['judged_dir'];
+	$tmp_cmd .= $problem_handle['file_name'];
+	$tmp_cmd .= " ";
+	$tmp_cmd .= $chroot_directory;
+	$tmp_cmd .= $problem_handle['judged_dir'];
+	$tmp_cmd .= $problem_handle['file_name'];
+	return $tmp_cmd;
+}
+function generic_execute() {
+	global $problem_handle;
+    $command  = $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    return $command;
+}
+function generic_post_process() {
+    global $problem_handle;
+    $command  = "strip --strip-all ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= " &> ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= ".err";
+    return $command;
+}
+function generic_process_errors($errors, $orig_file_name) {
+        return preg_replace("/^[^:]+:/m", "$orig_file_name:", $errors);
+}
+?>
diff --git a/public_html/admin/changepw.php b/public_html/admin/changepw.php
new file mode 100755
index 0000000..4120311
--- /dev/null
+++ b/public_html/admin/changepw.php
@@ -0,0 +1,91 @@
+<?php
+
+include_once("lib/session.inc");
+if($_SERVER['REQUEST_METHOD'] == 'POST'){
+    $user = $_POST['user'];
+    $password = $_POST['password'];
+    $password2 = $_POST['password2'];
+	echo "pw: $password, pw2: $password2, usr: $user";
+if($user && $password && $password2) {
+    if($password == $password2) {
+	#change the user and password file
+	$fhdl = fopen("lib/admin_config.inc", "r") OR dir("Error opening admin_config");
+	$file = fread($fhdl, filesize("lib/admin_config.inc"));
+	$file = preg_replace("/user = \"admin\"/", "user = \"$user\"", $file);
+	$file = preg_replace("/pass = \"admin\"/", "pass = \"$password\"", $file);
+	fclose($fhdl);
+	$fhdl = fopen("lib/admin_config.inc", "w") OR die("Error opening admin_config");
+	$chk = fwrite($fhdl, $file);
+	fclose($fhdl);
+	$_SESSION['admin_user'] = $user;
+        $_SESSION['admin_pass'] = $password;
+	echo "<script type=\"text/javascript\"> window.location = 'setup_contest.php'  </script>";
+        exit(0);
+    } else {
+	echo "<script type=\"text/javascript\"> window.location = 'changepw.php?state=1'  </script>";
+        exit(0);
+      }
+}
+else {
+	echo "<script type=\"text/javascript\"> window.location = 'changepw.php?state=1'  </script>";
+        exit(0);
+ }
+}
+else if($_SERVER['REQUEST_METHOD'] == 'GET'){
+
+?>
+<!DOCTYPE HTML PUBLIC "-//W3C/DTD HTML 4.0 Transitional//EN">
+<html>
+<head>
+<script language="javascript">
+    function set_focus() {
+        if (document.f.user.value) {
+            document.f.password.focus();
+        } else if (document.f.password.value) {
+            document.f.password2.focus();
+        } else {
+	    document.f.user.focus();
+	}
+    }
+</script>
+</head>
+<body bgcolor=<?=$page_bg_color?> onLoad="set_focus()">
+
+<form name="f" method="post" action="changepw.php">
+<table align="center" height="100%" border="0"><tr><td>
+<table cellpadding="1" cellspacing="0" border="0" bgcolor="#000000"><tr><td>
+<table cellpadding="5" cellspacing="0" border="0" bgcolor="<?=$title_bg_color?>"><tr><td>
+<font color="#ffffff">
+<b>Please Change Login Info</b><br>
+<small></small>
+</font>
+</td></tr><tr><td bgcolor="#ffffff">
+<?
+
+    if (isset($state) && $state == 1) {
+        echo "<center><font color=#cc0000><b>";
+        echo "Login or Password Invalid</b></font></center>\n";
+    }
+    else if (isset($state) && $state == 2) {
+        echo "<center><font color=#cc0000><b>";
+            echo "You are not yet logged in</b></font></center>\n";
+    }
+
+?><table cellpadding="5" cellspacing="0" border="0">
+<tr><td>Login:</td><td><input type="text" name="user" size="20">
+</td></tr>
+<tr><td>Password:</td><td><input type="password" name="password" size="20"></td></tr>
+<tr><td>Retype:</td><td><input type="password" name="password2" size="20"></td></tr>
+<tr><td>&nbsp;</td><td><input type="submit" name="submit" value="  OK  ">
+<input type="reset" name="submit" value=" Cancel "></td></tr>
+</table>
+</td></tr></table>
+</td></tr></table>
+</td></tr></table>
+</form>
+
+</body>
+</html>
+<?
+}
+?>
diff --git a/public_html/admin/email_body.txt b/public_html/admin/email_body.txt
new file mode 100644
index 0000000..db5b496
--- /dev/null
+++ b/public_html/admin/email_body.txt
@@ -0,0 +1 @@
+These are your teams files from the programming contest.
diff --git a/public_html/admin/index.php b/public_html/admin/index.php
new file mode 100755
index 0000000..d4b0758
--- /dev/null
+++ b/public_html/admin/index.php
@@ -0,0 +1,91 @@
+<?
+#
+# Copyright (C) 2002 David Whittington
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/index.php
+#
+    include("lib/admin_config.inc");
+    include("lib/data.inc");
+
+session_name("TOUCHE-$db_name");
+session_start();
+$_SESSION = array();
+
+if($_SERVER['REQUEST_METHOD'] == 'POST'){
+    $user = $_POST['user'];
+    $password = $_POST['password'];
+
+    if($user == $admin_user && $password == $admin_pass) {
+	$_SESSION['admin_user'] = $user;
+	$_SESSION['admin_pass'] = $password;
+	if($user == "admin" && $password == "admin") {
+		header ("Location: changepw.php");
+	} else {
+		header ("Location: setup_contest.php");
+	}
+	exit(0);
+    }
+    else {
+    	header ("Location: index.php?state=1");
+	exit(0);
+    }
+}
+
+else if($_SERVER['REQUEST_METHOD'] == 'GET'){
+
+?>
+<!DOCTYPE HTML PUBLIC "-//W3C/DTD HTML 4.0 Transitional//EN">
+<html>
+<head>
+<script language="javascript">
+    function set_focus() {
+	if (document.f.user.value) {
+	    document.f.password.focus();
+	} else {
+	    document.f.user.focus();
+	}
+    }
+</script>
+</head>
+<body bgcolor=<?=$page_bg_color?> onLoad="set_focus()">
+
+<form name="f" method="post" action="index.php">
+<table align="center" height="100%" border="0"><tr><td>
+<table cellpadding="1" cellspacing="0" border="0" bgcolor="#000000"><tr><td>
+<table cellpadding="5" cellspacing="0" border="0" bgcolor="<?=$title_bg_color?>"><tr><td>
+<font color="#ffffff">
+<b><?=$contest_name?></b><br>
+<small><?=$contest_host?></small>
+</font>
+</td></tr><tr><td bgcolor="#ffffff">
+<?
+
+    if (isset($state) && $state == 1) {
+	echo "<center><font color=#cc0000><b>";
+	echo "Login or Password Invalid</b></font></center>\n";
+    }
+    else if (isset($state) && $state == 2) {
+	echo "<center><font color=#cc0000><b>";
+	    echo "You are not yet logged in</b></font></center>\n";
+    }
+
+?><table cellpadding="5" cellspacing="0" border="0">
+<tr><td>Login:</td><td><input type="text" name="user" size="20">
+</td></tr>
+<tr><td>Password:</td><td><input type="password" name="password" size="20"></td></tr>
+<tr><td>&nbsp;</td><td><input type="submit" name="submit" value="  OK  ">
+<input type="reset" name="submit" value=" Cancel "></td></tr>
+</table>
+</td></tr></table>
+</td></tr></table>
+</td></tr></table>
+</form>
+
+</body>
+</html>
+<?php
+}
+?>
diff --git a/public_html/admin/lib/admin_config.inc b/public_html/admin/lib/admin_config.inc
new file mode 100755
index 0000000..0958a67
--- /dev/null
+++ b/public_html/admin/lib/admin_config.inc
@@ -0,0 +1,38 @@
+<?php
+#
+# Copyright (C) 2002 David Whittington
+# Copyright (C) 2004 Jonathan Geisler
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: lib/admin_config.inc
+#
+	include_once("database.inc");
+
+	$page_bg_color  = "#cccccc";
+	$body_bg_color  = "#ffffff";
+	$title_bg_color = "#3480ba";
+	$hd_bg_color1   = "#3480ba";
+	$hd_bg_color2   = "#cccc99";
+	$data_bg_color1 = "#dddddd";
+	$data_bg_color2 = "#cccc99";
+
+	$page_txt_color  = "#000000";
+	$body_txt_color  = "#ffffff";
+	$title_txt_color = "#ffffff";
+	$hd_txt_color1   = "#ffffff";
+	$hd_txt_color2   = "#000000";
+	$data_txt_color1 = "#000000";
+	$data_txt_color2 = "#000000";
+
+	$admin_user = "admin";
+	$admin_pass = "admin";
+
+#
+# $base_dir must be updated for the machine it is installed on.
+# Intentionally commenting it out in "official" sources to force
+# others to put in the right location for their archive.
+#
+#	$base_dir = "/home/jgeisler/ProgContest/judge/contest";
+?>
diff --git a/public_html/admin/lib/contest_info.inc b/public_html/admin/lib/contest_info.inc
new file mode 100755
index 0000000..0d251a3
--- /dev/null
+++ b/public_html/admin/lib/contest_info.inc
@@ -0,0 +1,47 @@
+<?
+#
+# Copyright (C) 2002, 2003 David Whittington
+# Copyright (C) 2003, 2005 Jonathan Geisler
+# Copyright (C) 2005 Victor Replogle
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: lib/contest_info.inc
+#
+
+$contest_info = mysql_query("SELECT * FROM CONTEST_CONFIG");
+if (!$contest_info) {
+    print "Sorry.  Database request (CONTEST_CONFIG) failed.  Retrying...";
+    exit;
+}
+
+$row = mysql_fetch_assoc($contest_info);
+    if (mysql_num_rows($contest_info) < 1) {
+        print "Sorry.  No contest configuration information exists.<br /> ";
+        print "Please contact a system administrator.";
+        #exit;
+    }
+
+    $contest_host = $row['HOST'];
+    $contest_name = $row['CONTEST_NAME'];
+    $contest_date = $row['CONTEST_DATE'];
+    list ($contest_year, $contest_month, $contest_day)
+        = split('-', $contest_date);
+
+    $contest_start_time = $row['START_TIME'];
+    list ($contest_start_hour, $contest_start_minute)
+        = split(':', $contest_start_time);
+    $contest_freeze_time = $row['FREEZE_DELAY'];
+    $contest_end_time = $row['CONTEST_END_DELAY'];
+    $base_dir = $row['BASE_DIRECTORY'];
+
+    $contest_start_ts = mktime($contest_start_hour,
+                               $contest_start_minute,
+                               0,
+                               $contest_month,
+                               $contest_day,
+                               $contest_year);
+    $contest_freeze_ts = $contest_start_ts + $contest_freeze_time;
+    $contest_end_ts = $contest_start_ts + $contest_end_time;
+?>
diff --git a/public_html/admin/lib/data.inc b/public_html/admin/lib/data.inc
new file mode 100755
index 0000000..d49e3e9
--- /dev/null
+++ b/public_html/admin/lib/data.inc
@@ -0,0 +1,148 @@
+<?
+#
+# Copyright (C) 2002, 2003 David Whittington
+# Copyright (C) 2003, 2005 Jonathan Geisler
+# Copyright (C) 2005 Victor Replogle
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: lib/data.inc
+#
+
+$link = mysql_connect($db_host, $db_user, $db_pass);
+if (!$link) {
+    print "Sorry.  Database connect failed.  Retrying...";
+    exit;
+}
+
+$connect_good = mysql_select_db($db_name);
+if (!$connect_good) {
+    print "Sorry.  Database selection failed.  Retrying...";
+    exit;
+}
+
+$contest_info = mysql_query("SELECT * FROM CONTEST_CONFIG");
+if (!$contest_info) {
+    print "Sorry.  Database request (CONTEST_CONFIG) failed.  Retrying...";
+    exit;
+}
+
+$row = mysql_fetch_assoc($contest_info);
+if (mysql_num_rows($contest_info) > 0) {
+    $contest_host = $row['HOST'];
+    $contest_name = $row['CONTEST_NAME'];
+    $contest_date = $row['CONTEST_DATE'];
+    list ($contest_year, $contest_month, $contest_day)
+	= split('-', $contest_date);
+
+    $contest_start_time = $row['START_TIME'];
+    list ($contest_start_hour, $contest_start_minute)
+	= split(':', $contest_start_time);
+    $contest_freeze_time = $row['FREEZE_DELAY'];
+    $contest_end_time = $row['CONTEST_END_DELAY'];
+    $base_dir = $row['BASE_DIRECTORY'];
+
+    $contest_start_ts = mktime($contest_start_hour,
+			    $contest_start_minute,
+			    0,
+			    $contest_month,
+			    $contest_day,
+			    $contest_year);
+    $contest_freeze_ts = $contest_start_ts + $contest_freeze_time;
+    $contest_end_ts = $contest_start_ts + $contest_end_time;
+    
+    
+$teams_query = mysql_query("SELECT * FROM TEAMS");
+if (!$teams_query) {
+    print "Sorry.  Database request (TEAMS) failed.  Retrying...";
+    exit;
+}
+$num_teams = mysql_num_rows($teams_query);
+while ($row = mysql_fetch_assoc($teams_query)) {
+    $team_id = $row['TEAM_ID'];
+    $team_user = $row['USERNAME'];
+    $teams[$team_id]['user'] = $team_user;
+
+    $teams[$team_id]['id'] = $team_id;
+    $users[$team_user]['team_id'] = $team_id;
+
+    $team_name = $row['TEAM_NAME'];
+    $teams[$team_id]['name'] = $team_name;
+    $users[$team_user]['team_name'] = $team_name;
+
+    $teams[$team_id]['organization'] = $row['ORGANIZATION'];
+
+    $team_password = $row['PASSWORD'];
+    $teams[$team_id]['password'] = $team_password;
+    $users[$team_user]['password'] = $team_password;
+
+    $team_coach_name = $row['COACH_NAME'];
+    $teams[$team_id]['coach_name'] = $team_coach_name;
+    $users[$team_user]['coach_name'] = $team_coach_name;
+
+    $team_alternate_name = $row['ALTERNATE_NAME'];
+    $teams[$team_id]['alternate_name'] = $team_alternate_name;
+    $users[$team_user]['alternate_name'] = $team_alternate_name;
+
+    $team_contestant_1_name = $row['CONTESTANT_1_NAME'];
+    $teams[$team_id]['contestant_1_name'] = $team_contestant_1_name;
+    $users[$team_user]['contestant_1_name'] = $team_contestant_1_name;
+
+    $team_contestant_2_name = $row['CONTESTANT_2_NAME'];
+    $teams[$team_id]['contestant_2_name'] = $team_contestant_2_name;
+    $users[$team_user]['contestant_2_name'] = $team_contestant_2_name;
+
+    $team_contestant_3_name = $row['CONTESTANT_3_NAME'];
+    $teams[$team_id]['contestant_3_name'] = $team_contestant_3_name;
+    $users[$team_user]['contestant_3_name'] = $team_contestant_3_name;
+}
+
+$sql = "SELECT ct.TEAM_ID, c.CATEGORY_NAME";
+$sql .= " FROM CATEGORY_TEAM ct, CATEGORIES c";
+$sql .= " WHERE ct.CATEGORY_ID = c.CATEGORY_ID";
+$categories_query = mysql_query($sql);
+if (!$categories_query) {
+    print "Sorry.  Database request (CATEGORIES) failed.  Retrying...";
+    exit;
+}
+while ($row = mysql_fetch_assoc($categories_query)) {
+    $cat_name = $row['CATEGORY_NAME'];
+    if ($cat_name) {
+	$categories[$cat_name]['name'] = $cat_name;
+	if (!isset($categories[$cat_name]['team_ids'])
+		|| !is_array($categories[$cat_name]['team_ids'])) {
+	    $categories[$cat_name]['team_ids'] = array();
+	}
+	array_push($categories[$cat_name]['team_ids'], $row['TEAM_ID']);
+	//print $categories[$cat_name]['team_ids'].$row['TEAM_ID']."<br />";
+    }
+}
+
+$problem_url = "problems";
+$problems_query = mysql_query("SELECT * FROM PROBLEMS");
+if (!$problems_query) {
+    print "Sorry.  Database request (PROBLEMS) failed.  Retrying...";
+    exit;
+}
+
+$num_problems = mysql_num_rows($problems_query);
+while ($row = mysql_fetch_assoc($problems_query)) {
+    $problem_id = $row['PROBLEM_ID'];
+    $problems[$problem_id]['id'] = $row['PROBLEM_ID'];
+    $problems[$problem_id]['name'] = $row['PROBLEM_NAME'];
+    $problems[$problem_id]['loc'] = $row['PROBLEM_LOC'];
+}
+
+$responses_query = mysql_query("SELECT * FROM RESPONSES");
+if (!$responses_query) {
+    print "Sorry.  Database request (RESPONSES) failed.  Retrying...";
+    exit;
+}
+while ($row = mysql_fetch_assoc($responses_query)) {
+    $response_id = $row['RESPONSE_ID'];
+    $responses[$response_id]['response'] = $row['RESPONSE'];
+    $responses[$response_id]['color'] = $row['RESPONSE_COLOR'];
+}
+}
+?>
diff --git a/public_html/admin/lib/database.inc b/public_html/admin/lib/database.inc
new file mode 120000
index 0000000..dacdb43
--- /dev/null
+++ b/public_html/admin/lib/database.inc
@@ -0,0 +1 @@
+../../lib/database.inc
\ No newline at end of file
diff --git a/public_html/admin/lib/footer.inc b/public_html/admin/lib/footer.inc
new file mode 100755
index 0000000..3f6c167
--- /dev/null
+++ b/public_html/admin/lib/footer.inc
@@ -0,0 +1,13 @@
+<!--
+    Copyright (C) 2002 David Whittington
+
+	See the file "COPYING" for further information about the copyright
+	and warranty status of this work.
+
+    arch-tag: admin/lib/footer.inc
+!-->
+
+</td></tr></table>
+</td></tr></table>
+</body>
+</html>
diff --git a/public_html/admin/lib/header.inc b/public_html/admin/lib/header.inc
new file mode 100755
index 0000000..09d54b0
--- /dev/null
+++ b/public_html/admin/lib/header.inc
@@ -0,0 +1,93 @@
+<?
+#
+# Copyright (C) 2002 David Whittington
+# Copyright (C) 2003, 2004 Jonathan Geisler
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/lib/header.inc
+#
+
+$link = mysql_connect($db_host, $db_user, $db_pass);
+if (!$link) {
+    print "Sorry.  Database connect failed.  Retrying...";
+    exit;
+}
+
+$connect_good = mysql_select_db($db_name);
+if (!$connect_good) {
+    print "Sorry.  Database selection failed.  Retrying...";
+    exit;
+}
+	include_once ("../lib/config.inc");
+#	include_once ("../lib/data.inc");
+	include_once ("lib/session.inc");
+	$result = mysql_query("SELECT * FROM CONTEST_CONFIG");
+	if (mysql_num_rows($result) > 0) {
+		include_once ("lib/contest_info.inc");
+	}
+?>
+
+<!DOCTYPE HTML PUBLIC "-//W3C/DTD HTML 4.0 Transitional//EN">
+<html>
+<body bgcolor="<?=$page_bg_color?>" link="0000cc" alink="000066" vlink="0000cc">
+<table width="90%" align="center" cellpadding="1" cellspacing="0" border="0" bgcolor="#000000">
+	<tr><td>
+		<table width="100%" cellpadding="5" cellspacing="0" border="0">
+			<tr bgcolor="<?=$title_bg_color?>">	
+				<td>
+				<!-- Beautification hack. 2006-09-25 -sb -->
+                <img src="../images/favicon.ico">
+
+  				<font color="#ffffff">
+				<?if (!$contest_name)
+				{?>
+  				<b>No contest exists yet<!-- <?=$contest_name?></b> - <small><?=$contest_host?></small> -->
+				<?}
+				else { ?>
+  				<b><?=$contest_name?></b> - <small><?=$contest_host?></small>
+				<?}?>
+  				</font>
+				</td>
+				<td align="right">
+ 					 <font color="#ffffff">
+ 					 <b>JUDGE/ADMIN</b>
+ 					 </font>
+				</td>
+			</tr>
+			<tr>	
+				<td bgcolor="#dcdcdc" align="left"><b>
+				<a href="setup_contest.php">Edit contest details</a> &nbsp;
+  				<a href="setup_problems.php">Problems</a> &nbsp;
+				<a href="setup_data_sets.php">Data Sets</a> &nbsp;
+  				<a href="setup_site.php">Sites</a> &nbsp; 
+  				<a href="setup_teams.php">Teams</a> &nbsp;  
+  				<a href="setup_categories.php">Categories</a> &nbsp;
+				<a href="setup_team_category.php">Team Category</a> &nbsp;
+				<?$lang_sql = "SELECT 	sum(REPLACE_HEADERS) AS heads,";
+				$lang_sql  .= "		sum(CHECK_BAD_WORDS) AS bad_words ";
+				$lang_sql  .= "FROM LANGUAGE";
+				$sel_sql = mysql_query($lang_sql);
+				if (!$sel_sql) {
+					echo "Error!  Could not create the header ";
+					echo "correctly.<br /> Please contact an ";
+					echo "administrator.";
+				}
+				$contest_stuff = mysql_fetch_assoc($sel_sql);
+				if ($contest_stuff['heads'] > 0) { ?>
+				<a href="setup_headers.php">Headers</a> &nbsp;
+				<?}
+				if ($contest_stuff['bad_words'] > 0) { ?>
+				<a href="setup_forbidden.php">Forbidden</a> &nbsp;
+				<?} ?>
+				<a href="misc.php">Misc</a> &nbsp;
+				</b>
+				
+				</td>
+				<td align="right" bgcolor="#dcdcdc">
+				<b>Official Time: <?=date("H:i:s")?></b>
+				</td>
+			</tr>
+			<tr>
+				<td bgcolor="#ffffff" colspan="2">
diff --git a/public_html/admin/lib/session.inc b/public_html/admin/lib/session.inc
new file mode 100755
index 0000000..c8785a2
--- /dev/null
+++ b/public_html/admin/lib/session.inc
@@ -0,0 +1,21 @@
+<?
+#
+# Copyright (C) 2002 David Whittington
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/lib/session.inc
+#
+    include_once("admin_config.inc");
+#
+    session_name("TOUCHE-$db_name");
+    session_start();
+     	header ("expires:Tuesday, 25 Apr 1995 09:30:00 -0700");
+    if(   $_SESSION['admin_user'] != $admin_user 
+       || $_SESSION['admin_pass'] != $admin_pass)
+    {
+	header ("Location: index.php?state=2");
+	exit(0);
+    }
+?>
diff --git a/public_html/admin/misc.php b/public_html/admin/misc.php
new file mode 100755
index 0000000..880e0fb
--- /dev/null
+++ b/public_html/admin/misc.php
@@ -0,0 +1,434 @@
+<?
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/misc.php
+#
+        include("lib/admin_config.inc");
+        include("lib/data.inc");
+        include("lib/session.inc");
+
+if ($_POST) {
+        $ext_hour = $_POST['ext_hour'];
+        $ext_minute = $_POST['ext_minute'];
+        $ext_second = $_POST['ext_second'];
+
+
+        $sql = mysql_query("SELECT * FROM CONTEST_CONFIG");
+	$row = mysql_fetch_assoc($sql);	
+	$contest_np = $row['CONTEST_NAME'];
+	$freeze_hour = (int)($row['FREEZE_DELAY']/3600);
+        $freeze_minute = ((int)($row['FREEZE_DELAY']/60))%60;
+	$freeze_second = $row['FREEZE_DELAY'] - ($freeze_hour*3600 + $freeze_minute*60);
+	$end_hour = (int)($row['CONTEST_END_DELAY']/3600);
+        $end_minute = ((int)($row['CONTEST_END_DELAY']/60))%60;
+        $end_second = $row['CONTEST_END_DELAY'] - ($freeze_hour*3600 + $freeze_minute*60);
+	
+
+        $freeze_delay = ($freeze_hour + $ext_hour)*3600 + ($freeze_minute + $ext_minute)*60 + ($freeze_second + $ext_second);
+        $contest_delay =($end_hour + $ext_hour)*3600 + ($end_minute + $ext_minute)*60 + ($end_second + $ext_second);
+
+if($_POST['B1']) {
+	$exist = $ext_hour + $ext_minute + $ext_second;
+	if($exist > 0) {
+		$sql = "UPDATE CONTEST_CONFIG ";
+		$sql .= "SET FREEZE_DELAY = '$freeze_delay',";
+		$sql .= "    CONTEST_END_DELAY = '$contest_delay' ";
+		$sql .= "WHERE CONTEST_NAME = '$contest_name'";
+		$good = mysql_query($sql);
+		if(!$good) {
+			echo "There was an error and the contest was not extended!!!";
+		}
+		else {
+			echo "Contest Extended Successfully.";
+		}
+    	}
+}
+elseif($_POST['B2']) {
+#$delete = mysql_query("UPDATE CONTEST_CONFIG SET FREEZE_DELAY = '0', CONTEST_END_DELAY = '0', START_TS = '0', HAS_STARTED = '0' WHERE CONTEST_NAME = '$contest_name'");
+$delete = mysql_query("UPDATE CONTEST_CONFIG SET START_TS = '0', HAS_STARTED = '0' WHERE CONTEST_NAME = '$contest_name'");
+if(!$delete) {
+   echo "Error! could not clear the info!!!";
+}
+$delete = mysql_query("DELETE FROM CLARIFICATION_REQUESTS");
+if(!$delete) {
+   echo "Error! could not clear the info!!!";
+}
+$delete = mysql_query("DELETE FROM JUDGED_SUBMISSIONS");
+if(!$delete) {
+   echo "Error! could not clear the info!!!";
+}
+$delete = mysql_query("DELETE FROM QUEUED_SUBMISSIONS");
+if(!$delete) {
+   echo "Error! could not clear the info!!!";
+}
+$delete = mysql_query("UPDATE SITE SET START_TS = '0', HAS_STARTED = '0'");
+if(!$delete) {
+   echo "Error! could not clear the info!!!";
+} else {
+   echo "Contest Cleared Successfully!";
+  }
+}
+elseif($_POST['B3']) {
+#Clone the contest here
+$contest_clone_name = $_POST['clone_name'];
+$db_clone_name = preg_replace("/ /", "_", $contest_clone_name);
+$contest_clone_es = preg_replace("/ /", "\ ", $contest_clone_name);
+$contest_dir = "../../../$contest_clone_es";
+echo "Creating clone folder . . . ";
+   $cmd = "cp -pr ~contest/$db_name ";
+   $cmd .= $contest_dir;
+   system($cmd, $result);
+echo"Finished.</p>";
+echo "<p>Clearing folders . . . ";
+   $cmd2 = "rm -rf ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/data/*";
+   system($cmd2, $result);
+   $cmd2 = "rm -rf ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/judged/*";
+   system($cmd2, $result);
+   $cmd2 = "rm -rf ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/queue/*";
+   system($cmd2, $result);
+   $cmd2 = "rm -rf ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/test_compile/*";
+   system($cmd2, $result);
+   $cmd2 = "rm -rf ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/c_jail/home/contest/*";
+   system($cmd2, $result);
+   $cmd2 = "rm -rf ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/cpp_jail/home/contest/*";
+   system($cmd2, $result);
+   $cmd2 = "rm -rf ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/java_jail/home/contest/*";
+   system($cmd2, $result);
+echo"Finished.</p>";
+echo "<p>Making Directories . . . ";
+   $cmd2 = "mkdir -p ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/c_jail/home/contest/";
+   $cmd2 .= $contest_clone_es;
+   $cmd2 .= "/judged";
+   system($cmd2, $result);
+   $cmd2 = "mkdir -p ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/c_jail/home/contest/";
+   $cmd2 .= $contest_clone_es;
+   $cmd2 .= "/data";
+   system($cmd2, $result);
+   $cmd2 = "mkdir -p ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/cpp_jail/home/contest/";
+   $cmd2 .= $contest_clone_es;
+   $cmd2 .= "/judged";
+   system($cmd2, $result);
+   $cmd2 = "mkdir -p ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/cpp_jail/home/contest/";
+   $cmd2 .= $contest_clone_es;
+   $cmd2 .= "/data";
+   system($cmd2, $result);
+   $cmd2 = "mkdir -p ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/java_jail/home/contest/";
+   $cmd2 .= $contest_clone_es;
+   $cmd2 .= "/judged";
+   system($cmd2, $result);
+   $cmd2 = "mkdir -p ";
+   $cmd2 .= $contest_dir;
+   $cmd2 .= "/java_jail/home/contest/";
+   $cmd2 .= $contest_clone_es;
+   $cmd2 .= "/data";
+   system($cmd2, $result);
+echo"Finished.</p>";
+echo "<p>Creating Database . . . ";
+   $mypwd = "pc2bgone";
+   $cmd3 = "mysqldump --password=$mypwd -u root $db_name > $db_clone_name.sql";
+   system($cmd3, $result);
+   $cmd3 = "mysqladmin --password=$mypwd -u root create $db_clone_name";
+   system($cmd3, $result);
+   $cmd3 = "mysql --password=$mypwd -u root $db_clone_name < $db_clone_name.sql";
+   system($cmd3, $result);
+$link = mysql_connect($db_host, $db_user, $db_pass);
+if (!$link) {
+    print "Sorry.  Database connect failed.";
+    exit;
+}
+
+$connect_good = mysql_select_db($db_clone_name);
+if (!$connect_good) {
+    print "Sorry.  Database selection failed.";
+    exit;
+}
+$base_dir = "/home/contest/$contest_clone_name";
+$contest_info = mysql_query("UPDATE CONTEST_CONFIG SET CONTEST_NAME = \"$contest_clone_name\", CONTEST_DATE = '0000-00-00', START_TIME='00:00:00', FREEZE_DELAY='14400', CONTEST_END_DELAY='18000', BASE_DIRECTORY=\"$base_dir\", START_TS='0', HAS_STARTED='0'");
+if (!$contest_info) {
+    print "Sorry.  Database request (UPDATE) failed.";
+    exit;
+}
+$contest_info = mysql_query("UPDATE SITE SET START_TIME='00:00:00', START_TS='0', HAS_STARTED='0'");
+if (!$contest_info) {
+    print "Sorry.  Database request (UPDATE) failed.";
+    exit;
+}
+
+#need to clean out some information------------------------------------
+   $cmd4 = "cp -r ~contest/public_html/$db_name ~contest/public_html/";
+   $cmd4 .= $contest_clone_name;
+   system($cmd4, $result);
+echo"Finished.</p>";
+#-----------editing database.inc----------------------------------
+echo "<p>Editing Settings . . . ";
+$fhdl = fopen("../../$contest_clone_name/lib/database.inc", "r") OR die("Error with opening file");
+$file = fread($fhdl, filesize("../../$contest_clone_name/lib/database.inc"));
+$file = preg_replace("/$db_name/", "$db_clone_name", $file);
+fclose($fhdl);
+$fhdl = fopen("../../$contest_clone_name/lib/database.inc", "w") OR die("Error with opening file");
+$chk = fwrite($fhdl, $file);
+fclose($fhdl);
+#---------editing chroot_wrapper.c--------------------------------
+$fhdl = fopen("../../../$contest_clone_name/chroot_wrapper.c", "r") OR die("Error with opening file");
+$file = fread($fhdl, filesize("../../../$contest_clone_name/chroot_wrapper.c"));
+$file = preg_replace("/$db_name/", "$contest_clone_name", $file);
+fclose($fhdl);
+$fhdl = fopen("../../../$contest_clone_name/chroot_wrapper.c", "w") OR die("Error with opening file");
+$chk = fwrite($fhdl, $file);
+fclose($fhdl);
+$cmd5 = "gcc -o ../../../$contest_clone_name/chroot_wrapper.exe ../../../$contest_clone_name/chroot_wrapper.c";
+system($cmd5, $result);
+$cmd5 = "sudo chown root:root ../../../$contest_clone_name/chroot_wrapper.exe";
+system($cmd5, $result);
+$cmd5 = "sudo chmod +s ../../../$contest_clone_name/chroot_wrapper.exe";
+system($cmd5, $result);
+echo "Finished.</p>";
+#what about readme for this???
+echo "<a href=\"http://jacob.css.tayloru.edu/~contest/$contest_clone_name/admin\">Click to go to setup for clone</a>";
+
+
+
+
+}
+elseif($_POST['B4']) {
+	$sql = mysql_query("SELECT * FROM TEAMS ORDER BY TEAM_ID");
+	if(!$sql) {
+		print "Error! could not find any team information";
+		exit;
+	}
+	else {
+		$path = "../../../$db_name/judged/";
+		$data_path = "../../../$db_name/data/";
+                if($_POST['admin_email']) {
+                        $cmd = "tar -cf - $path*.cpp $path*.c $path*.java $data_path* | gzip -c > $path";
+                        $cmd .= $command .= "$contest_name.tar.gz";
+                        system($cmd, $result);
+                        if(!$result) {
+                                        $email = $_POST['admin_email'];
+                                        $cmd = "echo | mutt -s \"Programming Contest Files\" -a $path";
+                                        $cmd .= "$contest_name.tar.gz $email < email_body.txt";
+                                        system($cmd, $result);
+                                        if(!$result) {
+                                                echo "Files sent to Administrator<br>";
+                                        }
+                                        else {
+                                                echo "File could not be sent to Administrator!<br>";
+                                        }
+                        }
+                        else {
+                                echo "Could not gather contest files for administrator!<br>";
+                        }
+                }
+		#$path = "../../../develop/judged/";
+		$num_teams = mysql_num_rows($sql);
+		while($row = mysql_fetch_assoc($sql)) {
+			$team_id = $row['TEAM_ID'];
+			$command = "tar -cf - $path$team_id-*.cpp $path$team_id-*.c $path$team_id-*.java $data_path* | gzip -c > $path";
+			$command .= "Team$team_id.tar.gz";
+			#echo "$command<br>";
+			system($command, $result);
+			if(!$result) {
+				#print "Files Zipped!";
+				#email to teams
+				if($row['EMAIL']) {
+					$email = $row['EMAIL'];
+					$cmd = "echo | mutt -s \"Programming Contest Files\" -a $path";
+					$cmd .= "Team$team_id.tar.gz $email < email_body.txt";
+					system($cmd, $result);
+					if(!$result) {
+						$team_name_send = $row['TEAM_NAME'];
+						echo "Files sent to Team $team_name_send<br>";
+					}
+					else {
+						$team_name_send = $row['TEAM_NAME'];
+						echo "File could not be sent to Team $team_name_send!<br>";
+					}
+				}
+			}
+			else {
+				$team_name_send = $row['TEAM_NAME'];
+				echo "Could not gather team files for Team $team_name_send !<br>";
+			}
+		}
+	}
+}
+
+}
+/*******************************************************
+End of POST section
+*******************************************************/
+	include("lib/header.inc");
+	        $link = mysql_connect($db_host, $db_user, $db_pass);
+        if(!$link){
+                print "Sorry.  Database connect failed.  Check your internet connection.";
+                exit;
+        }
+        $connect_good = mysql_select_db($db_name);
+        if (!$connect_good) {
+                print "Sorry.  Couldn't select the database name $db_name. Exiting...";
+                exit;
+        }
+
+        $sql = mysql_query("SELECT * FROM CONTEST_CONFIG");
+        if (!$sql) {
+                print "Could not tell if a contest has been created.  bailing out.";
+                exit;
+                #die or break
+        }
+        if (mysql_num_rows($sql) > 0) {
+        //a contest is already set up!
+                $contest=true;
+                $row = mysql_fetch_assoc($sql);
+                echo "<center>\n";
+
+                # Print out any errors
+                if(isset($error)) {
+                    echo "<br>";
+                    foreach($error as $er) {
+                        echo "<b><font color=#ff0000>$er</font></b>";
+                    }
+                }
+
+                echo "</center>";
+                echo "<p>";
+                echo "<table align=center bgcolor=#ffffff cellpadding=0 cellspacing=0 border=0<tr><td>";
+                echo "<table width=100% cellpadding=5 cellspacing=1 border=0>\n";
+                echo "  <tr bgcolor=\"$hd_bg_color1\">\n";
+                echo "<form method=POST action=misc.php>\n";
+                echo "          <td align=\"center\" colspan=\"2\"><font color=\"$hd_txt_color1\"><b>Misc Contest Actions</b></font></td>\n";
+                echo "  </tr>";
+                echo "  <tr bgcolor=\"$hd_bg_color2\">";
+                echo "          <td colspan=\"2\">Extend the Contest</td>";
+                echo "  </tr>";
+                $host = $row['HOST'];
+                $contest_name = $row['CONTEST_NAME'];
+                //calculating the number of seconds since January 1 1970 at midnight
+                //for our particular freeze/contest end values in seconds
+                $freeze_hour = gmdate('H', $contest_freeze_time);
+                $freeze_minute = gmdate('i', $contest_freeze_time);
+                $freeze_second = gmdate('s', $contest_freeze_time);
+                $end_hour = gmdate('H', $contest_end_time);
+                $end_minute = gmdate('i', $contest_end_time);
+                $end_second = gmdate('s', $contest_end_time);
+                $ext_hour = gmdate('H', $contest_ext_time);
+                $ext_minute = gmdate('i', $contest_ext_time);
+                $ext_second = gmdate('s', $contest_ext_time);
+        }
+	else {
+		$ext_hour = "00";
+		$ext_minute = "00";
+		$ext_second = "00";
+	}
+        echo "          <tr bgcolor=\"$data_bg_color1\">";
+        echo "                  <td>Extend Contest By (HH:mm:ss)</td> ";
+        echo "                  <td><input type=\"text\" name=\"ext_hour\" size=\"2\"";
+        echo "                          maxlength=2 value=\"$ext_hour\"></input>:";
+        echo "                  <input type=\"text\" name=\"ext_minute\" size=\"2\"";
+        echo "                          maxlength=2 value=\"$ext_minute\"></input>:";
+        echo "                  <input type=\"text\" name=\"ext_second\" size=\"2\"";
+        echo "                          maxlength=2 value=\"$ext_second\"></input></td> ";
+        echo "          </tr>";
+        echo "          <tr bgcolor=\"$data_bg_color1\">";
+        echo "                  <td></td> ";
+        echo "                  <td><input type=\"submit\" value=\"Extend Contest\" name=\"B1\"></input></td> ";
+        echo "          </tr>";
+
+
+        echo "          <tr bgcolor=\"$hd_bg_color2\">";
+        echo "                  <td colspan=2>Clear the Contest</td>";
+        echo "          </tr>";
+        echo "          <tr bgcolor=\"$data_bg_color1\">";
+        echo "                  <td>Problems, Teams, Categories, etc. will be kept.</td>";
+        echo "                  <td><input type=\"submit\" value=\"Clear Contest\" name=\"B2\"</input></td>";
+	echo "		</tr>";
+
+        echo "          <tr bgcolor=\"$hd_bg_color2\">";
+        echo "                  <td colspan=2>Clone the Contest.</td>";
+        echo "          </tr>";
+        echo "          <tr bgcolor=\"$data_bg_color1\">";
+        echo "                  <td>Name of the Clone:</td>";
+        echo "                  <td><input type=\"text\" name=\"clone_name\" size=\"17\"></input></td>";
+        echo "          </tr>";
+        echo "          <tr bgcolor=\"$data_bg_color1\">";
+        echo "                  <td></td> ";
+        echo "                  <td><input type=\"submit\" value=\"Clone Contest\" name=\"B3\"></input></td> ";
+        echo "          </tr>";
+	echo "          <tr bgcolor=\"$hd_bg_color2\">";
+        echo "                  <td colspan=2>Send files to teams</td>";
+        echo "          </tr>";
+        echo "          <tr bgcolor=\"$data_bg_color1\">";
+        echo "                  <td>Admin Email (Send all contest files to):</td>";
+        echo "                  <td><input type=\"text\" name=\"admin_email\" size=\"17\"></input></td>";
+        echo "          </tr>";
+        echo "          <tr bgcolor=\"$data_bg_color1\">";
+        echo "                  <td>Zip each teams files and send files</td> ";
+        echo "                  <td><input type=\"submit\" value=\"Send Zip Files\" name=\"B4\"></input></td> ";
+        echo "          </tr>";
+        echo "  </form>";
+
+        if(!mysql_num_rows( mysql_query("SHOW TABLES LIKE 'JUDGED_SUBMISSIONS_COPY'"))){
+                echo "  <form action='rejudge.php' method='POST'>\n";
+                echo "          <tr bgcolor=\"$hd_bg_color2\">";
+                echo "                  <td colspan=2>recalculate responses</td>";
+                echo "          </tr>";
+                echo "          <tr bgcolor=\"$data_bg_color1\">";
+                echo "                  <td>calculate new auto responses for each submission</td> ";
+                echo "                  <td><input type=\"submit\" value='recalculate responses' onClick='return confirmSubmit()'></td> ";
+                echo "          </tr>";
+
+                echo "  </form></table>";
+        }
+        else{
+                echo "          <tr bgcolor=\"$hd_bg_color2\">";
+                echo "                  <td colspan=2>recalculate responses</td>";
+                echo "          </tr>";
+                echo "          <tr bgcolor=\"$data_bg_color1\">";
+                echo "                  <td>It has Already been recalculated</td> ";
+                echo "                  <td><a href='review.php'>review new judgements</a></td> ";
+                echo "          </tr>";
+                echo " </table>";
+
+        }
+
+echo " <script LANGUAGE='JavaScript'>
+                        <!--
+                        // Nannette Thacker http://www.shiningstar.net
+                        function confirmSubmit()
+                        {
+                                var agree=confirm('Warning!  This process takes a considerable amount, and change the database and file system so that current standings will be lost!!');
+                                if (agree)
+                                        return true ;
+                                else
+                                        return false ;
+                                }
+                        // -->
+                </script> ";
+
+                include("lib/footer.inc");
+?>	
diff --git a/public_html/admin/rejudge.php b/public_html/admin/rejudge.php
new file mode 100755
index 0000000..28e9e0d
--- /dev/null
+++ b/public_html/admin/rejudge.php
@@ -0,0 +1,213 @@
+<?
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/misc.php
+#
+include("lib/admin_config.inc");
+include("lib/data.inc");
+include("lib/session.inc");
+include("lib/header.inc");
+
+if($_SERVER['REQUEST_METHOD'] == 'POST' && !$_POST['undo']) {
+	echo "<center><h3>processing submissions<br/>this will take a minute</h3></center>\n";
+
+#copy the judge table and the response table
+	system("mysql --password=pc2bgone -u root $db_name < rejudge.sql", $result);
+	if ($result){
+		echo "<p>mysql --password=pc2bgone -u root $db_name < rejudge.sql</p><p>error code: $result</p>";
+	}
+
+#populate copy tables	
+	$sql = "INSERT INTO AUTO_RESPONSES_COPY ";
+	$sql .= "SELECT * FROM AUTO_RESPONSES";
+	$insert_result = mysql_query($sql);
+        if(!$insert_result) {
+        	sql_error($sql);
+        }
+
+	$sql = "INSERT INTO JUDGED_SUBMISSIONS_COPY ";
+	$sql .= "SELECT * FROM JUDGED_SUBMISSIONS";
+        $insert_result = mysql_query($sql);
+        if(!$insert_result) {
+                sql_error($sql);
+        }
+
+	$sql = "DELETE FROM JUDGED_SUBMISSIONS";
+	$delete_result = mysql_query($sql);
+	if(!$delete_result){
+                sql_error($sql);
+        }
+
+	$sql = "DELETE FROM AUTO_RESPONSES";
+        $delete_result = mysql_query($sql);
+        if(!$delete_result){
+                sql_error($sql);
+        }
+
+#move the judged dirs, and make a new one
+	$sys_cmd = "mv $base_dir/judged $base_dir/judged_copy";
+	//echo "<br/>sys_cmd: $sys_cmd <br/>";
+	system($sys_cmd, $result);
+
+	$sys_cmd = "mv $base_dir/cpp_jail$base_dir/judged $base_dir/cpp_jail$base_dir/judged_copy";
+	//echo "<br/>sys_cmd: $sys_cmd <br/>";
+	system($sys_cmd, $result);
+	
+	$sys_cmd = "mv $base_dir/c_jail$base_dir/judged $base_dir/c_jail$base_dir/judged_copy";
+	//echo "<br/>sys_cmd: $sys_cmd <br/>";
+	system($sys_cmd, $result);
+	
+	$sys_cmd = "mv $base_dir/java_jail$base_dir/judged $base_dir/java_jail$base_dir/judged_copy";
+	//echo "<br/>sys_cmd: $sys_cmd <br/>";
+	system($sys_cmd, $result);
+	
+	$sys_cmd = "mkdir $base_dir/judged"; 
+	//echo "<br/>sys_cmd: $sys_cmd <br/>";
+        system($sys_cmd, $result);
+
+	$sys_cmd = "mkdir $base_dir/cpp_jail$base_dir/judged"; 
+	//echo "<br/>sys_cmd: $sys_cmd <br/>";
+        system($sys_cmd, $result);
+
+	$sys_cmd = "mkdir $base_dir/c_jail$base_dir/judged"; 
+	//echo "<br/>sys_cmd: $sys_cmd <br/>";
+        system($sys_cmd, $result);
+
+	$sys_cmd = "mkdir $base_dir/java_jail$base_dir/judged"; 
+	//echo "<br/>sys_cmd: $sys_cmd <br/>";
+        system($sys_cmd, $result);
+
+#stop cron
+	//$sys_cmd
+
+#repopulate the queue table	
+	$sql = "INSERT INTO `QUEUED_SUBMISSIONS` (`TEAM_ID`, `PROBLEM_ID`, `TS`, ";
+	$sql .= "`ATTEMPT`, `SOURCE_FILE`) ";
+	$sql .= "SELECT TEAM_ID, PROBLEM_ID, TS, ATTEMPT, SOURCE_FILE ";
+	$sql .= "FROM JUDGED_SUBMISSIONS_COPY";
+	$insert_result = mysql_query($sql);
+        if(!$insert_result) {
+                sql_error($sql);
+        }
+
+#run cronscript
+	$rejudge = read_entire_file ("$base_dir/start_contest.crontab");
+	$rejudge = preg_replace("/\*/", "", $rejudge);
+	$rejudge = preg_replace("/>.*/", "", $rejudge);
+	echo "<br/>rejudge: $rejudge <br/>";
+	system($rejudge, $result);
+	echo"<center>finished</center>";
+	echo "<a href='review.php'>Go to review page</a>";
+	
+}
+elseif($_SERVER['REQUEST_METHOD'] == 'POST' && $_POST['undo']){
+
+#copy back from copy tables and drop them
+#this calls a script to do the sql
+#it was done from php at first, but this didn't work	
+	system("mysql --password=pc2bgone -u root $db_name < undo.sql", $result);
+	$sql = "DELETE FROM JUDGED_SUBMISSIONS";
+	echo "$sql;<br/>";
+//        $sql_result = mysql_query($sql);
+//        if(!$insert_result) {
+//                sql_error($sql);
+//        }
+	
+	$sql = "INSERT INTO JUDGED_SUBMISSIONS 
+		SELECT * FROM JUDGED_SUBMISSIONS_COPY";
+	echo "$sql;<br/>";
+//        $sql_result = mysql_query($sql);
+//        if(!$insert_result) {
+//                sql_error($sql);
+//        }
+
+	$sql = "DROP TABLE `JUDGED_SUBMISSIONS_COPY`";
+	echo "$sql;<br/>";
+//        $sql_result = mysql_query($sql);
+//        if(!$insert_result) {
+//                sql_error($sql);
+//        }
+
+	$sql = "DELETE FROM AUTO_RESPONSES";
+	echo "$sql;<br/>";
+//        $sql_result = mysql_query($sql);
+//        if(!$insert_result) {
+//               sql_error($sql);
+//        }
+
+	$sql = "INSERT INTO AUTO_RESPONSES
+		SELECT * FROM AUTO_RESPONSES_COPY";
+	echo "$sql;<br/>";
+//        $sql_result = mysql_query($sql);
+//        if(!$insert_result) {
+//                sql_error($sql);
+//        }
+	
+	$sql = "DROP TABLE `AUTO_RESPONSES_COPY`";
+	echo "$sql;<br/>";
+//        $sql_result = mysql_query($sql);
+//        if(!$insert_result) {
+//                sql_error($sql);
+//        }
+
+#move all directorys back, and delete copies
+	echo "these system commands should be executed just fine";
+	$sys_cmd = "rm -r $base_dir/judged";
+	echo "<br/>sys_cmd: $sys_cmd <br/>";
+	system($sys_cmd, $result);
+
+	$sys_cmd = "mv $base_dir/judged_copy $base_dir/judged"; 
+	echo "<br/>sys_cmd: $sys_cmd <br/>";
+        system($sys_cmd, $result);
+
+	$sys_cmd = "rm -r $base_dir/cpp_jail$base_dir/judged"; 
+	echo "<br/>sys_cmd: $sys_cmd <br/>";
+        system($sys_cmd, $result);
+
+	$sys_cmd = "rm -r $base_dir/c_jail$base_dir/judged"; 
+	echo "<br/>sys_cmd: $sys_cmd <br/>";
+        system($sys_cmd, $result);
+
+	$sys_cmd = "rm -r $base_dir/java_jail$base_dir/judged"; 
+	echo "<br/>sys_cmd: $sys_cmd <br/>";
+        system($sys_cmd, $result);
+
+	$sys_cmd = "mv $base_dir/cpp_jail$base_dir/judged_copy $base_dir/cpp_jail$base_dir/judged";
+	echo "<br/>sys_cmd: $sys_cmd <br/>";
+	system($sys_cmd, $result);
+	
+	$sys_cmd = "mv $base_dir/c_jail$base_dir/judged_copy $base_dir/c_jail$base_dir/judged";
+	echo "<br/>sys_cmd: $sys_cmd <br/>";
+	system($sys_cmd, $result);
+	
+	$sys_cmd = "mv $base_dir/java_jail$base_dir/judged_copy $base_dir/java_jail$base_dir/judged";
+	echo "<br/>sys_cmd: $sys_cmd <br/>";
+	system($sys_cmd, $result);
+	
+}
+include("lib/footer.inc");
+
+# Read the entire file into a string
+# Input: $filename - file path to read
+function read_entire_file($filename) {
+    if(file_exists($filename)){
+                return file_get_contents($filename);
+        }
+        else{
+                return "";
+        }
+}
+
+
+
+# SQL ERROR
+# Input: $sql - the query with the error
+function sql_error($sql) {
+    echo "<br>Error in SQL command: $sql";
+    die;
+}
+
+?>
+
diff --git a/public_html/admin/rejudge.sql b/public_html/admin/rejudge.sql
new file mode 100644
index 0000000..0145ce7
--- /dev/null
+++ b/public_html/admin/rejudge.sql
@@ -0,0 +1,15 @@
+CREATE TABLE `JUDGED_SUBMISSIONS_COPY` 
+	( `JUDGED_ID` int(11) NOT NULL auto_increment, `TEAM_ID` int(11) NOT NULL default '0', 
+	`PROBLEM_ID` int(11) NOT NULL default '0', `TS` int(11) NOT NULL default '0', 
+	`ATTEMPT` int(11) NOT NULL default '0', `SOURCE_FILE` char(255) NOT NULL default '', 
+	`RESPONSE_ID` int(11) NOT NULL default '0', `VIEWED` int(11) NOT NULL default '0', 
+	`JUDGED` int(10) NOT NULL default '0', PRIMARY KEY (`JUDGED_ID`) ) TYPE=MyISAM AUTO_INCREMENT=18 ;
+
+
+CREATE TABLE `AUTO_RESPONSES_COPY` (
+  `JUDGED_ID` int(11) NOT NULL default '0',
+  `IN_FILE` varchar(255) NOT NULL default '',
+  `AUTO_RESPONSE` int(10) NOT NULL default '0',
+  `ERROR_NO` int(10) default '0'
+) TYPE=MyISAM;
+
diff --git a/public_html/admin/review.php b/public_html/admin/review.php
new file mode 100755
index 0000000..792ad70
--- /dev/null
+++ b/public_html/admin/review.php
@@ -0,0 +1,202 @@
+<?
+#
+# Copyright (C) 2005 Steve Overton
+# Copyright (C) 2005 David Crim
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/judge.php
+#
+
+include("lib/admin_config.inc");
+include("lib/data.inc");
+include("lib/session.inc");
+include("lib/header.inc");
+
+if($_SERVER['REQUEST_METHOD'] == 'POST' && !$_POST['team']) {
+
+    $sql  = "UPDATE JUDGED_SUBMISSIONS ";
+    $sql .= "SET RESPONSE_ID = $_POST[result], JUDGED = 1 ";
+    $sql .= "WHERE JUDGED_ID = $_POST[judged_id] ";
+
+    $result = mysql_query($sql);
+    if(!$result) {
+        sql_error($sql);
+    }
+    ob_flush();
+    sleep(2);
+}
+if ($_POST['team']){
+        $_SESSION['team'] = $_POST['team'];
+}
+
+$team_filter = $_SESSION['team'];
+if ($team_filter != "all")
+	$where = " AND T.TEAM_NAME = '" . $team_filter . "'";
+else
+	$where = "";
+
+if ($_GET['problem'] && $_GET['problem'] != "all")
+	$where .= " AND P.PROBLEM_NAME = '" . $_GET['problem'] . "'";
+
+#get contest start time
+$sql = "SELECT * ";
+$sql .= "FROM CONTEST_CONFIG ";
+
+$sql_result = mysql_query($sql);
+
+if(!$sql_result){
+        sql_error($sql);
+}
+$row = mysql_fetch_assoc($sql_result);
+$start_ts = $row['START_TS'];
+
+
+
+
+$sql = "SELECT * ";
+$sql .= "FROM PROBLEMS";
+$sql_result = mysql_query($sql);
+if (!$sql_result){
+        sql_error($sql);
+}
+echo "<center>";
+
+	if(!$_GET){
+                echo "All ";
+                echo "| <a href='$page?problem=" . $row['PROBLEM_NAME'] . "'>" . $row['PROBLEM_NAME'] . "</a> ";
+                while ($row = mysql_fetch_assoc($sql_result)){
+                        echo "| <a href='$page?problem=" . $row['PROBLEM_NAME'] . "'>" . $row['PROBLEM_NAME'] . "</a> ";
+                }
+                $problem_name = "ALL";
+        }
+	else{
+                echo "<a href='$page'>All</a> ";
+                $problem_name = $_GET['problem'];
+                if ($row['PROBLEM_NAME'] == $problem_name){
+                        echo "| $problem_name ";
+                        $problem_id = $row['PROBLEM_ID'];
+                }
+                else{
+                        echo "| <a href='$page?problem=" . $row['PROBLEM_NAME'] . "'>" . $row['PROBLEM_NAME'] . "</a> ";
+                }
+
+                while ($row = mysql_fetch_assoc($sql_result)){
+                        if ($row['PROBLEM_NAME'] == $problem_name){
+                                echo "| $problem_name ";
+                                $problem_id = $row['PROBLEM_ID'];
+                        }
+                        else{
+                               echo "| <a href='$page?problem=" . $row['PROBLEM_NAME'] . "'>" . $row['PROBLEM_NAME'] . "</a> ";
+                        }
+                }
+        }
+echo "</center>";
+
+$sql = "SELECT TEAM_NAME FROM TEAMS ORDER BY TEAM_NAME";
+$sql_result = mysql_query($sql);
+if(!$sql_result){
+        sql_error($sql);
+}
+
+
+
+echo "<center><form action='" . $_SERVER['PHP_SELF'] . "?" . $_SERVER['QUERY_STRING'] . "' method=POST name='teamFilter'>\n";
+echo "Filter By Team: <select name='team' onChange='teamFilter.submit()'>\n";
+if ($team_filter == "all")
+        echo "<option value='all' selected>All</option>\n";
+else
+        echo "<option value='all'>All</option>\n";
+
+while($row = mysql_fetch_assoc($sql_result)){
+        echo "<option value='$row[TEAM_NAME]'";
+if($row['TEAM_NAME'] == $team_filter)
+        echo" selected";
+        echo">$row[TEAM_NAME]</option>\n";
+}
+echo "</select></form></center>";
+
+#get all of the changes from the old to new judgement
+$sql = "SELECT DISTINCT JSC.TS, 
+P.PROBLEM_NAME, 
+T.TEAM_NAME, 
+JSC.ATTEMPT, 
+JS.JUDGED_ID,
+P.PROBLEM_ID,
+T.TEAM_ID,
+R1.RESPONSE AS 'JUDGE', 
+R2.RESPONSE AS 'AUTO',
+R3.RESPONSE AS 'CURRENT',
+JS.JUDGED
+
+FROM AUTO_RESPONSES AR, 
+JUDGED_SUBMISSIONS JS, 
+JUDGED_SUBMISSIONS_COPY JSC, 
+RESPONSES R1, 
+RESPONSES R2, 
+RESPONSES R3,
+TEAMS T, 
+PROBLEMS P
+
+WHERE P.PROBLEM_ID = JSC.PROBLEM_ID 
+    AND T.TEAM_ID = JSC.TEAM_ID 
+    AND AR.JUDGED_ID = JS.JUDGED_ID 
+                AND R1.RESPONSE_ID = JSC.RESPONSE_ID
+                AND R2.RESPONSE_ID = AR.AUTO_RESPONSE
+		AND R3.RESPONSE_ID = JS.RESPONSE_ID
+                AND JS.TEAM_ID = JSC.TEAM_ID
+                AND JS.ATTEMPT = JSC.ATTEMPT
+                AND JS.PROBLEM_ID = JSC.PROBLEM_ID
+                AND AR.AUTO_RESPONSE <> JSC.RESPONSE_ID" . $where;
+
+$sql_result = mysql_query($sql);
+if (!$sql_result){
+        sql_error($sql);
+}
+
+
+
+ # display appropreate queued submissions
+echo "<br><table align=center bgcolor=#000000 width=50%
+        cellpadding=0 cellspacing=0 border=0><tr><td>\n";
+echo "<table align=center width=100% cellpadding=6 cellspacing=1 border=0>\n";
+echo "<tr><td colspan=8 align=center bgcolor=$hd_bg_color1>\n";
+echo "<font color=$hd_txt_color1><b>Review All Submissions</b></font></td></tr>\n";
+echo "<tr><td bgcolor=$hd_bg_color2>Submission Time</td>\n";
+echo "<td bgcolor=$hd_bg_color2 align=center>Problem</td>\n";
+echo "<td bgcolor=$hd_bg_color2 align=center>Team ID</td>\n";
+echo "<td bgcolor=$hd_bg_color2 align=center>Attempt</td>\n";
+echo "<td bgcolor=$hd_bg_color2 align=center>Old Judge Response</td>\n";
+echo "<td bgcolor=$hd_bg_color2 align=center>Auto Response</td>\n";
+echo "<td bgcolor=$hd_bg_color2 align=center>Current Response</td>\n";
+echo "<td bgcolor=$hd_bg_color2 align=center>Change Jugdement</td></tr>\n";
+
+while($row = mysql_fetch_assoc($sql_result)){
+	$color_preserve = $data_bg_color1;
+	if ($row['JUDGED'] != 0)
+		$data_bg_color1 = $hd_bg_color2;
+	$min = intval(($row['TS'] - $start_ts)/60);
+        echo "<td bgcolor=$data_bg_color1 align=center>$min</td>\n";
+        echo "<td bgcolor=$data_bg_color1 align=center>" . $row['PROBLEM_NAME'] . "</td>\n";
+        echo "<td bgcolor=$data_bg_color1 align=center>" . $row['TEAM_NAME'] . "</td>\n";
+        echo "<td bgcolor=$data_bg_color1 align=center>" . $row['ATTEMPT'] . "</td>\n";
+        echo "<td bgcolor=$data_bg_color1 align=center>" . $row['JUDGE'] . "</td>\n";
+        echo "<td bgcolor=$data_bg_color1 align=center>" . $row['AUTO'] . "</td>\n";
+        echo "<td bgcolor=$data_bg_color1 align=center>" . $row['CURRENT'] . "</td>\n";
+ 	echo "<td bgcolor=$data_bg_color1 align=center><a href='judge_response.php?judged_id=" .
+        	$row['JUDGED_ID'] . "&team_id=" . $row['TEAM_ID'] .
+                "&problem=" . $row['PROBLEM_ID'] . "&attempt=" . $row['ATTEMPT'] . "&page=review.php'>judge submission</a></td>\n";
+	echo "</tr>\n";
+	$data_bg_color1 = $color_preserve;
+}
+
+echo "</table></table>\n";
+
+echo "<p><center>\n";
+echo "<form action='rejudge.php' method='POST'>\n";
+echo "Undo rejudgement:<input type='submit' value='UNDO'>(I'm still wary of this button)\n";
+echo "<input type='hidden' name='undo' value='true'>\n";
+echo "</form></center></p>";
+include("lib/footer.inc");
+?>
diff --git a/public_html/admin/setup_categories.php b/public_html/admin/setup_categories.php
new file mode 100755
index 0000000..4ed0012
--- /dev/null
+++ b/public_html/admin/setup_categories.php
@@ -0,0 +1,182 @@
+<?php
+#
+# Copyright (C) 2003 David Crim
+# Copyright (C) 2003 David Whittington
+# Copyright (C) 2005 Victor Replogle
+# Copyright (C) 2005 Jonathan Geisler
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/setup_categories.php
+#
+include_once("lib/admin_config.inc");
+include_once("lib/data.inc");
+include_once("lib/session.inc");
+include_once("lib/header.inc");
+if ($_GET)
+{
+	if(isset($_GET['edit_id']))
+	{
+		$edit_id = $_GET['edit_id'];
+		$_SESSION['edit_category'] = $edit_id;
+		if($edit_id != -1)
+		{
+			$sql = "select * from CATEGORIES WHERE CATEGORY_ID = '$edit_id'";
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				$error_msg = "Error: " . mysql_error();
+				$error_msg .= "<br>SQL: $sql";
+			}
+			else
+			{
+				$row = mysql_fetch_assoc($result);
+				$edit_category_name = $row['CATEGORY_NAME'];
+			}
+		}
+		$action = "Editing category: $edit_category_name";
+	}
+	else if(isset($_GET['remove_id']))
+	{
+		$remove_id = $_GET['remove_id'];
+		//delete the offending category if no teams are in it
+		$sql = "select * from TEAMS, CATEGORY_TEAM where TEAMS.TEAM_ID ";
+		$sql .= "= CATEGORY_TEAM.TEAM_ID AND CATEGORY_TEAM.CATEGORY_ID = $remove_id";
+		$result = mysql_query($sql);
+		if(!$result)
+		{
+			$error_msg = "Error: " . mysql_error();
+			$error_msg .= "<br>SQL: $sql";
+		}
+		if($result && mysql_num_rows($result) > 0)
+		{
+			$error_msg .= "Sorry, there are teams in that category, you must move them to a differant category";
+			$error_msg .= " before you can delete this category";
+		}
+		else
+		{
+			$sql="delete from CATEGORIES where CATEGORY_ID = $remove_id";
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				$error_msg = "Error: " . mysql_error();
+				$error_msg .= "<br>SQL: $sql";
+			}
+			else
+			{
+				$error_msg = "Category deleted successfully";
+			}
+		}
+		
+			
+	}
+}
+else if($_POST)
+{
+	if($_POST['submit'])
+	{
+		if(isset($_SESSION['edit_category']))
+		{
+			$sql = "update CATEGORIES set CATEGORY_NAME = '" . $_POST['category_name'];
+			$sql .= "' where CATEGORY_ID = " . $_SESSION['edit_category'];
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				$error_msg = "Error: " . mysql_error();
+				$error_msg = "<br>SQL: $sql";
+			}
+			else
+			{
+				unset($_SESSION['edit_category']);
+				$error_msg = "Category changed successfully";
+			}
+		}
+		else
+		{		
+			//adding a new person
+			$sql = "insert into CATEGORIES (CATEGORY_NAME) values('" . $_POST['category_name'] . "')";
+			$result = mysql_query($sql);
+			if($result)
+			{
+				$error_msg = "Successfull: New category created";
+			}
+			else
+			{
+				$error_msg = "Error:" . mysql_error();
+				$error_msg = "<br>SQL: $sql";
+			}
+		}
+	}
+}
+/*******************************************************
+End of POST section
+*******************************************************/
+//build some http strings we'll need later
+if(!$action)
+{
+	$action = "Add a new category";
+}
+$cur_categories = "";
+//get all the current categories
+$sql = "select * from CATEGORIES";
+$result = mysql_query($sql);
+if(mysql_num_rows($result) > 0) {
+	$cur_categories = "<a href=setup_categories.php><font size=+1>Add New Category</font></a><br>";
+	$cur_categories .= "<br><table>";
+	$cur_categories .= "<tr><td><font size=+1><b>Edit Current Categories</b></font></td></tr>";
+	while($row = mysql_fetch_assoc($result)){
+		$cur_categories .= "<tr><td>" . $row['CATEGORY_NAME']; 
+		$cur_categories .= " </td><td><font size=-1>";
+		$cur_categories .= "<a href=setup_categories.php?edit_id=" . $row['CATEGORY_ID'] . ">Edit</a>";
+		$cur_categories .= "</font></td><td><font size=-1>";
+		$cur_categories .= "<a href=setup_categories.php?remove_id=" . $row['CATEGORY_ID'] . ">Delete</a>";
+		$cur_categories .= "</font><br>\n";
+		$cur_categories .= "</td></tr>";
+	}
+	$cur_categories .= "</table>";
+}
+else
+{
+	$cur_categories = "No current categories";
+}
+
+//must be a http GET
+	echo " <table align=center bgcoloer=#ffffff cellpadding=0 cellspacing=0 border=0 width=100%>";
+	echo " <tr><td width=30% valign='top'>";
+	echo $cur_categories;
+	echo " </td>";
+	echo " <td width=50%>";
+	echo " <form action=setup_categories.php method=post>";
+	echo "	<table width=100% cellpadding=5 cellspacing=1 border=0> ";
+	if($error_msg)
+	{
+		echo "<tr><td><b>$error_msg</b></td></tr>";
+	}
+	else
+	{
+		echo "<tr><td><b>&nbsp</b></td></tr>";
+	}
+	echo "	  <tr bgcolor='$hd_bg_color1'> ";
+	echo "		<td align='center' colspan=2>";
+	echo "			<font color='$hd_txt_color1'>";
+	echo "				<b>Add or Edit Categories</b></font>";
+	echo "		</td>";
+	echo "	  </tr>";
+	echo "	  <tr bgcolor=$hd_bg_color2>";
+	echo "		<td align='center' colspan=2><font color='$hd_txt_color2'>";
+	echo "		<b>$action</b></font></td>";
+	echo "	  </tr> ";
+	echo "	  <tr bgcolor=\"$data_bg_color1\">";
+	echo "		<td>Category name: </td>";
+	echo "		<td><input type='text' name='category_name' ";
+	echo "			value = '$edit_category_name'></td>";
+	echo "	  </tr> ";
+	echo "	<tr><td><input name=submit type=submit value='Submit'></td></tr>";
+	echo "</form>";
+	echo "</td></tr>";
+	echo "</table>";
+	echo "	</td><td width=20%></td></tr>";
+	echo "</table>";
+	include("lib/footer.inc");
+?>
diff --git a/public_html/admin/setup_contest.php b/public_html/admin/setup_contest.php
new file mode 100755
index 0000000..634780d
--- /dev/null
+++ b/public_html/admin/setup_contest.php
@@ -0,0 +1,460 @@
+<?
+#
+# Copyright (C) 2003 David Whittington
+# Copyright (C) 2003, 2004 Jonathan Geisler
+# Copyright (C) 2005 Victor Replogle
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/setup_contest.php
+#
+	include("lib/admin_config.inc");
+	include("lib/data.inc");
+	include("lib/session.inc");
+
+if ($_POST)
+{
+	$failed = false;
+	$host_name = $_POST['contest_host'];
+	$contest_name = $_POST['contest_name'];
+	$contest_month = $_POST['contest_month'];
+	$contest_day = $_POST['contest_day'];
+	$contest_year = $_POST['contest_year'];
+	$freeze_hour = $_POST['freeze_hour'];
+	$freeze_minute = $_POST['freeze_minute'];
+	$freeze_second = $_POST['freeze_second'];
+	$end_hour = $_POST['end_hour'];
+	$end_minute = $_POST['end_minute'];
+	$end_second = $_POST['end_second'];
+	$username = $_POST['username'];
+	$password = $_POST['password'];
+	$base_directory = $_POST['base_directory'];
+	
+	//if the three checkboxes are not checked, they are submitted
+	//as undefined/not set.  Therefore, I used the isset function
+	//exclusively to decide if they wanted these three options
+	if (isset($_POST['team_show'])) {
+		$show_team_names = 1;
+	}
+	else{
+		$show_team_names = 0;
+	}
+	if (isset($_POST['stderr'])) {
+		$ignore_stderr = 1;
+	}
+	else {
+		$ignore_stderr = 0;
+	}
+	if (isset($_POST['forbidden_c'])) {
+		$forbidden_c = 1;
+	}
+	else {
+		$forbidden_c = 0;
+	}
+	if (isset($_POST['forbidden_cpp'])) {
+		$forbidden_cpp = 1;
+	}
+	else {
+		$forbidden_cpp = 0;
+	}
+	if (isset($_POST['forbidden_java'])) {
+		$forbidden_java = 1;
+	}
+	else {
+		$forbidden_java = 0;
+	}
+	if (isset($_POST['headers_c'])) {
+		$headers_c = 1;
+	}
+	else {
+		$headers_c = 0;
+	}
+	if (isset($_POST['headers_cpp'])) {
+		$headers_cpp = 1;
+	}
+	else {
+		$headers_cpp = 0;
+	}
+	if (isset($_POST['headers_java'])) {
+		$headers_java = 1;
+	}
+	else {
+		$headers_java = 0;
+	}
+	$num_problems = $_POST['num_problems'];
+	
+	$i = 0;
+	if ( !$host_name ) {
+		$error[$i] = "You forgot to give a contest host name.<br>";
+		$i++;
+		$failed=true;
+	}
+	if ( !$contest_name ) {
+		$error[$i] = "You forgot to give the contest a name.<br>";
+		$i++;
+		$failed=true;
+	}
+	if ( !$freeze_hour ) {
+		$error[$i] = "You forgot to give the contest a freeze hour.<br>";
+		$i++;
+		$failed=true;
+	}
+	if ( !$end_hour ) {
+		$error[$i] = "You forgot to give the contest an end hour.<br>";
+		$i++;
+		$failed=true;
+	}
+/*	if (!date_validate($contest_month, $contest_day, $contest_year)) {
+		$failed=true;
+	}
+	if (!time_validate($freeze_hour, $freeze_minute, $freeze_second)) {
+		$failed=true;
+	}
+	if (!time_validate($end_hour, $end_minute, $end_second)) {
+		$failed=true;
+	}*/
+
+	if ( !$base_directory ) {
+		$error[$i] = "You forgot to give the contest a base directory.<br>";
+		$i++;
+		$failed=true;
+	}
+	if($failed){
+		foreach($error as $err){
+			echo "<br>$err\n";
+		}
+		exit;
+	}
+
+	$contest_exists = mysql_query("SELECT * FROM CONTEST_CONFIG");
+#		echo mysql_num_rows($contest_exists);
+	$save_ts = 0;
+	$save_hs = 0;
+	$save_start = 0;
+	if (mysql_num_rows($contest_exists) > 0) {
+		$row = mysql_fetch_assoc($contest_exists);
+		$save_ts = $row['START_TS'];
+		$save_hs = $row['HAS_STARTED'];
+		$save_start = $row['START_TIME'];
+		$delete = mysql_query("DELETE FROM CONTEST_CONFIG");
+		if (!$delete) {
+			echo "<font color=\"#ff0000\"> Error!  Contest";
+			echo "creation failed.  Contact administrator.</font>";
+		}
+	}
+	//whether or not a contest was there, it should be deleted now
+	//and we can go ahead and create it.
+	$contest_date = $contest_year.'-'.$contest_month.'-'.$contest_day;
+	$freeze_delay = $freeze_hour*3600 + $freeze_minute*60 + $freeze_second;
+	$contest_delay = $end_hour*3600 + $end_minute*60 + $end_second;
+//		$sql = "UPDATE CONTEST_CONFIG ";
+//		$sql.= "SET HOST = '$host_name', CONTEST_NAME = '$contest_name'";
+
+	$sql = "INSERT INTO CONTEST_CONFIG (HOST, CONTEST_NAME, NUM_PROBLEMS, ";
+	$sql.= "CONTEST_DATE, START_TIME, FREEZE_DELAY, CONTEST_END_DELAY, ";
+	$sql.= "BASE_DIRECTORY, IGNORE_STDERR, JUDGE_USER, JUDGE_PASS, TEAM_SHOW, START_TS, HAS_STARTED) ";
+	$sql.= "VALUES ( '$host_name', '$contest_name', '$num_problems', '$contest_date', ";
+	$sql.= "	     '$save_start', '$freeze_delay', '$contest_delay', ";
+	$sql.= "	     '$base_directory', '$ignore_stderr', '$username', '$password', '$show_team_names', '$save_ts', '$save_hs') ";
+	$success = mysql_query($sql);
+	if ($success) {
+		if ($forbidden_c == 1 || $forbidden_cpp == 1 || $forbidden_java == 1) {
+			$forbidden = true;
+		}
+		else {
+			$forbidden = false;
+		}
+		if ($headers_c == 1 || $headers_cpp == 1 || $headers_java == 1) {
+			$headers = true;
+		}
+		else {
+			$headers = false;
+		}
+		$insert_sql_c = "UPDATE LANGUAGE ";
+		$insert_sql_c.= "SET 	REPLACE_HEADERS = '$headers_c',";
+		$insert_sql_c.= "	CHECK_BAD_WORDS = '$forbidden_c' ";
+		$insert_sql_c.= "WHERE LANGUAGE_NAME = 'C'";
+		$insert_sql_cpp = "UPDATE LANGUAGE SET REPLACE_HEADERS = '$headers_cpp',";
+		$insert_sql_cpp.= "			CHECK_BAD_WORDS = '$forbidden_cpp' ";
+		$insert_sql_cpp.= "WHERE LANGUAGE_NAME = 'C++'";
+		$insert_sql_java = "UPDATE LANGUAGE SET REPLACE_HEADERS = '$headers_java',";
+		$insert_sql_java.= "			CHECK_BAD_WORDS = '$forbidden_java' ";
+		$insert_sql_java.= "WHERE LANGUAGE_NAME = 'JAVA'";
+		$insert_c_success = mysql_query($insert_sql_c);
+		$insert_cpp_success = mysql_query($insert_sql_cpp);
+		$insert_java_success= mysql_query($insert_sql_java);
+		if (!$insert_c_success || !$insert_cpp_success || !$insert_java_success) {
+			echo "Error!  Couldn't update the language sets<br />";
+			echo "Please contact an administrator.";
+		}
+		else {
+			header("Location: setup_contest.php");
+			Print "<h2>Submission succeeded.  Redirecting...";
+		}
+	}
+	else {
+		echo "<font color=\"#ff0000\"> Contest creation failed.
+		Please contact administrator.";
+	}
+}
+/*******************************************************
+End of POST section
+*******************************************************/
+	include("lib/header.inc");
+
+	$link = mysql_connect($db_host, $db_user, $db_pass);
+	if(!$link){
+		print "Sorry.  Database connect failed.  Check your internet connection.";
+		exit;
+	}
+	$connect_good = mysql_select_db($db_name);
+	if (!$connect_good) {
+		print "Sorry.  Couldn't select the database name $db_name. Exiting...";
+		exit;
+	}
+
+	$sql = mysql_query("SELECT * FROM CONTEST_CONFIG");
+	if (!$sql) {
+		print "Could not tell if a contest has been created.  bailing out.";
+		exit;
+		#die or break
+	}
+	if (mysql_num_rows($sql) > 0) {
+	//a contest is already set up!  allow user to edit
+		$contest=true;
+		$row = mysql_fetch_assoc($sql);
+		echo "<center>\n";
+	
+		# Print out any errors
+		if(isset($error)) {
+		    echo "<br>";
+		    foreach($error as $er) {
+			echo "<b><font color=#ff0000>$er</font></b>";
+		    }
+		}
+		
+		echo "</center>";
+		echo "<p>";
+		echo "<form method=POST action=setup_contest.php>\n";
+		echo "<table align=center bgcolor=#ffffff cellpadding=0 cellspacing=0 border=0<tr><td>";
+		echo "<table width=100% cellpadding=5 cellspacing=1 border=0>\n";
+		echo "  <tr bgcolor=\"$hd_bg_color1\">\n";
+		echo "		<td align=\"center\" colspan=\"2\"><font color=\"$hd_txt_color1\"><b>Edit Contest Info</b></font></td>\n";
+		echo "	</tr>";
+		echo "	<tr bgcolor=\"$hd_bg_color2\">";
+		echo "		<td colspan=\"2\">Which aspect of your contest would you like to change?</td>";
+		echo "	</tr>";
+		$host = $row['HOST'];
+		$contest_name = $row['CONTEST_NAME'];
+		$today_month  = date('m', $contest_start_ts);
+		$today_day    = date('d', $contest_start_ts);
+		$today_year   = date('Y', $contest_start_ts);
+		$today_hour   = date('H', $contest_start_ts);
+		$today_minute = date('i', $contest_start_ts);
+		//calculating the number of seconds since January 1 1970 at midnight
+		//for our particular freeze/contest end values in seconds
+		$freeze_hour = gmdate('H', $contest_freeze_time);
+		$freeze_minute = gmdate('i', $contest_freeze_time);
+		$freeze_second = gmdate('s', $contest_freeze_time);
+		$end_hour = gmdate('H', $contest_end_time);
+		$end_minute = gmdate('i', $contest_end_time);
+		$end_second = gmdate('s', $contest_end_time);
+		$username = $row['JUDGE_USER'];
+		$password = $row['JUDGE_PASS'];
+		$base_directory = $row['BASE_DIRECTORY'];
+		$num_problems = $row['NUM_PROBLEMS'];
+		if($row['TEAM_SHOW'] == 1)
+			$team_show = "checked";
+		else
+			$team_show = "";
+		
+		if ($row['IGNORE_STDERR'] == true) {
+			$stderr_checked = "checked";
+		}
+		else {
+			$stderr_checked = "";
+		}
+		$language_specifics = mysql_query("SELECT * FROM LANGUAGE");
+		if (!$language_specifics) {
+			echo "Could not find language specific info<br />";
+			echo "Please contact an administrator.";
+		}
+		while ($lang_row = mysql_fetch_assoc($language_specifics)) {
+			if ($lang_row['LANGUAGE_NAME'] == 'C') {
+				$headers_c_checked = $lang_row['REPLACE_HEADERS'];
+				$forbidden_c_checked = $lang_row['CHECK_BAD_WORDS'];
+				if ($headers_c_checked) {
+					$headers_c_checked = "checked";
+				}
+				if ($forbidden_c_checked) {
+					$forbidden_c_checked = "checked";
+				}
+			}
+			elseif ($lang_row['LANGUAGE_NAME'] == "CXX") {
+				$headers_cpp_checked = $lang_row['REPLACE_HEADERS'];
+				$forbidden_cpp_checked = $lang_row['CHECK_BAD_WORDS'];
+				if ($headers_cpp_checked) {
+					$headers_cpp_checked = "checked";
+				}
+				if ($forbidden_cpp_checked) {
+					$forbidden_cpp_checked = "checked";
+				}
+			}
+			elseif ($lang_row['LANGUAGE_NAME'] == "JAVA") {
+				$headers_java_checked = $lang_row['REPLACE_HEADERS'];
+				$forbidden_java_checked = $lang_row['CHECK_BAD_WORDS'];
+				if ($headers_java_checked) {
+					$headers_java_checked = "checked";
+				}
+				if ($forbidden_java_checked) {
+					$forbidden_java_checked = "checked";
+				}
+			}
+		}
+	}
+	else {
+		$contest=false;
+		echo "<center>\n";
+		echo "<b>Set up a Contest</b><br><br>\n";
+		echo "</center>\n";
+		echo "<form method=POST action=setup_contest.php>\n";
+		echo "<p>";
+		echo "<table align=center bgcolor=#ffffff cellpadding=0 cellspacing=0 border=0<tr><td>";
+		echo "<table width=100% cellpadding=5 cellspacing=1 border=0>\n";
+		echo "  <tr bgcolor=\"$hd_bg_color1\">\n";
+		echo "		<td align=\"center\" colspan=\"2\"><font color=\"$hd_txt_color1\">";
+		echo "			<b>Contest Info</b></font></td>\n";
+		$host = "";
+		$contest_name = "";
+		$today_month  = date('m');
+		$today_day    = date('d');
+		$today_year   = date('Y');
+		$today_hour   = date('H');
+		$today_minute = date('i');
+		$freeze_hour = "04";
+		$freeze_minute = "00";
+		$freeze_second = "00";
+		$end_hour = "05";
+		$end_minute = "00";
+		$end_second = "00";
+		$base_directory = "";
+		$stderr_checked = "";
+		$forbidden_c_checked = "";
+		$forbidden_cpp_checked = "";
+		$forbidden_java_checked = "";
+		$headers_c_checked = "";
+		$headers_cpp_checked = "";
+		$headers_java_checked = "";
+		$num_problems = 8;
+		$username = "judge";
+		$password = "";
+	}
+
+
+//let's prompt for some content
+
+	echo "		<tr bgcolor=\"$data_bg_color1\">";
+	echo "			<td>Name of the contest <b>host</b>:</td>";
+	echo "			<td><input type=\"text\" name=\"contest_host\" ";
+	echo "				size=\"20\" value=\"$host\">";
+	echo "				</input></td>";
+	echo "		</tr>";
+	echo "		<tr bgcolor=\"$data_bg_color1\">";
+	echo "			<td>The contest's <b>name</b>:</td>";
+	echo "			<td><input type=\"text\" name=\"contest_name\" ";
+	echo "				size=\"20\" value=\"$contest_name\">";
+	echo "				</input></td>";
+	echo "		</tr>";
+#	echo "		<tr bgcolor=\"$data_bg_color1\">";
+#	echo "			<td>Number of problems:</td>";
+#	echo "			<td><input type=\"text\" name=\"num_problems\" ";
+#	echo "				size=\"2\" value=\"$num_problems\">";
+#	echo "				</input></td>";
+#	echo "		</tr>";
+#	echo "		<tr bgcolor=\"$data_bg_color1\">";
+#	echo "			<td>The <b>date </b>(mm/dd/yyyy) of the contest:</td> ";
+#	echo "			<td><input type=\"text\" name=\"contest_month\" size=\"2\" ";
+#	echo "				maxlength=2 value=\"$today_month\"></input> /";
+#	echo "			<input type=\"text\" name=\"contest_day\" size=\"2\" ";
+#	echo "				maxlength=2 value=\"$today_day\"> / ";
+#	echo "			<input type=\"text\" name=\"contest_year\" size=\"2\" ";
+#	echo "				maxlength=4 value=\"$today_year\"></td>";
+#	echo "		</tr> ";
+	echo "		<tr bgcolor=\"$data_bg_color1\"> ";
+	echo "			<td>Amount of time (HH:mm:ss) until the standings are frozen:</td> ";
+	echo "			<td><input type=\"text\" name=\"freeze_hour\" ";
+	echo "				size=\"2\" maxlength=2 value=\"$freeze_hour\"></input>:";
+	echo "			<input type=\"text\" name=\"freeze_minute\" ";
+	echo "				size=\"2\" maxlength=2 value=\"$freeze_minute\"></input>:";
+	echo "			<input type=\"text\" name=\"freeze_second\" ";
+	echo "				size=\"2\" maxlength=2 value=\"$freeze_second\"></input></td>";
+	echo "		</tr>";
+	echo "		<tr bgcolor=\"$data_bg_color1\">";
+	echo "			<td>Duration of the contest (HH:mm:ss)</td> ";
+	echo "			<td><input type=\"text\" name=\"end_hour\" size=\"2\"";
+	echo "				maxlength=2 value=\"$end_hour\"></input>:";
+	echo "			<input type=\"text\" name=\"end_minute\" size=\"2\"";
+	echo "				maxlength=2 value=\"$end_minute\"></input>:";
+	echo "			<input type=\"text\" name=\"end_second\" size=\"2\"";
+	echo "				maxlength=2 value=\"$end_second\"></input></td> ";
+	echo "		</tr>";
+	echo "		<tr bgcolor=\"$data_bg_color1\">";
+	echo "			<td>Base directory of the contest information (ex: ";
+	echo "			/usr/home/contest):</td> ";
+	echo "			<td><input type=\"text\" name=\"base_directory\" ";
+	echo "				size=\"30\" value=\"$base_directory\"></td>";
+	echo "		</tr>";
+	echo "		<tr bgcolor=\"$data_bg_color1\">";
+	echo "			<td>Username for all the judges to use</td> ";
+	echo "			<td><input type=\"text\" name=\"username\" ";
+	echo "				size=\"20\" value=\"$username\"></td>";
+	echo "		</tr>";
+	echo "		<tr bgcolor=\"$data_bg_color1\">";
+	echo "			<td>Password for the judge account</td> ";
+	echo "			<td><input type=password name=\"password\" ";
+	echo "				size=\"20\" value=\"$password\"></td>";
+	echo "		</tr>";
+	echo "		<tr bgcolor=\"$hd_bg_color2\">";
+	echo "			<td colspan=2>Customize the judging experience</td>";
+	echo "		</tr>";
+	echo "		<tr bgcolor=\"$data_bg_color1\">";
+	echo "			<td>Ignore standard error?</td>";
+	echo "			<td><input type=checkbox name=stderr $stderr_checked >";
+	echo "				</input>";
+	echo "		</tr>";
+	echo "		<tr bgcolor=\"$data_bg_color1\">";
+	echo "			<td>Check for forbidden words (C, C++, Java)?</td>";
+	echo "			<td> C: &nbsp";
+	echo "			<input type=checkbox name=forbidden_c $forbidden_c_checked >";
+	echo "				</input> &nbsp C++: &nbsp";
+	echo "			<input type=checkbox name=forbidden_cpp $forbidden_cpp_checked >";
+	echo "				</input> &nbsp Java: &nbsp";
+	echo "			<input type=checkbox name=forbidden_java $forbidden_java_checked >";
+	echo "				</input></td>";
+	echo "		</tr>";
+	echo "		<tr bgcolor=\"$data_bg_color1\">";
+	echo "			<td>Automatically include standard headers";
+	echo "				(C, C++, Java)?</td>";
+	echo "			<td> C: &nbsp";
+	echo "			<input type=checkbox name=headers_c $headers_c_checked >";
+	echo "				</input> &nbsp C++: &nbsp";
+	echo "			<input type=checkbox name=headers_cpp $headers_cpp_checked >";
+	echo "				</input> &nbsp Java: &nbsp";
+	echo "			<input type=checkbox name=headers_java $headers_java_checked >";
+	echo "				</input></td>";
+	echo "		</tr>";
+        echo "          <tr bgcolor=\"$data_bg_color1\">";
+        echo "                  <td>Display team names to judges?</td>";
+        echo "                  <td><input type=checkbox name=team_show $team_show >";
+        echo "                          </input>";
+        echo "          </tr>";
+	echo "		<tr align=center bgcolor=\"$data_bg_color1\">";
+	echo "			<td colspan=2> <input type=\"submit\" value=";
+	echo 			"\"Submit\" name=\"B1\"></input></td> ";
+	echo "		</tr>";
+	echo "	</table>";
+	echo "	</form>";
+
+		include("lib/footer.inc");
+?>
diff --git a/public_html/admin/setup_data_sets.php b/public_html/admin/setup_data_sets.php
new file mode 100755
index 0000000..f181cb9
--- /dev/null
+++ b/public_html/admin/setup_data_sets.php
@@ -0,0 +1,221 @@
+<?php
+#
+# Copyright (C) 2003 David Crim
+# Copyright (C) 2003 David Whittington
+# Copyright (C) 2005 Victor Replogle
+# Copyright (C) 2005 Jonathan Geisler
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/setup_data_sets.php
+#
+include_once("lib/admin_config.inc");
+include_once("lib/data.inc");
+include_once("lib/session.inc");
+include_once("lib/contest_info.inc");
+include_once("lib/header.inc");
+$data_dir = $base_dir . "/data/";
+
+if($_POST)
+{
+	if($_POST['submit'])
+	{
+		$problem_id = $_POST['problem_id'];
+		$_SESSION['edit_problem'] = $problem_id;
+		$error_msg = "Successfull: New data set created";
+		$sql = "select * from PROBLEMS WHERE PROBLEM_ID = '$problem_id'";
+		$result = mysql_query($sql);
+		if(!$result)
+		{
+			$error_msg = "Error: " . mysql_error();
+			$error_msg .= "<br>SQL: $sql";
+		}
+		else
+		{
+			if(mysql_num_rows($result)==0)
+			{
+				$error_msg = "<br>No rows returned: SQL: $sql";
+			}
+			else
+			{			
+				$row = mysql_fetch_assoc($result);
+				$edit_problem_name = $row['PROBLEM_NAME'];
+			}
+		}
+		$action = "Adding data set for problem: $edit_problem_name";
+		//adding a new data set
+		
+		print "Filename: " . $_FILES['data_set_in']['name'];
+		if(!preg_match("/\.in$/", $_FILES['data_set_in']['name']))
+		{
+			print "Adding in suffix";
+			$in_suffix = ".in";
+			$out_file_name = $_FILES['data_set_in']['name']. ".out";
+		}
+		else
+		{
+			print "No suffix added";
+			$in_suffix = "";
+			$out_file_name = preg_replace("/\.in$/", "", $_FILES['data_set_in']['name']) . ".out";
+		}
+		
+		$result = move_uploaded_file($_FILES['data_set_in']['tmp_name'], 
+				$data_dir . $_POST['problem_id'] . "_" . $_FILES['data_set_in']['name'] . $in_suffix);
+		if(!$result)
+		{
+			print "Failed to upload in file";
+			$error_msg = "Failed to upload 'in' file";
+		}
+		//copy over the destination out file name so when we glob the directory later
+		//we can search for pars of input/output files with the same name
+		
+		$result = move_uploaded_file($_FILES['data_set_out']['tmp_name'], 
+				$data_dir . $_POST['problem_id'] . "_" . $out_file_name);
+		if(!$result)
+		{
+			print "Failed to upload out file";
+			$error_msg = "Failed to upload 'out' file";
+		}
+	}
+
+}
+else if ($_GET)
+{
+	if(isset($_GET['problem_id']))
+	{
+		$problem_id = $_GET['problem_id'];
+		$_SESSION['edit_problem'] = $problem_id;
+		if($problem_id != -1)
+		{
+			$sql = "select * from PROBLEMS WHERE PROBLEM_ID = '$problem_id'";
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				$error_msg = "Error: " . mysql_error();
+				$error_msg .= "<br>SQL: $sql";
+			}
+			else
+			{
+				if(mysql_num_rows($result)==0)
+				{
+					$error_msg = "<br>No rows returned: SQL: $sql";
+				}
+				else
+				{			
+					$row = mysql_fetch_assoc($result);
+					$edit_problem_name = $row['PROBLEM_NAME'];
+				}
+			}
+		}
+		$action = "Adding data set for problem: $edit_problem_name";
+	}
+	else if(isset($_GET['remove_ds_name']))
+	{
+		//delete the problem 
+		$remove_ds_name = $_GET['remove_ds_name'];
+		$remove_ds_name = $data_dir . $remove_ds_name;
+		$result = unlink($remove_ds_name . ".in") && unlink($remove_ds_name . ".out");
+		if(!$result)
+		{
+			$error_msg = "Error deleting data set $remove_ds_name";
+		}
+		else
+		{
+			$error_msg = "Data set deleted successfully";
+		}
+	}
+}
+/*******************************************************
+End of POST section
+*******************************************************/
+//build some http strings we'll need later
+if(!$action)
+{
+	$action = "Add a new data set";
+}
+$cur_data_sets = "";
+//get all the current data sets
+$sql = "select * from PROBLEMS ORDER BY 'PROBLEM_ID'";
+$result = mysql_query($sql);
+if(mysql_num_rows($result) > 0) {
+	$cur_data_sets = "<font size=+1>&nbsp</a></font><br>";
+	$cur_data_sets .= "<br><table>";
+	$cur_data_sets .= "<tr><td><font size=+1><b>Edit Data Sets</b></font></td></tr>";
+	while($row = mysql_fetch_assoc($result)){
+		$cur_data_sets .= "<tr><td>" . $row['PROBLEM_NAME']; 
+		$cur_data_sets .= "</td><td><font size=-1><a href=setup_data_sets.php?problem_id";
+		$cur_data_sets .= "=" . $row['PROBLEM_ID'] . ">Add new data set</a></font></td></tr>";
+		$fs_parse = glob($data_dir . $row['PROBLEM_ID'] . "*in");
+		$cur_data_sets .= "<tr><td align=right><table>";
+		foreach ($fs_parse as $file)
+		{
+			$file_names = split("/", $file);
+			$file_name = $file_names[count($file_names)-1];
+			$data_set_name = preg_replace("/\.in$/", "",$file_name);
+			$cur_data_sets .= "<tr><td><font size=-1> $data_set_name</font></td>";
+			$cur_data_sets .= "<td><font size=-1><a href=setup_data_sets.php";
+			$cur_data_sets .= "?remove_ds_name=$data_set_name>Delete</a></font></td></tr>";
+		}
+		$cur_data_sets .="</table></td></tr>";
+	}
+	$cur_data_sets .= "</table>";
+}
+else
+{
+	$cur_data_sets = "No current data sets";
+}
+
+if(isset($_GET['problem_id']) || isset($_POST['problem_id']))
+{
+	$http_form .=  "	  <tr bgcolor=\"$data_bg_color1\">";
+	$http_form .=  "		<td>Input File: </td>";
+	$http_form .=  "		<td><input type='file' name='data_set_in'</td>";
+	$http_form .=  "	  </tr> ";
+	$http_form .=  "	  <tr bgcolor=\"$data_bg_color1\">";
+	$http_form .=  "		<td>Output File: </td>";
+	$http_form .=  "		<td><input type='file' name='data_set_out'</td>";
+	$http_form .=  "	  </tr> ";
+	$http_form .=  "	<tr><td><input name=submit type=submit value='Submit'></td></tr>";
+}
+else
+{
+	$action = "Select a problem from the left to add a data set";
+}
+
+
+//must be a http GET
+	echo " <table align=center bgcoloer=#ffffff cellpadding=0 cellspacing=0 border=0 width=100%>";
+	echo " <tr><td width=30% valign='top'>";
+	echo $cur_data_sets;
+	echo " </td>";
+	echo " <td width=50% valign='top'>";
+	echo " <form action=setup_data_sets.php enctype='multipart/form-data' method=post>";
+	echo " <input type=hidden name=problem_id value=$problem_id>";
+	echo "	<table width=100% cellpadding=5 cellspacing=1 border=0> ";
+	if($error_msg)
+	{
+		echo "<tr><td><b>$error_msg</b></td></tr>";
+	}
+	else
+	{
+		echo "<tr><td><b>&nbsp</b></td></tr>";
+	}
+	echo "	  <tr bgcolor='$hd_bg_color1'> ";
+	echo "		<td align='center' colspan=2>";
+	echo "			<font color='$hd_txt_color1'>";
+	echo "				<b>Add or Edit Data Sets</b></font>";
+	echo "		</td>";
+	echo "	  </tr>";
+	echo "	  <tr bgcolor=$hd_bg_color2>";
+	echo "		<td align='center' colspan=2><font color='$hd_txt_color2'>";
+	echo "		<b>$action</b></font></td>";
+	echo "	  </tr> ";
+	echo $http_form;
+	echo "</form>";
+	echo "</td></tr>";
+	echo "</table>";
+	echo "	</td><td width=20%></td></tr>";
+	echo "</table>";
+	include("lib/footer.inc");
+?>
diff --git a/public_html/admin/setup_forbidden.php b/public_html/admin/setup_forbidden.php
new file mode 100755
index 0000000..ac2c6fc
--- /dev/null
+++ b/public_html/admin/setup_forbidden.php
@@ -0,0 +1,176 @@
+<?php
+#
+# Copyright (C) 2003 David Crim
+# Copyright (C) 2003 David Whittington
+# Copyright (C) 2005 Victor Replogle
+# Copyright (C) 2005 Jonathan Geisler
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/setup_forbidden.php
+#
+include_once("lib/admin_config.inc");
+include_once("lib/data.inc");
+include_once("lib/session.inc");
+include_once("lib/header.inc");
+if ($_GET)
+{
+	if(isset($_GET['lang_id']))
+	{
+		$lang_id = $_GET['lang_id'];
+		$_SESSION['edit_language'] = $lang_id;
+		if($lang_id != -1)
+		{
+			$sql = "select * from LANGUAGE WHERE LANGUAGE_ID = '$lang_id'";
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				$error_msg = "Error: " . mysql_error();
+				$error_msg .= "<br>SQL: $sql";
+			}
+			else
+			{
+				$row = mysql_fetch_assoc($result);
+				$language_name = $row['LANGUAGE_NAME'];
+			}
+			$sql = "select * from FORBIDDEN_WORDS WHERE LANGUAGE_ID = '$lang_id'";
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				$error_msg = "Error: " . mysql_error();
+				$error_msg .= "<br>SQL: $sql";
+			}
+			else
+			{
+				$edit_forbidden_words = "";
+				while($row = mysql_fetch_assoc($result))
+				{
+					$edit_forbidden_words .= $row['WORD'] . ":";
+				}
+					
+			}
+		}
+		$action = "Editing forbidden words for language: $language_name";
+	}
+}
+else if($_POST)
+{
+	if($_POST['submit'])
+	{
+		if(isset($_SESSION['edit_language']))
+		{
+			//parse the headers string
+			$build_forbidden_words = split("\n", $_POST['edit_forbidden_words']);
+			unset($error_msg);
+			//clear out the DB
+			$sql = "delete from FORBIDDEN_WORDS where LANGUAGE_ID = '";
+			$sql .= $_SESSION['edit_language'] . "'";
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				$error_msg .= "Error: " . mysql_error();
+				$error_msg .= "<br>SQL: $sql";
+			}
+			foreach($build_forbidden_words as $forbidden_word)
+			{
+				//clean out blank lines composed of only whitespace
+				$forbidden_word = trim($forbidden_word);
+				if(strlen($forbidden_word) > 0)
+				{
+					$sql = "insert into FORBIDDEN_WORDS values('" . $_SESSION['edit_language'];
+					$sql .= "', '$forbidden_word')";
+					$result = mysql_query($sql);
+					if(!$result)
+					{
+						$error_msg .= "Error: " . mysql_error();
+						$error_msg .= "<br>SQL: $sql";
+					}
+				}
+			}
+		}
+		if(!isset($error_msg))
+		{
+			$error_msg .= "Forbidden Word changed successfully";
+		}
+	}
+}
+/*******************************************************
+End of POST section
+*******************************************************/
+//build some http strings we'll need later
+if(!$action)
+{
+	$action = "Please select a language to edit";
+}
+$cur_headers = "";
+//get all the current categories
+$sql = "select * from LANGUAGE";
+$result = mysql_query($sql);
+if(mysql_num_rows($result) > 0) {
+	$cur_headers = "<font size=+1>&nbsp</font><br>";
+	$cur_headers .= "<br><table>";
+	$cur_headers .= "<tr><td><font size=+1><b>Edit Current Forbidden Words</b></font></td></tr>";
+	while($row = mysql_fetch_assoc($result)){
+		$cur_headers .= "<tr><td>" . $row['LANGUAGE_NAME']; 
+		$cur_headers .= " </td><td><font size=-1>";
+		$cur_headers .= "<a href=setup_forbidden.php?lang_id=" . $row['LANGUAGE_ID'] . ">Edit</a>";
+		$cur_headers .= "</font>";
+		$cur_headers .= "</td></tr>";
+	}
+	$cur_headers .= "</table>";
+}
+else
+{
+	$cur_headers = "No current languages";
+}
+
+//must be a http GET
+	echo " <table align=center bgcoloer=#ffffff cellpadding=0 cellspacing=0 border=0 width=100%>";
+	echo " <tr><td width=30% valign='top'>";
+	echo $cur_headers;
+	echo " </td>";
+	echo " <td width=50%>";
+	echo " <form action=setup_forbidden.php method=post>";
+	echo "	<table width=100% cellpadding=5 cellspacing=1 border=0> ";
+	if($error_msg)
+	{
+		echo "<tr><td><b>$error_msg</b></td></tr>";
+	}
+	else
+	{
+		echo "<tr><td><b>&nbsp</b></td></tr>";
+	}
+	echo "	  <tr bgcolor='$hd_bg_color1'> ";
+	echo "		<td align='center' colspan=2>";
+	echo "			<font color='$hd_txt_color1'>";
+	echo "				<b>Edit Forbidden Words</b></font>";
+	echo "		</td>";
+	echo "	  </tr>";
+	echo "	  <tr bgcolor=$hd_bg_color2>";
+	echo "		<td align='center' colspan=2><font color='$hd_txt_color2'>";
+	echo "		<b>$action</b></font></td>";
+	echo "	  </tr> ";
+	//in this case, we don't add new things, so we need to check to see if we
+	//are editing something
+	if(isset($edit_forbidden_words))
+	{
+		$sub_headers = split(":", $edit_forbidden_words);
+		echo "	  <tr bgcolor=\"$data_bg_color1\">";
+		echo "		<td valign=top>Forbidden Words </td>";
+		echo "		<td><textarea rows=10 name='edit_forbidden_words'>";
+		foreach($sub_headers as $forbidden_word)
+		{
+			echo "$forbidden_word\n";
+		}
+		echo "			</textarea></td>";
+		echo "	  </tr> ";
+		echo "	<tr><td><input name=submit type=submit value='Submit'></td></tr>";
+	}
+	echo "</form>";
+	echo "</td></tr>";
+	echo "</table>";
+	echo "	</td><td width=20%></td></tr>";
+	echo "</table>";
+	include("lib/footer.inc");
+?>
diff --git a/public_html/admin/setup_headers.php b/public_html/admin/setup_headers.php
new file mode 100755
index 0000000..6cb7228
--- /dev/null
+++ b/public_html/admin/setup_headers.php
@@ -0,0 +1,176 @@
+<?php
+#
+# Copyright (C) 2003 David Crim
+# Copyright (C) 2003 David Whittington
+# Copyright (C) 2005 Victor Replogle
+# Copyright (C) 2005 Jonathan Geisler
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/setup_headers.php
+#
+include_once("lib/admin_config.inc");
+include_once("lib/data.inc");
+include_once("lib/session.inc");
+include_once("lib/header.inc");
+if ($_GET)
+{
+	if(isset($_GET['lang_id']))
+	{
+		$lang_id = $_GET['lang_id'];
+		$_SESSION['edit_language'] = $lang_id;
+		if($lang_id != -1)
+		{
+			$sql = "select * from LANGUAGE WHERE LANGUAGE_ID = '$lang_id'";
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				$error_msg = "Error: " . mysql_error();
+				$error_msg .= "<br>SQL: $sql";
+			}
+			else
+			{
+				$row = mysql_fetch_assoc($result);
+				$language_name = $row['LANGUAGE_NAME'];
+			}
+			$sql = "select * from HEADERS WHERE LANGUAGE_ID = '$lang_id'";
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				$error_msg = "Error: " . mysql_error();
+				$error_msg .= "<br>SQL: $sql";
+			}
+			else
+			{
+				$edit_headers = "";
+				while($row = mysql_fetch_assoc($result))
+				{
+					$edit_headers .= $row['HEADER'] . ":";
+				}
+					
+			}
+		}
+		$action = "Editing headers for language: $language_name";
+	}
+}
+else if($_POST)
+{
+	if($_POST['submit'])
+	{
+		if(isset($_SESSION['edit_language']))
+		{
+			//parse the headers string
+			$build_headers = split("\n", $_POST['edit_headers']);
+			unset($error_msg);
+			//clear out the DB
+			$sql = "delete from HEADERS where LANGUAGE_ID = '";
+			$sql .= $_SESSION['edit_language'] . "'";
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				$error_msg .= "Error: " . mysql_error();
+				$error_msg .= "<br>SQL: $sql";
+			}
+			foreach($build_headers as $header)
+			{
+				//clean out blank lines composed of only whitespace
+				$header = trim($header);
+				if(strlen($header) > 0)
+				{
+					$sql = "insert into HEADERS values('" . $_SESSION['edit_language'];
+					$sql .= "', '$header')";
+					$result = mysql_query($sql);
+					if(!$result)
+					{
+						$error_msg .= "Error: " . mysql_error();
+						$error_msg .= "<br>SQL: $sql";
+					}
+				}
+			}
+		}
+		if(!isset($error_msg))
+		{
+			$error_msg .= "Header changed successfully";
+		}
+	}
+}
+/*******************************************************
+End of POST section
+*******************************************************/
+//build some http strings we'll need later
+if(!$action)
+{
+	$action = "Please select a language to edit";
+}
+$cur_headers = "";
+//get all the current categories
+$sql = "select * from LANGUAGE";
+$result = mysql_query($sql);
+if(mysql_num_rows($result) > 0) {
+	$cur_headers = "<font size=+1>&nbsp</font><br>";
+	$cur_headers .= "<br><table>";
+	$cur_headers .= "<tr><td><font size=+1><b>Edit Current Headers</b></font></td></tr>";
+	while($row = mysql_fetch_assoc($result)){
+		$cur_headers .= "<tr><td>" . $row['LANGUAGE_NAME']; 
+		$cur_headers .= " </td><td><font size=-1>";
+		$cur_headers .= "<a href=setup_headers.php?lang_id=" . $row['LANGUAGE_ID'] . ">Edit</a>";
+		$cur_headers .= "</font>";
+		$cur_headers .= "</td></tr>";
+	}
+	$cur_headers .= "</table>";
+}
+else
+{
+	$cur_headers = "No current headers";
+}
+
+//must be a http GET
+	echo " <table align=center bgcoloer=#ffffff cellpadding=0 cellspacing=0 border=0 width=100%>";
+	echo " <tr><td width=30% valign='top'>";
+	echo $cur_headers;
+	echo " </td>";
+	echo " <td width=50%>";
+	echo " <form action=setup_headers.php method=post>";
+	echo "	<table width=100% cellpadding=5 cellspacing=1 border=0> ";
+	if($error_msg)
+	{
+		echo "<tr><td><b>$error_msg</b></td></tr>";
+	}
+	else
+	{
+		echo "<tr><td><b>&nbsp</b></td></tr>";
+	}
+	echo "	  <tr bgcolor='$hd_bg_color1'> ";
+	echo "		<td align='center' colspan=2>";
+	echo "			<font color='$hd_txt_color1'>";
+	echo "				<b>Edit Headers</b></font>";
+	echo "		</td>";
+	echo "	  </tr>";
+	echo "	  <tr bgcolor=$hd_bg_color2>";
+	echo "		<td align='center' colspan=2><font color='$hd_txt_color2'>";
+	echo "		<b>$action</b></font></td>";
+	echo "	  </tr> ";
+	//in this case, we don't add new things, so we need to check to see if we
+	//are editing something
+	if(isset($edit_headers))
+	{
+		$sub_headers = split(":", $edit_headers);
+		echo "	  <tr bgcolor=\"$data_bg_color1\">";
+		echo "		<td valign=top>Headers </td>";
+		echo "		<td><textarea rows=10 name='edit_headers'>";
+		foreach($sub_headers as $header)
+		{
+			echo "$header\n";
+		}
+		echo "			</textarea></td>";
+		echo "	  </tr> ";
+		echo "	<tr><td><input name=submit type=submit value='Submit'></td></tr>";
+	}
+	echo "</form>";
+	echo "</td></tr>";
+	echo "</table>";
+	echo "	</td><td width=20%></td></tr>";
+	echo "</table>";
+	include("lib/footer.inc");
+?>
diff --git a/public_html/admin/setup_problems.php b/public_html/admin/setup_problems.php
new file mode 100755
index 0000000..e60ad47
--- /dev/null
+++ b/public_html/admin/setup_problems.php
@@ -0,0 +1,329 @@
+<?php
+#
+# Copyright (C) 2003 David Crim
+# Copyright (C) 2003 David Whittington
+# Copyright (C) 2005 Victor Replogle
+# Copyright (C) 2005 Jonathan Geisler
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/setup_problems.php
+#
+include_once("lib/admin_config.inc");
+include_once("lib/data.inc");
+include_once("lib/contest_info.inc");
+include_once("lib/session.inc");
+include_once("lib/header.inc");
+
+$problem_dir =  __FILE__;
+$problem_dir = str_replace("admin/setup_problems.php", "", $problem_dir) . "problems/";
+
+if ($_GET)
+{
+	if(isset($_GET['problem_id']))
+	{
+		$problem_id = $_GET['problem_id'];
+		if(!isset($_SESSION['edit_problem']))
+		{
+			$_SESSION['edit_problem'] = $problem_id;
+		}
+				
+		if($problem_id != -1)
+		{
+			$sql = "select * from PROBLEMS WHERE PROBLEM_ID = '$problem_id'";
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				$error_msg = "Error: " . mysql_error();
+				$error_msg .= "<br>SQL: $sql";
+			}
+			else
+			{
+				if(mysql_num_rows($result)==0)
+				{
+					$error_msg = "<br>No rows returned: SQL: $sql";
+				}
+				else
+				{			
+					$row = mysql_fetch_assoc($result);
+					$edit_problem_name = $row['PROBLEM_NAME'];
+					$edit_problem_id = $row['PROBLEM_ID'];
+					$edit_problem_loc = $row['PROBLEM_LOC'];
+					$edit_problem_note = $row['PROBLEM_NOTE'];
+				}
+			}
+		}
+		$action = "Editing problem: $edit_problem_name";
+	}
+	else if(isset($_GET['remove_id']))
+	{
+		unset($_SESSION['edit_problem']);
+		$remove_id = $_GET['remove_id'];
+		//delete the problem 
+		$sql="delete from PROBLEMS where PROBLEM_ID = $remove_id";
+		$result = mysql_query($sql);
+		if(!$result)
+		{
+			$error_msg = "Error: " . mysql_error();
+			$error_msg .= "<br>SQL: $sql";
+		}
+		else
+		{
+			$error_msg = "Problem deleted successfully";
+		}
+	}
+	else
+	{
+		unset($_SESSION['edit_problem']);
+		
+	}
+}
+else if($_POST)
+{
+	if($_POST['submit'])
+	{
+		//Error Checking
+		if(!file_exists($problem_dir . $_POST['problem_loc']))
+		{
+			mkdir($problem_dir . $_POST['problem_loc']);
+		}
+		if(strlen($_POST['problem_name']) == 0)
+		{
+			$error_msg .= "You forget to set the problem name<br>\n";
+		}
+		else if(strlen($_POST['problem_loc']) == 0)
+		{
+			$error_msg .= "You forget to set the problem location<br>\n";
+		}
+		//---------------------------------------------------------------------------
+		else if(preg_match("/ /", $_POST['problem_loc']))
+		{
+			$error_msg .= "There are no spaces allowed in problem name!<br>\n";
+		}
+		//---------------------------------------------------------------------------
+		else if(!file_exists($problem_dir . $_POST['problem_loc']))
+		{
+			$error_msg .= "The location:" . $problem_dir . $_POST['problem_loc'];
+			$error_msg .= " does not exist.";
+		}
+		print "File lengths:" . strlen($_FILES['ps_file']['tmp_name']) . strlen($_FILES['html_file']['tmp_name']) . strlen($_FILES['pdf_file']['tmp_name']);
+		//process new file uploads if they exist
+		if(($_POST['upload_ps_id']) && strlen($_FILES['ps_file']['tmp_name']) > 0)
+		{
+			$result = move_uploaded_file($_FILES['ps_file']['tmp_name'], 
+					$problem_dir . $_POST['problem_loc'] . "/" .  $_POST['problem_name'] . ".ps");
+			if(!$result)
+			{
+				$error_msg .= "Failed to upload ps file";
+			}
+		}
+		if(($_POST['upload_html_id']) && strlen($_FILES['html_file']['tmp_name']) > 0)
+		{
+			$result = move_uploaded_file($_FILES['html_file']['tmp_name'], 
+					$problem_dir . $_POST['problem_loc'] . "/" .  $_POST['problem_name'] . ".html");
+			if(!$result)
+			{
+				$error_msg .= "Failed to upload html file";
+			}
+		}
+		if(($_POST['upload_pdf_id']) && strlen($_FILES['pdf_file']['tmp_name']) > 0)
+		{
+			$result = move_uploaded_file($_FILES['pdf_file']['tmp_name'], 
+					$problem_dir . $_POST['problem_loc'] . "/" .  $_POST['problem_name'] . ".pdf");
+			if(!$result)
+			{
+				$error_msg .= "Failed to upload pdf file";
+			}
+		}
+		else{			
+			if(isset($_SESSION['edit_problem']))
+			{
+				$sql = "update PROBLEMS set PROBLEM_NAME = '" . $_POST['problem_name'] . "', ";
+				$sql .= "PROBLEM_LOC = '" . $_POST['problem_loc'] . "',  ";
+				$sql .= "PROBLEM_NOTE = '" . $_POST['problem_note'] . " ";
+				$sql .= "' where PROBLEM_ID = " . $_SESSION['edit_problem'];
+				$result = mysql_query($sql);
+				if(!$result)
+				{
+					$error_msg = "Error: " . mysql_error();
+					$error_msg .= "<br>SQL: $sql";
+				}
+				else
+				{
+					unset($_SESSION['edit_problem']);
+					$error_msg = "Problem changed successfully";
+				}
+			}
+			//--------------------------------------------------------------------------------------------------------
+			else if($error_msg) {
+				$error_msg .= "No Problem Created";
+			}
+			//--------------------------------------------------------------------------------------------------------
+			else
+			{		
+				//adding a new problem
+				$sql = "INSERT into PROBLEMS (PROBLEM_NAME, PROBLEM_LOC, PROBLEM_NOTE) ";
+				$sql .= "values('" . $_POST['problem_name'] . "', '";
+				$sql .= $_POST['problem_loc'] . "', '";
+				$sql .= $_POST['problem_note'] . "')";
+				
+				$result = mysql_query($sql);
+				if($result)
+				{
+					$error_msg .= "Successfull: New problem created";
+				}
+				else{
+					$error_msg .= "Error:" . mysql_error();
+					$error_msg .= "<br>SQL: $sql";
+				}
+			}
+		}
+	}
+}
+else
+{
+	if($_SERVER['REQUEST_METHOD'])
+	{
+		unset($_SESSION['edit_problem']);
+	}
+}
+/*******************************************************
+End of POST section
+*******************************************************/
+//build some http strings we'll need later
+if(!$action)
+{
+	$action = "Add a new problem";
+}
+$cur_problems = "";
+//get all the current categories
+$sql = "select * from PROBLEMS ORDER by 'PROBLEM_ID'";
+$result = mysql_query($sql);
+if(mysql_num_rows($result) > 0) {
+	$cur_problems = "<font size=+1><a href=setup_problems.php>Add New Problem</a></font><br>";
+	$cur_problems .= "<br><table>";
+	$cur_problems .= "<tr><td><font size=+1><b>Edit Current Problems</b></font></td></tr>";
+	while($row = mysql_fetch_assoc($result)){
+		$cur_problems .= "<tr><td>" . $row['PROBLEM_NAME']; 
+		$cur_problems .= " </td><td><font size=-1>";
+		$cur_problems .= "<a href=setup_problems.php?problem_id=" . $row['PROBLEM_ID'] . ">Edit</a>";
+		$cur_problems .= "</font></td><td><font size=-1>";;
+		$cur_problems .= "<a href=setup_problems.php?remove_id=" . $row['PROBLEM_ID'] . ">Delete</a>";
+		$cur_problems .= "</font><br>\n";
+		$cur_problems .= "</td></tr>";
+	}
+	$cur_problems .= "</table>";
+}
+else
+{
+	$cur_problems = "No current problems";
+}
+
+$http_ps.="	  <tr bgcolor=\"$data_bg_color1\">";
+$http_ps.="		<td>Problem Postscript: </td>";
+if(file_exists("../problems/" . $edit_problem_loc . "/" . $edit_problem_name . ".ps"))
+{
+	$prev_ps_name = "<font color='green'>$edit_problem_name.ps</font><br>";
+}
+else
+{
+	$prev_ps_name = "<font color='red'>No file uploaded yet</font><br>";
+}
+$http_ps.="		<td>";
+$http_ps.="		<input type=hidden name=upload_ps_id value=$edit_problem_id>";
+$http_ps.= $prev_ps_name;
+$http_ps.="		<input type=file name=ps_file></input></td>";
+$http_ps.="	  </tr> ";
+
+
+$http_html.="	  <tr bgcolor=\"$data_bg_color1\">";
+$http_html.="		<td>Problem html: </td>";
+if(file_exists("../problems/" . $edit_problem_loc . "/" . $edit_problem_name . ".html"))
+{
+	$prev_html_name = "<font color='green'>$edit_problem_name.html</font><br>";
+}
+else
+{
+	$prev_html_name = "<font color='red'>No file uploaded yet</font><br>";
+}
+$http_html.="		<td>";
+$http_html.="		<input type=hidden name=upload_html_id value=$edit_problem_id>";
+$http_html.= $prev_html_name;
+$http_html.="		<input type=file name=html_file></input></td>";
+$http_html.="	  </tr> ";
+
+
+$http_pdf.="	  <tr bgcolor=\"$data_bg_color1\">";
+$http_pdf.="		<td>Problem pdf: </td>";
+if(file_exists("../problems/" . $edit_problem_loc . "/" . $edit_problem_name . ".pdf"))
+{
+	$prev_pdf_name = "<font color='green'>$edit_problem_name.pdf</font><br>";
+}
+else
+{
+	$prev_pdf_name = "<font color='red'>No file uploaded yet</font><br>";
+}
+$http_pdf.="		<td>";
+$http_pdf.="		<input type=hidden name=upload_pdf_id value=$edit_problem_id>";
+$http_pdf.= $prev_pdf_name;
+$http_pdf.="		<input type=file name=pdf_file></input></td>";
+$http_pdf.="	  </tr> ";
+
+
+
+
+//must be a http GET
+	echo " <table align=center bgcoloer=#ffffff cellpadding=0 cellspacing=0 border=0 width=100%>";
+	echo " <tr><td width=30% valign='top'>";
+	echo $cur_problems;
+	echo " </td>";
+	echo " <td width=50%>";
+	echo " <form enctype='multipart/form-data' action=setup_problems.php method=post>";
+	echo "	<table width=100% cellpadding=5 cellspacing=1 border=0> ";
+	if($error_msg)
+	{
+		echo "<tr><td><b>$error_msg</b></td></tr>";
+	}
+	else
+	{
+		echo "<tr><td><b>&nbsp</b></td></tr>";
+	}
+	echo "	  <tr bgcolor='$hd_bg_color1'> ";
+	echo "		<td align='center' colspan=2>";
+	echo "			<font color='$hd_txt_color1'>";
+	echo "				<b>Add or Edit Categories</b></font>";
+	echo "		</td>";
+	echo "	  </tr>";
+	echo "	  <tr bgcolor=$hd_bg_color2>";
+	echo "		<td align='center' colspan=2><font color='$hd_txt_color2'>";
+	echo "		<b>$action</b></font></td>";
+	echo "	  </tr> ";
+	echo "	  <tr bgcolor=\"$data_bg_color1\">";
+	echo "		<td>Problem name: </td>";
+	echo "		<td><input type='text' name='problem_name' ";
+	echo "			value = '$edit_problem_name'></td>";
+	echo "	  </tr> ";
+	echo "	  <tr bgcolor=\"$data_bg_color1\">";
+	echo "		<td>Problem location: </td>";
+	echo "		<td><input type='text' name='problem_loc' ";
+	echo "			value = '$edit_problem_loc'></td>";
+	echo "	  </tr> ";
+	echo "	  <tr bgcolor=\"$data_bg_color1\">";
+	echo "		<td>Problem notes: </td>";
+	echo "		<td><textarea rows=5 name='problem_note'>$edit_problem_note</textarea></td>";
+	echo "	  </tr> ";
+	if($_SESSION['edit_problem'])
+	{
+		echo $http_ps;
+		echo $http_html;
+		echo $http_pdf;
+	}
+	echo "	<tr><td><input name=submit type=submit value='Submit'></td></tr>";
+	echo "</form>";
+	echo "</td></tr>";
+	echo "</table>";
+	echo "	</td><td width=20%></td></tr>";
+	echo "</table>";
+	include("lib/footer.inc");
+?>
diff --git a/public_html/admin/setup_site.php b/public_html/admin/setup_site.php
new file mode 100755
index 0000000..7aa8c0a
--- /dev/null
+++ b/public_html/admin/setup_site.php
@@ -0,0 +1,189 @@
+<?php
+#
+# Copyright (C) 2003 David Crim
+# Copyright (C) 2003 David Whittington
+# Copyright (C) 2005 Victor Replogle
+# Copyright (C) 2005 Jonathan Geisler
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/setup_site.php
+#
+include_once("lib/admin_config.inc");
+include_once("lib/data.inc");
+include_once("lib/session.inc");
+include_once("lib/header.inc");
+if ($_GET)
+{
+	if(isset($_GET['site_id']))
+	{
+		$site_id = $_GET['site_id'];
+		$_SESSION['edit_site'] = $site_id;
+		if($site_id != -1)
+		{
+			$sql = "select * from SITE WHERE SITE_ID = '$site_id'";
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				$error_msg = "Error: " . mysql_error();
+				$error_msg = "<br>SQL: $sql";
+			}
+			else
+			{
+				if(mysql_num_rows($result)==0)
+				{
+					$error_msg = "<br>No rows returned: SQL: $sql";
+				}
+				else
+				{			
+					$row = mysql_fetch_assoc($result);
+					$edit_site_name = $row['SITE_NAME'];
+				}
+			}
+		}
+		$action = "Editing site: $edit_site_name";
+	}
+	else if(isset($_GET['remove_id']))
+	{
+		$remove_id = $_GET['remove_id'];
+		//delete the offending site if no teams are in it
+		$sql = "select * from TEAMS where SITE_ID = $remove_id";
+		$result = mysql_query($sql);
+			if(!$result)
+			{
+				$error_msg = "Error: " . mysql_error();
+				$error_msg = "<br>SQL: $sql";
+			}
+		if(mysql_num_rows($result) > 0)
+		{
+			$error_msg = "Sorry, there are teams in that site, you must move them to a differant site";
+			$error_msg .= " before you can delete this site";
+		}
+		else
+		{
+			$sql="delete from SITE where SITE_ID = $remove_id";
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				$error_msg = "Error: " . mysql_error();
+				$error_msg .= "<br>SQL: $sql";
+			}
+			else
+			{
+				$error_msg = "Site deleted successfully";
+			}
+		}
+		
+			
+	}
+}
+else if($_POST)
+{
+	if($_POST['submit'])
+	{
+		if(isset($_SESSION['edit_site']))
+		{
+			$sql = "update SITE set SITE_NAME = '" . $_POST['site_name'];
+			$sql .= "' where SITE_ID = " . $_SESSION['edit_site'];
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				$error_msg = "Error: " . mysql_error();
+				$error_msg .= "<br>SQL: $sql";
+			}
+			else
+			{
+				unset($_SESSION['edit_site']);
+				$error_msg = "Site changed successfully";
+			}
+		}
+		else
+		{		
+			//adding a new person
+			$sql = "INSERT into SITE (SITE_NAME, START_TIME) ";
+			$sql .= "values('" . $_POST['site_name'] . "',";
+			$sql .= "'" . $_POST['start_time_hours'] . ":" . $_POST['start_time_minutes'] . "')";
+			$result = mysql_query($sql);
+			if($result)
+			{
+				$error_msg = "Successfull: New site created";
+			}
+			else{
+				$error_msg = "Error:" . mysql_error();
+				$error_msg .= "<br>SQL: $sql";
+			}
+		}
+	}
+}
+/*******************************************************
+End of POST section
+*******************************************************/
+//build some http strings we'll need later
+if(!$action)
+{
+	$action = "Add a new site";
+}
+$cur_sites = "";
+//get all the current categories
+$sql = "select * from SITE";
+$result = mysql_query($sql);
+if(mysql_num_rows($result) > 0) {
+	$cur_sites = "<a href=setup_site.php><font size=+1>Add New Site</font></a><br>";
+	$cur_sites .= "<br><table>";
+	$cur_sites .= "<tr><td><font size=+1><b>Edit Current Sites</b></font></td></tr>";
+	while($row = mysql_fetch_assoc($result)){
+		$cur_sites .= "<tr><td>" . $row['SITE_NAME']; 
+		$cur_sites .= " </td><td><font size=-1>";
+		$cur_sites .= "<a href=setup_site.php?site_id=" . $row['SITE_ID'] . ">Edit</a>";
+		$cur_sites .= "</font></td><td><font size=-1>";
+		$cur_sites .= "<a href=setup_site.php?remove_id=" . $row['SITE_ID'] . ">Delete</a>";
+		$cur_sites .= "</font><br>\n";
+		$cur_sites .= "</td></tr>";
+	}
+	$cur_sites .= "</table>";
+}
+else
+{
+	$cur_sites = "No current categories";
+}
+
+//must be a http GET
+	echo " <table align=center bgcoloer=#ffffff cellpadding=0 cellspacing=0 border=0 width=100%>";
+	echo " <tr><td width=30% valign='top'>";
+	echo $cur_sites;
+	echo " </td>";
+	echo " <td width=50%>";
+	echo " <form action=setup_site.php method=post>";
+	echo "	<table width=100% cellpadding=5 cellspacing=1 border=0> ";
+	if($error_msg)
+	{
+		echo "<tr><td><b>$error_msg</b></td></tr>";
+	}
+	else
+	{
+		echo "<tr><td><b>&nbsp</b></td></tr>";
+	}
+	echo "	  <tr bgcolor='$hd_bg_color1'> ";
+	echo "		<td align='center' colspan=2>";
+	echo "			<font color='$hd_txt_color1'>";
+	echo "				<b>Add or Edit Sites</b></font>";
+	echo "		</td>";
+	echo "	  </tr>";
+	echo "	  <tr bgcolor=$hd_bg_color2>";
+	echo "		<td align='center' colspan=2><font color='$hd_txt_color2'>";
+	echo "		<b>$action</b></font></td>";
+	echo "	  </tr> ";
+	echo "	  <tr bgcolor=\"$data_bg_color1\">";
+	echo "		<td>Site name: </td>";
+	echo "		<td><input type='text' name='site_name' ";
+	echo "			value = '$edit_site_name'></td>";
+	echo "	  </tr> ";
+	echo "	<tr><td><input name=submit type=submit value='Submit'></td></tr>";
+	echo "</form>";
+	echo "</td></tr>";
+	echo "</table>";
+	echo "	</td><td width=20%></td></tr>";
+	echo "</table>";
+	include("lib/footer.inc");
+?>
diff --git a/public_html/admin/setup_team_category.php b/public_html/admin/setup_team_category.php
new file mode 100755
index 0000000..379fab3
--- /dev/null
+++ b/public_html/admin/setup_team_category.php
@@ -0,0 +1,85 @@
+<?php
+#
+# Copyright (C) 2002 David Whittington
+# Copyright (C) 2005 Jonathan Geisler
+# Copyright (C) 2005 Victor Replogle
+# Copyright (C) 2005 Steve Overton
+# Copyright (C) 2005 David Crim
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: standings.php
+#
+include_once("lib/admin_config.inc");
+include_once("lib/data.inc");
+include_once("lib/session.inc");
+include_once("lib/header.inc");
+
+    $link = mysql_connect ($db_host , $db_user, $db_pass) or die ("Could not connect to database");
+    mysql_select_db ($db_name) or die ("Could not select database");
+
+    if(isset($_POST["submit"]))
+    {
+    	$sql = "DELETE FROM CATEGORY_TEAM";
+	mysql_query($sql);
+	
+    	foreach($_POST as $box => $value) {
+	    if($value == 'on') {
+	    	$team = explode("|", $box);
+		$sql = "INSERT INTO CATEGORY_TEAM (TEAM_ID, CATEGORY_ID) VALUES ('$team[0]', '$team[1]');";
+		mysql_query($sql);
+	    }
+	}
+    }
+
+    $sql = "SELECT * FROM CATEGORIES";
+    $category = mysql_query($sql);
+    $num_cat = mysql_num_rows($category);
+    $cat_row = mysql_fetch_assoc($category);
+
+    $tmp = $num_cat * 10;
+    echo"<form method='POST' action='setup_team_category.php'>";
+    echo "<br><table align=center bgcolor=#000000 width='$tmp%' cellpadding=5 cellspacing=1 border=0>\n";
+    echo "<tr><td align=center colspan=99 bgcolor=$hd_bg_color1>";
+       echo "<font color=$hd_txt_color1><b>Teams</b></font>";
+    echo "</td></tr>\n";
+    echo "<tr bgcolor=$hd_bg_color2>\n";
+    echo "<td align=center><font color=$hd_txt_color2><b>Team Name</b></font></td>\n";
+    for($i=1; $i<=$num_cat; $i++) { 
+	echo "<td align=center><font color=$hd_txt_color2><b>".$cat_row["CATEGORY_NAME"]."</b></font></td>";
+	$cat_row = mysql_fetch_assoc($category);
+    }
+    echo "</tr>\n";
+
+    $sql = "SELECT * FROM TEAMS";
+    $team = mysql_query($sql);
+    $num_teams = mysql_num_rows($team);
+    $team_row = mysql_fetch_assoc($team);
+    
+    for($i=0; $i<$num_teams; $i++) {
+	if($i%2 == 0) {
+	    echo "<tr bgcolor=\"$data_bg_color1\">\n";
+	} else {
+	    echo "<tr bgcolor=\"$data_bg_color2\">\n";
+	}
+	echo "<td>".$team_row["TEAM_NAME"]."</td>";
+
+	for($x=1; $x<=$num_cat; $x++) {
+	    $sql = "SELECT * FROM CATEGORY_TEAM WHERE TEAM_ID = ".$team_row["TEAM_ID"]." AND CATEGORY_ID=$x";
+	    $query = mysql_query($sql);
+	    $check = mysql_num_rows($query);
+	    
+	    echo "<td><input type='checkbox' ";
+	    if($check==1)
+	    	echo"checked=checked ";
+	    echo "name='".$team_row["TEAM_ID"]."|$x'/></td>";
+	}
+	
+	$team_row = mysql_fetch_assoc($team);
+	echo "</tr>";
+    }
+    echo "</table>";
+    echo "<input type='submit' value='Make Changes' name='submit'/>";
+    echo "</form>";
+?>
diff --git a/public_html/admin/setup_teams.php b/public_html/admin/setup_teams.php
new file mode 100755
index 0000000..8f5b0e0
--- /dev/null
+++ b/public_html/admin/setup_teams.php
@@ -0,0 +1,320 @@
+<?php
+#
+# Copyright (C) 2003 David Crim
+# Copyright (C) 2003 David Whittington
+# Copyright (C) 2005 Victor Replogle
+# Copyright (C) 2005 Jonathan Geisler
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/setup_teams.php
+#
+include_once("lib/admin_config.inc");
+include_once("lib/data.inc");
+include_once("lib/session.inc");
+include_once("lib/header.inc");
+if ($_GET)
+{
+	if(isset($_GET['team_id']))
+	{
+		$team_id = $_GET['team_id'];
+		$_SESSION['edit_team'] = $team_id;
+		if($team_id != -1)
+		{
+			$sql = "select * from TEAMS WHERE TEAM_ID = '$team_id'";
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				$error_msg = "Error: " . mysql_error();
+				$error_msg .= "<br>SQL: $sql";
+			}
+			else
+			{
+				if(mysql_num_rows($result)==0)
+				{
+					$error_msg = "<br>No rows returned: SQL: $sql";
+				}
+				else
+				{			
+					$row = mysql_fetch_assoc($result);
+					$edit_team_name = $row['TEAM_NAME'];
+					$edit_organization = $row['ORGANIZATION'];
+					$edit_username = $row['USERNAME'];
+					$edit_password = $row['PASSWORD'];
+					$edit_site_id = $row['SITE_ID'];
+					$edit_coach_name = $row['COACH_NAME'];
+					$edit_contestant_1_name = $row['CONTESTANT_1_NAME'];
+					$edit_contestant_2_name = $row['CONTESTANT_2_NAME'];
+					$edit_contestant_3_name = $row['CONTESTANT_3_NAME'];
+					$edit_alternate_name = $row['ALTERNATE_NAME'];
+					$edit_email = $row['EMAIL'];
+				}
+			}
+		}
+		$action = "Editing team: $edit_team_name";
+	}
+	else if($_GET['remove_id'] >= 0)
+	{
+		$remove_id = $_GET['remove_id'];
+		$sql="delete from TEAMS where TEAM_ID = $remove_id";
+		$result = mysql_query($sql);
+
+		if ($result) {
+			$sql = "DELETE FROM CATEGORY_TEAMS WHERE TEAM_ID = $remove_id";
+			$result2 = mysql_query($sql);
+		}
+
+		if(!$result || !$result2)
+		{
+			$error_msg = "Error: " . mysql_error();
+			$error_msg .= "<br>SQL: $sql";
+		}
+		else
+		{
+			$error_msg = "Team deleted successfully";
+		}
+	}
+}
+else if($_POST)
+{
+	if(isset($_POST['submit']))
+	{
+		if(isset($_SESSION['edit_team']))
+		{
+			$sql = "update TEAMS set TEAM_NAME = '" . $_POST['team_name'] . "', ";
+			$sql .= "ORGANIZATION = '" . $_POST['organization'] . "',  ";
+			$sql .= "USERNAME = '" . $_POST['username'] . "',  ";
+			$sql .= "PASSWORD = '" . $_POST['password'] . "',  ";
+			$sql .= "SITE_ID = '" . $_POST['site_id'] . "',  ";
+			$sql .= "COACH_NAME = '" . $_POST['coach_name'] . "',  ";
+			$sql .= "CONTESTANT_1_NAME = '" . $_POST['contestant_1_name'] . "',  ";
+			$sql .= "CONTESTANT_2_NAME = '" . $_POST['contestant_2_name'] . "',  ";
+			$sql .= "CONTESTANT_3_NAME = '" . $_POST['contestant_3_name'] . "',  ";
+			$sql .= "ALTERNATE_NAME = '" . $_POST['alternate_name'] . "', ";
+			$sql .= "EMAIL = '" . $_POST['email'];
+			$sql .= "' where TEAM_ID = " . $_SESSION['edit_team'];
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				$error_msg = "Error: " . mysql_error();
+				$error_msg .= "<br>SQL: $sql";
+			}
+			else
+			{
+				unset($_SESSION['edit_team']);
+				$error_msg = "Team changed successfully";
+			}
+		}
+		else
+		{		
+			//adding a new person
+			$sql = "insert into TEAMS (TEAM_NAME, ORGANIZATION, USERNAME, PASSWORD, ";
+			$sql .= "SITE_ID, COACH_NAME, CONTESTANT_1_NAME, CONTESTANT_2_NAME, ";
+			$sql .= "CONTESTANT_3_NAME, ALTERNATE_NAME, EMAIL) ";
+			$sql .= "values('" . $_POST['team_name'] . "', '";
+			$sql .= $_POST['organization'] . "', '";
+			$sql .= $_POST['username'] . "', '";
+			$sql .= $_POST['password'] . "', '";
+			$sql .= $_POST['site_id'] . "', '";
+			$sql .= $_POST['coach_name'] . "', '";
+			$sql .= $_POST['contestant_1_name'] . "', '";
+			$sql .= $_POST['contestant_2_name'] . "', '";
+			$sql .= $_POST['contestant_3_name'] . "', '";
+			$sql .= $_POST['alternate_name'] . "', '";
+			$sql .= $_POST['email'] . "')";
+			$result = mysql_query($sql);
+			if($result)
+			{
+				$error_msg = "Successfull: New team created";
+			}
+			else{
+				$error_msg = "Error:" . mysql_error();
+				$error_msg .= "<br>SQL: $sql";
+			}
+		}
+	}
+}
+/*******************************************************
+End of POST section
+*******************************************************/
+//build some http strings we'll need later
+if(!$action)
+{
+	$action = "Add a new team";
+}
+
+$sql = "select * from SITE";
+$result = mysql_query($sql);
+if(!$result)
+{
+	echo "Error: Selecting from Site failed";
+	echo "<br>" . mysql_error();
+	echo "<br>$sql";
+	exit();
+}
+if(mysql_num_rows($result) == 0)
+{
+	echo "You need to create a site before you can create any teams";
+	exit();
+}
+
+$http_sites = "";
+while($row = mysql_fetch_assoc($result))
+{
+	$http_sites .= "<option value='" . $row['SITE_ID'] . "'"; 
+	if($row['SITE_ID'] == $edit_site_id)
+	{
+		$http_sites .= " selected ";
+	}
+	$http_sites .= ">";
+	$http_sites .= $row['SITE_NAME'];
+	$http_sites .= "</option>\n";
+}
+//-----------------------------------------------------------------------------------------
+//$pdf = pdf_new();
+//pdf_open_file($pdf, "teams.pdf");
+//pdf_set_info($pdf, "Author", "Admin");
+//pdf_set_info($pdf, "Title", "Teams");
+//pdf_begin_page($pdf, 612, 792);
+//$arial = pdf_findfont($pdf, "Arial", "host", 1);
+//pdf_setfont($pdf, $arial, 14);
+//-----------------------------------------------------------------------------------------
+$cur_teams = "";
+//get all the current categories
+$sql = "select * from TEAMS";
+$result = mysql_query($sql);
+if(mysql_num_rows($result) > 0) {
+	$cur_teams = "<a href=setup_teams.php><font size=+1>Add New Team</font></a><br>";
+	$cur_teams .= "<br><table>";
+	$cur_teams .= "<tr><td><font size=+1><b>Edit Current Teams</b></font></td></tr>";
+	while($row = mysql_fetch_assoc($result)){
+		$cur_teams .= "<tr><td>" . $row['TEAM_NAME']; 
+		$cur_teams .= " </td><td><font size=-1>";
+		$cur_teams .= "<a href=setup_teams.php?team_id=" . $row['TEAM_ID'] . ">Edit</a>";
+		$cur_teams .= "</font></td><td><font size=-1>";
+		$cur_teams .= "<a href=setup_teams.php?remove_id=" . $row['TEAM_ID'] . ">Delete</a>";
+		$cur_teams .= "</font><br>\n";
+		$cur_teams .= "</td></tr>";
+//-------------------------------------------------------------------------------------------
+//pdf_show_xy($pdf, $row['TEAM_NAME'], 15, 595);
+//pdf_show_xy($pdf, $row['PASSWORD'], 15, 580);
+//pdf_show_xy($pdf, $row['COACH_NAME'], 15, 565);
+//pdf_show_xy($pdf, $row['CONTESTANT_1_NAME'], 15, 550);
+//pdf_show_xy($pdf, $row['CONTESTANT_2_NAME'], 15, 535);
+//pdf_show_xy($pdf, $row['CONTESTANT_3_NAME'], 15, 520);
+//pdf_show_xy($pdf, $row['ALTERNATE_NAME'], 15, 505);
+//-------------------------------------------------------------------------------------------
+	}
+	$cur_teams .= "</table>";
+//-------------------------------------------------------------------------------------------
+//pdf_end_page($pdf);
+//pdf_close($pdf);
+//echo "<a href=\"teams.pdf\">PDF Teams</a>";
+//-------------------------------------------------------------------------------------------
+}
+else
+{
+	$cur_teams = "No current teams";
+}
+
+//must be a http GET
+	echo " <table align=center bgcoloer=#ffffff cellpadding=0 cellspacing=0 border=0 width=100%>";
+	echo " <tr><td width=30% valign='top'>";
+	echo $cur_teams;
+	echo " </td>";
+	echo " <td width=50%>";
+	echo " <form action=setup_teams.php method=post>";
+	echo "	<table width=100% cellpadding=5 cellspacing=1 border=0> ";
+	if($error_msg)
+	{
+		echo "<tr><td><b>$error_msg</b></td></tr>";
+	}
+	else
+	{
+		echo "<tr><td><b>&nbsp</b></td></tr>";
+	}
+	echo "	  <tr bgcolor='$hd_bg_color1'> ";
+	echo "		<td align='center' colspan=2>";
+	echo "			<font color='$hd_txt_color1'>";
+	echo "				<b>Add or Edit Teams</b></font>";
+	echo "		</td>";
+	echo "	  </tr>";
+	echo "	  <tr bgcolor=$hd_bg_color2>";
+	echo "		<td align='center' colspan=2><font color='$hd_txt_color2'>";
+	echo "		<b>$action</b></font></td>";
+	echo "	  </tr> ";
+	echo "	  <tr bgcolor=\"$data_bg_color1\">";
+	echo "		<td>Team name: </td>";
+	echo "		<td><input type='text' name='team_name' ";
+	echo "			value = '$edit_team_name'></td>";
+	echo "	  </tr> ";
+	echo "	  <tr bgcolor=\"$data_bg_color1\">";
+	echo "		<td>Organization: </td>";
+	echo "		<td><input type='text' name='organization' ";
+	echo "			value = '$edit_organization'></td>";
+	echo "	  </tr> ";
+	echo "	  <tr bgcolor=\"$data_bg_color1\">";
+	echo "		<td>Username</td>";
+	echo "		<td><input type='text' name='username' ";
+	echo "			value = '$edit_username'></td>";
+	echo "	  </tr> ";
+//-----------------------------------------------------------------------------------------------
+if(!$edit_password) {
+	srand((double)microtime()*1000000);
+	$token = md5(uniqid(rand()));
+	$edit_password = substr($token, 0, 3);
+	$edit_password .= substr($token, 5, 2);
+	$edit_password .= substr($token, -3);
+}
+//-----------------------------------------------------------------------------------------------
+	echo "	  <tr bgcolor=\"$data_bg_color1\">";
+	echo "		<td>Password: </td>";
+	echo "		<td><input type='text' name='password' ";
+	echo "			value = '$edit_password'></td>";
+	echo "	  </tr> ";
+
+	echo "	  <tr bgcolor=\"$data_bg_color1\">";
+	echo "		<td>Site:</td>";
+	echo "		<td><select name=site_id> ";
+	echo "			$http_sites</select></td>";
+	echo "	  </tr> ";
+	echo "	  <tr bgcolor=\"$data_bg_color1\">";
+	echo "		<td>Coach: </td>";
+	echo "		<td><input type='text' name='coach_name' ";
+	echo "			value = '$edit_coach_name'></td>";
+	echo "	  </tr> ";
+	echo "	  <tr bgcolor=\"$data_bg_color1\">";
+	echo "		<td>Contestant 1: </td>";
+	echo "		<td><input type='text' name='contestant_1_name' ";
+	echo "			value = '$edit_contestant_1_name'></td>";
+	echo "	  </tr> ";
+	echo "	  <tr bgcolor=\"$data_bg_color1\">";
+	echo "		<td>Contestant 2: </td>";
+	echo "		<td><input type='text' name='contestant_2_name' ";
+	echo "			value = '$edit_contestant_2_name'></td>";
+	echo "	  </tr> ";
+	echo "	  <tr bgcolor=\"$data_bg_color1\">";
+	echo "		<td>Contestant 3: </td>";
+	echo "		<td><input type='text' name='contestant_3_name' ";
+	echo "			value = '$edit_contestant_3_name'></td>";
+	echo "	  </tr> ";
+	echo "	  <tr bgcolor=\"$data_bg_color1\">";
+	echo "		<td>Alternate: </td>";
+	echo "		<td><input type='text' name='alternate_name' ";
+	echo "			value = '$edit_alternate_name'></td>";
+	echo "	  </tr> ";
+	echo "    <tr bgcolor=\"$data_bg_color1\">";
+        echo "          <td>Email: </td>";
+        echo "          <td><input type='text' name='email' ";
+        echo "                  value = '$edit_email'></td>";
+        echo "    </tr> ";
+
+	echo "	<tr><td><input name=submit type=submit value='Submit'></td></tr>";
+	echo "</form>";
+	echo "</td></tr>";
+	echo "</table>";
+	echo "	</td><td width=20%></td></tr>";
+	echo "</table>";
+	include("lib/footer.inc");
+?>
diff --git a/public_html/admin/undo.sql b/public_html/admin/undo.sql
new file mode 100644
index 0000000..db7e2e5
--- /dev/null
+++ b/public_html/admin/undo.sql
@@ -0,0 +1,6 @@
+DELETE FROM JUDGED_SUBMISSIONS;
+INSERT INTO JUDGED_SUBMISSIONS SELECT * FROM JUDGED_SUBMISSIONS_COPY;
+DROP TABLE `JUDGED_SUBMISSIONS_COPY`;
+DELETE FROM AUTO_RESPONSES;
+INSERT INTO AUTO_RESPONSES SELECT * FROM AUTO_RESPONSES_COPY;
+DROP TABLE `AUTO_RESPONSES_COPY`;
diff --git a/public_html/clarification_request_form.php b/public_html/clarification_request_form.php
new file mode 100755
index 0000000..4656473
--- /dev/null
+++ b/public_html/clarification_request_form.php
@@ -0,0 +1,72 @@
+<?php
+#
+# Copyright (C) 2002, 2003 David Whittington
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: clarification_request_form.php
+#
+	if($_SERVER['REQUEST_METHOD'] == 'POST') {
+	    #ls
+	    #
+	    # put header here so it will still redirect, but it will also
+            # insert clarification into the databse, so don't use exit()
+	    #
+	    header ("Location: clarifications.php?problem_id=-1&success=true");
+	}
+	include_once("lib/header.inc");
+	include_once("lib/config.inc");
+	include_once("lib/data.inc");
+	include_once("lib/session.inc");
+
+	if($_SERVER['REQUEST_METHOD'] == 'POST') {
+	    $question = $_POST['question'];
+	    $problem_id = $_POST['problem_id'];
+
+	    $sql  = "INSERT ";
+	    $sql .= "INTO CLARIFICATION_REQUESTS ";
+	    $sql .= "    (TEAM_ID, PROBLEM_ID, QUESTION, SUBMIT_TS) ";
+	    $sql .= " VALUES ";
+	    $sql .= "    ('$team_id', '$problem_id', '".mysql_real_escape_string($question)."', '".time()."')";
+	    mysql_query($sql);
+	}
+
+	echo "<br>\n";
+	echo "<form action=clarification_request_form.php method=post>\n";
+	echo "<table align=center bgcolor=#000000 cellpadding=0 cellspacing=0 border=0><tr><td>";
+	echo "<table width=100% cellpadding=5 cellspacing=1 border=0>\n";
+	echo "	<tr bgcolor=\"$hd_bg_color1\">\n";
+	echo "		<td align=\"center\" colspan=\"2\"><font color=\"$hd_txt_color1\"><b>Request Clarification</b></font></td>\n";
+	echo "	</tr>\n";
+	echo "	<tr bgcolor=$hd_bg_color2>\n";
+	echo "		<td align=\"center\" colspan=2><font color=\"$hd_txt_color2\"><b>Problem</b></font></td>\n";
+	echo "	</tr>\n";
+	echo "	<tr>\n";
+	echo "		<td align=\"center\" bgcolor=\"$data_bg_color1\">\n";
+	echo "			<font color=\"$data_txt_color1\">\n";
+	echo "			<select name=problem_id>\n";
+	echo "				<option value=\"-1\">General</option>\n";
+	foreach ($problems as $problem) {
+		echo "				<option value=\"$problem[id]]\">$problem[name]</option>\n";
+	}
+	echo "			</select>\n";
+	echo "			</font>\n";
+	echo "		</td>\n";
+	echo "	</tr>\n";
+	echo "	<tr bgcolor=$hd_bg_color2>\n";
+	echo "		<td align=\"center\" colspan=2><font color=\"$hd_txt_color2\"><b>Question</b></font></td>\n";
+	echo "	</tr>\n";
+	echo "	<tr bgcolor=\"$data_bg_color1\">\n";
+	echo "		<td align=center><font color=\"$data_txt_color1\">\n";
+	echo "			<textarea name=\"question\" rows=5 cols=70 wrap=virtual></textarea>\n";
+	echo "			<br><br>\n";
+	echo "			<input name=submit type=submit value=\"Submit Request\">\n";
+	echo "		</td>\n";
+	echo "	</tr>\n";
+	echo "</table>\n";
+	echo "</td></tr></table>";
+	echo "</form>\n";
+
+	include("lib/footer.inc");
+?>
diff --git a/public_html/clarifications.php b/public_html/clarifications.php
new file mode 100755
index 0000000..efed1c4
--- /dev/null
+++ b/public_html/clarifications.php
@@ -0,0 +1,145 @@
+<?
+#
+# Copyright (C) 2002, 2003 David Whittington
+# Copyright (C) 2005 Jonathan Geisler
+# Copyright (C) 2005 Victor Replogle
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: clarifications.php
+#
+	include("lib/header.inc");
+	include_once("lib/config.inc");
+	include_once("lib/data.inc");
+
+$problem_id = $_GET['problem_id'];
+$success = $_GET['success'];
+if (!$problem_id) {
+	$problem_id = 0;
+}
+
+echo "<center>\n";
+if ($problem_id == 0) {
+	echo "All";
+} else {
+	echo "<a href=clarifications.php?problem_id=0>All</a>";
+}
+if ($problem_id == -1) {
+	echo " | General";
+} else {
+	echo " | <a href=clarifications.php?problem_id=-1>General</a>";
+}
+$contest_disabled = false;
+foreach ($problems as $problem) {
+	if (time() < $site_start_ts) {
+	    echo " | Contest has not yet started at your site!";
+	    $contest_disabled = true;
+	    break;
+	} elseif (time() > ($contest_end_ts + $site_start_offset)) {
+		echo " | Contest has ended!";
+		$contest_disabled = true;
+		break;
+	} else {
+		if ($problem['id'] == $problem_id) {
+			echo " | $problem[name]";
+		} else {
+			echo " | <a href=clarifications.php?problem_id=$problem[id]>$problem[name]</a>";
+		}
+	}
+}
+echo "</center>\n";
+	
+
+if($contest_disabled == false){
+    echo "<br><center><b><a href=clarification_request_form.php?>Request Clarification</a></b></center><br>\n";
+}
+else{
+    echo "<br><center><b>Request Clarification</b><br>The contest is not currently active</center><br>\n";
+}
+if(isset($success) && $success == true) { 
+    echo "<center><font color=#00ff00><b>";
+    echo "Clarification Request Successfully Submitted";
+    echo "</b></font><center>";
+}
+echo "<br><table align=center bgcolor=#000000 width=90%
+	cellpadding=0 cellspacing=0 border=0><tr><td>\n";
+echo "<table align=center width=100% cellpadding=5 cellspacing=1 border=0>\n";
+echo "<tr><td colspan=5 align=center bgcolor=$hd_bg_color1>\n";
+echo "<font color=$hd_txt_color1><b>Clarifications</b></font></td></tr>\n";
+	
+$sql  = "SELECT * FROM CLARIFICATION_REQUESTS ";
+$sql .= "WHERE ";
+$sql .= "    (TEAM_ID='$team_id' OR BROADCAST='1') AND ";
+$sql .= "    RESPONSE <> '' ";
+if($problem_id != 0) {
+    $sql .= "    AND PROBLEM_ID='$problem_id'";
+}
+$sql .= "ORDER BY SUBMIT_TS DESC ";
+$result = mysql_query($sql);
+
+$clar = 0;	
+while ($row = mysql_fetch_assoc($result)) {
+	$clar = 1;
+	echo "<tr bgcolor=$hd_bg_color2>\n";
+    echo "<td align=center width=33%>";
+    echo "<font color=$hd_txt_color2><b>Team</b></font></td>\n";
+    echo "<td align=center width=33%>";
+    echo "<font color=$hd_txt_color2><b>Submission Time</b></font></td>\n";
+    echo "<td align=center width=34%>";
+    echo "<font color=$hd_txt_color2><b>Reply Time</b></font></td>\n";
+    echo "</tr>\n";
+    echo "<tr>\n";
+    if ($row['TEAM_ID'] != -1) {
+        echo "<td align=center bgcolor=$data_bg_color1>";
+        echo $teams[$row['TEAM_ID']]['name'] . "</td>\n";
+    }
+    else {
+        echo "<td align=center bgcolor=$data_bg_color1>Judge</td>\n";
+    }
+    echo "<td align=center bgcolor=$data_bg_color1>\n";
+    echo date("g:ia",$row['SUBMIT_TS'])."\n";
+    echo "</td>\n";
+    echo "<td align=center bgcolor=$data_bg_color1>\n";
+    if($row['REPLY_TS'] != 0) {
+		echo date("g:ia",$row['REPLY_TS'])."\n";
+	}
+    echo "</td>\n";
+    echo "</tr>\n";
+    echo "<tr>\n";
+    echo "<td align=left valign=top bgcolor=$hd_bg_color2><font color=$hd_txt_color2><b>Problem</b></font></td>\n";
+    echo "<td bgcolor=$data_bg_color1 colspan=2>\n";
+    if ($row['PROBLEM_ID']==-1) {
+        echo "General\n";
+    }
+    else {
+        echo $problems[$row['PROBLEM_ID']]['name']."\n";
+    }
+    echo "</td>\n";
+    echo "</tr>\n";
+    echo "<tr>\n";
+    echo "<td align=left valign=top bgcolor=$hd_bg_color2>";
+    echo "<font color=$hd_txt_color2><b>Question</b></font></td>\n";
+    echo "<td colspan=2 bgcolor=$data_bg_color1>$row[QUESTION]</td>\n";
+    echo "</tr>\n";
+    echo "<tr>\n";
+    echo "<td align=left valign=top bgcolor=$hd_bg_color2>";
+    echo "<font color=$hd_txt_color2><b>Response</b></font></td>\n";
+    echo "<td colspan=2 bgcolor=$data_bg_color1>$row[RESPONSE]</td>\n";
+    echo "</tr>\n";
+	if ($row['RESPONSE']=='') {
+        echo "  <tr>\n";
+        echo "<td colspan=3 bgcolor=$data_bg_color1>";
+        echo "<a href='clarification_response_form.php?clarification_id=$row[CLARIFICATION_ID]'>";
+        echo "Respond to Clarification</a></td>\n";
+        echo "  </tr>\n";
+    }
+}
+    if(!$clar){
+        echo "<tr><td align=center bgcolor=$data_bg_color1>";
+        echo "There are no clarifications</td></tr>";
+    }
+    echo "</table></table>";
+
+	include("lib/footer.inc");
+?>
diff --git a/public_html/createcontest2.php b/public_html/createcontest2.php
index f3ff43a..4e9c7f5 100755
--- a/public_html/createcontest2.php
+++ b/public_html/createcontest2.php
@@ -57,7 +57,9 @@ echo "<p>Clearing folders . . . ";
    $cmd2 .= $contest_dir;
    $cmd2 .= "/data/*";
    system($cmd2, $result);
+   
  echo "Result: $result \n";
+
    $cmd2 = "rm -rf ";
    $cmd2 .= $contest_dir;
    $cmd2 .= "/judged/*";
@@ -235,15 +237,14 @@ if (!$connect_good) {
     print "Sorry.  Database selection failed.";
     exit;
 }
-
 $contest_info = mysql_query("INSERT INTO SITE (CONTEST_HOST, CONTEST_NAME, FREEZE_DELAY, CONTEST_END_DELAY, BASE_DIRECTORY, JUDGE_USER) VALUES ('$CONTEST_HOST', '$contest', '14400', '18000', '$base_dir', 'judge')");
+
 if (!$contest_info) {
     print "Sorry.  Database request (INSERT) failed.";
     exit;
 }
 echo"Finished.</p>";
 
-
 #-----------editing database.inc----------------------------------
 echo "<p>Editing Settings . . . ";
 $fhdl = fopen("$contest_noesc/lib/database.inc", "r") OR die("Error with opening file 1");
@@ -303,7 +304,6 @@ if ($result) {
 }
 echo "Finished.</p>";
 
-
 #-------------------------edit readme-----------------------------
 $fhdl = fopen("readme/inst.html", "r") OR die("Error with opening file");
 $file = fread($fhdl, filesize("readme/inst.html"));
diff --git a/public_html/images/ReadMe.txt b/public_html/images/ReadMe.txt
new file mode 100644
index 0000000..9e3a5d2
--- /dev/null
+++ b/public_html/images/ReadMe.txt
@@ -0,0 +1,41 @@
+
+* The favicon
+
+  favicon.ico  --  The favicon file (supports both 16*16 and 32*32 dimensions).
+
+    You can add a favicon to your web page by uploading favicon.ico to your
+    website and inserting the following HTML tag inside the <head> ... </head>
+    section of your web page.
+
+      <link rel="shortcut icon" href="favicon.ico" >
+
+    Optional: if you would like to display the animated favicon, upload
+    animated_favicon1.gif as well and insert the following HTML tags.
+
+      <link rel="shortcut icon" href="favicon.ico" >
+      <link rel="icon" href="animated_favicon1.gif" type="image/gif" >
+
+    If you would like to test the favicon after updating your web page, the
+    Favicon Validator can check the favicon files and tags on your website.
+
+      http://www.htmlkit.com/go/favicon/validator/
+
+
+* Other extra files in this package
+
+  The following files are included for your convenience. You don't have to
+  upload or do anything else with these optional files.
+
+    preview_16x16.png  --  16*16 PNG image file of the favicon.
+    animated_favicon1.gif  --  Animated version of the favicon.
+    ReadMe.txt  --  This quick reference.
+
+
+* More information
+
+  If you have any questions, more information and tech support is available at:
+
+    http://www.htmlkit.com/go/favicon/help/
+
+
+  Thank you for using FavIcon from Pics.
diff --git a/public_html/images/Thumbs.db b/public_html/images/Thumbs.db
new file mode 100644
index 0000000..119efb9
Binary files /dev/null and b/public_html/images/Thumbs.db differ
diff --git a/public_html/images/animated_favicon1.gif b/public_html/images/animated_favicon1.gif
new file mode 100644
index 0000000..f7d8ada
Binary files /dev/null and b/public_html/images/animated_favicon1.gif differ
diff --git a/public_html/images/bg.png b/public_html/images/bg.png
new file mode 100644
index 0000000..07fab56
Binary files /dev/null and b/public_html/images/bg.png differ
diff --git a/public_html/images/favicon.ico b/public_html/images/favicon.ico
new file mode 100644
index 0000000..7fa19a6
Binary files /dev/null and b/public_html/images/favicon.ico differ
diff --git a/public_html/images/preview_16x16.png b/public_html/images/preview_16x16.png
new file mode 100644
index 0000000..c11c8c9
Binary files /dev/null and b/public_html/images/preview_16x16.png differ
diff --git a/public_html/index.html b/public_html/index.html
new file mode 100755
index 0000000..2229f9e
--- /dev/null
+++ b/public_html/index.html
@@ -0,0 +1,87 @@
+<?
+#
+# Copyright (C) 2002 David Whittington
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/index.php
+#
+#    include("lib/admin_config.inc");
+    include("lib/create.inc");
+
+session_name("TOUCHE-CREATE");
+session_start();
+$_SESSION = array();
+
+if($_SERVER['REQUEST_METHOD'] == 'GET'){
+
+?>
+<!DOCTYPE HTML PUBLIC "-//W3C/DTD HTML 4.0 Transitional//EN">
+<html>
+<head>
+<script language="javascript">
+    function set_focus() {
+	if (document.f.user.value) {
+	    document.f.password.focus();
+	} else {
+	    document.f.user.focus();
+	}
+    }
+</script>
+</head>
+<body bgcolor=<?=$page_bg_color?> onLoad="set_focus()">
+
+<form name="f" method="post" action="index.php">
+<table align="center" height="100%" border="0"><tr><td>
+<table cellpadding="1" cellspacing="0" border="0" bgcolor="#000000"><tr><td>
+<table cellpadding="5" cellspacing="0" border="0" bgcolor="<?=$title_bg_color?>"><tr><td>
+<font color="#ffffff">
+<b>Touche</b><br>
+<small>Creating Contest</small>
+</font>
+</td></tr><tr><td bgcolor="#ffffff">
+<?
+
+    if (isset($state) && $state == 1) {
+	echo "<center><font color=#cc0000><b>";
+	echo "Login or Password Invalid</b></font></center>\n";
+    }
+    else if (isset($state) && $state == 2) {
+	echo "<center><font color=#cc0000><b>";
+	    echo "You are not yet logged in</b></font></center>\n";
+    }
+
+?><table cellpadding="5" cellspacing="0" border="0">
+<tr><td>Login:</td><td><input type="text" name="user" size="20">
+</td></tr>
+<tr><td>Password:</td><td><input type="password" name="password" size="20"></td></tr>
+<tr><td>&nbsp;</td><td><input type="submit" name="submit" value="  OK  ">
+<input type="reset" name="submit" value=" Cancel "></td></tr>
+</table>
+</td></tr></table>
+</td></tr></table>
+</td></tr></table>
+</form>
+
+</body>
+</html>
+<?
+}
+else if($_SERVER['REQUEST_METHOD'] == 'POST'){
+    $user = $_POST['user'];
+    $password = $_POST['password'];
+
+    if($user == $create_user && $password == $create_pass) {
+	$_SESSION['admin_user'] = $user;
+	$_SESSION['admin_pass'] = $password;
+	header ("Location: createcontest.php");
+	exit(0);
+    }
+    else {
+    	header ("Location: index.php?state=1");
+	exit(0);
+    }
+}
+?>
+
diff --git a/public_html/index.php b/public_html/index.php
index cc521a2..f63585e 100755
--- a/public_html/index.php
+++ b/public_html/index.php
@@ -1,6 +1,7 @@
 <?
 #
 # Copyright (C) 2002 David Whittington
+# Copyright (C) 2005 Steve Overton
 #
 # See the file "COPYING" for further information about the copyright
 # and warranty status of this work.
@@ -20,6 +21,7 @@ if($_SERVER['REQUEST_METHOD'] == 'GET'){
 <!DOCTYPE HTML PUBLIC "-//W3C/DTD HTML 4.0 Transitional//EN">
 <html>
 <head>
+<!--link rel="shortcut icon" href="images/favicon.ico" /-->
 <script language="javascript">
     function set_focus() {
 	if (document.f.user.value) {
@@ -98,4 +100,3 @@ else if($_SERVER['REQUEST_METHOD'] == 'POST'){
     }
 }
 ?>
-
diff --git a/public_html/judge/Lang/C.inc b/public_html/judge/Lang/C.inc
new file mode 100755
index 0000000..5ccf4f3
--- /dev/null
+++ b/public_html/judge/Lang/C.inc
@@ -0,0 +1,50 @@
+<?
+include_once("generic.inc");
+
+function C_init($problem_handle) {
+	$problem_handle['preprocess'] = "c_preprocess";
+	$problem_handle['compile'] = "c_compile";
+	$problem_handle['execute'] = "generic_execute";
+	$problem_handle['post_process'] = "generic_post_process";
+	$problem_handle['copy_cmd'] = "generic_copy";
+	$problem_handle['process_errors'] = "generic_process_errors";
+	$problem_handle['use_proc_fs'] = 0;
+	$problem_handle['check_forbidden'] = "c_check_forbidden";
+}
+
+function c_preprocess($replace_headers) {
+    global $problem_handle;
+    $replace_text = "";
+    foreach($replace_headers as $header) {
+        $replace_text .= "#include <$header>\n";
+    }
+
+    $pattern = "/#include\s*[<\"](\s|\w|\.)+[\">]/";
+    $replace = "";
+    $replace_text.= preg_replace($pattern,
+        $replace,
+        $problem_handle['judged_source']);
+    $problem_handle['judged_source'] = $replace_text;
+}
+
+function c_compile() {
+    global $problem_handle;
+    $command  = "gcc ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= ".";
+    $command .= $problem_handle['file_extension'];
+    $command .= " -lm -o ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= " &> ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= ".err";
+    return $command;
+}
+
+function c_check_forbidden() {
+    return generic_check_forbidden("gcc", "#include");
+}
+?>
diff --git a/public_html/judge/Lang/CXX.inc b/public_html/judge/Lang/CXX.inc
new file mode 100755
index 0000000..5b510c5
--- /dev/null
+++ b/public_html/judge/Lang/CXX.inc
@@ -0,0 +1,50 @@
+<?
+include_once("generic.inc");
+
+function CXX_init($problem_handle) {
+	$problem_handle['preprocess'] = "cxx_preprocess";
+	$problem_handle['compile'] = "cxx_compile";
+	$problem_handle['execute'] = "generic_execute";
+	$problem_handle['post_process'] = "generic_post_process";
+	$problem_handle['copy_cmd'] = "generic_copy";
+	$problem_handle['process_errors'] = "generic_process_errors";
+	$problem_handle['use_proc_fs'] = 0;
+	$problem_handle['check_forbidden'] = "cxx_check_forbidden";
+}
+
+function cxx_preprocess($replace_headers) {
+    global $problem_handle;
+    $replace_text = "";
+    foreach($replace_headers as $header) {
+        $replace_text .= "#include <$header>\n";
+    }
+
+    $pattern = "/#include\s*[<\"](\s|\w|\.)+[\">]/";
+    $replace = "";
+    $replace_text.= preg_replace($pattern,
+        $replace,
+        $problem_handle['judged_source']);
+    $problem_handle['judged_source'] = $replace_text;
+}
+
+function cxx_compile() {
+	global $problem_handle;
+    $command  = "g++ ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= ".";
+    $command .= $problem_handle['file_extension'];
+    $command .= " -fno-asm -lm -w -o ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= " &> ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= ".err";
+    return $command;
+}
+
+function cxx_check_forbidden() {
+    return generic_check_forbidden("g++", "#include");
+}
+?>
diff --git a/public_html/judge/Lang/JAVA.inc b/public_html/judge/Lang/JAVA.inc
new file mode 100755
index 0000000..1fa0d1f
--- /dev/null
+++ b/public_html/judge/Lang/JAVA.inc
@@ -0,0 +1,120 @@
+<?
+include_once("generic.inc");
+
+function JAVA_init($problem_handle) {
+	$problem_handle['preprocess'] = "java_preprocess";
+	$problem_handle['compile'] = "java_compile";
+	$problem_handle['execute'] = "java_execute";
+	$problem_handle['post_process'] = "java_post_process";
+	$problem_handle['copy_cmd'] = "java_copy";
+	$problem_handle['use_proc_fs'] = 1; 
+	$problem_handle['process_errors'] = "generic_process_errors"; 
+	$problem_handle['check_forbidden'] = "java_check_forbidden";
+}
+
+function java_copy(){
+	global $problem_handle;
+	global $chroot_directory;
+	$tmp_cmd = "cp -pr ";
+	$tmp_cmd .= $problem_handle['judged_dir'];
+	$tmp_cmd .= $problem_handle['file_name'];
+	$tmp_cmd .= " ";
+	$tmp_cmd .= $chroot_directory;
+	$tmp_cmd .= $problem_handle['judged_dir'];
+	$tmp_cmd .= $problem_handle['file_name'];
+	return $tmp_cmd;
+}
+
+function java_preprocess($replace_headers) {
+    global $problem_handle;
+    $pattern = "/import\s+\S+\s*/";
+    $replace = "";
+    $replace_text = "";
+    foreach($replace_headers as $header) {
+	$replace_text .= "import $header;\n";
+    }
+
+    $replace_text .= preg_replace($pattern,
+	$replace,
+	$problem_handle['judged_source']);
+    $problem_handle['judged_source'] = $replace_text;
+}
+
+function java_compile() {
+    global $problem_handle;
+    mkdir($problem_handle['judged_dir'] . $problem_handle['file_name'], 0700);
+
+// Embedded version assumption! -- Needs to be "parameterized" through a setting in some config file. -sb
+#    $command  = "/usr/java/jdk1.5.0_02/bin/javac ";
+    $command  = "/opt/sun-jdk-1.6.0.15/bin/javac ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= ".java -d ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= " &> ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= ".err";
+    return $command;
+}
+
+function java_execute() {
+    global $problem_handle;
+    $mem_size = "128M";
+// Embedded version assumption! -- Needs to be "parameterized" through a setting in some config file. -sb
+    $command  = "\"/opt/sun-jdk-1.6.0.15/bin/java -Xms$mem_size -Xmx$mem_size -jar ";
+    $command .= $problem_handle['jar_filename'] . "\"";
+    return $command;
+}
+
+function java_post_process() {
+    global $problem_handle;
+    $manifest_filename  = $problem_handle['judged_dir'];
+    $manifest_filename .= $problem_handle['file_name'];
+    $manifest_filename .= "/manifest.mf";
+
+    # JGG
+    #
+    # This assumes two critical things:
+    #   1. The first class name contains the main method.  We don't
+    #      know where to look otherwise.
+    #   2. The same first class is not declared as public.  The
+    #      compiler will not let us compile a public class without
+    #      using the same name as the class for the filename!!!
+    #
+    #preg_match("/class\s+(\w+)/",
+    #	$problem_handle['judged_source'],
+    #	$classes);
+    #$main_class = $classes[1];
+    $main_class = "Main";
+    echo "<br>PostProcess:: main_class = $main_class<br>\n";
+    $output = fopen($manifest_filename,"w+");
+    if(!$output) {
+	echo "Error: Could not open file";
+	die("Error creating the manifest list file");
+    }
+    fwrite($output, "Manifest-Version: 1.0\n");
+    fwrite($output, "Main-Class: $main_class\n");
+    fclose($output);
+	
+    $problem_handle['jar_filename']  = $problem_handle['judged_dir'];
+    $problem_handle['jar_filename'] .= $problem_handle['file_name'];
+    $problem_handle['jar_filename'] .= "/$main_class.jar";
+
+    $command  = "jar cfm ";
+    $command .= $problem_handle['jar_filename'];
+    $command .= " $manifest_filename -C ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= "/ . &> ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= ".err";
+    return $command;
+}
+
+function java_check_forbidden() {
+    return array();
+}
+?>
diff --git a/public_html/judge/Lang/generic.inc b/public_html/judge/Lang/generic.inc
new file mode 100755
index 0000000..04fb49a
--- /dev/null
+++ b/public_html/judge/Lang/generic.inc
@@ -0,0 +1,76 @@
+<?
+
+function generic_copy() {
+	global $problem_handle;
+	global $chroot_directory;
+	$tmp_cmd = "cp ";
+	$tmp_cmd .= $problem_handle['judged_dir'];
+	$tmp_cmd .= $problem_handle['file_name'];
+	$tmp_cmd .= " ";
+	$tmp_cmd .= $chroot_directory;
+	$tmp_cmd .= $problem_handle['judged_dir'];
+	$tmp_cmd .= $problem_handle['file_name'];
+	return $tmp_cmd;
+}
+function generic_execute() {
+	global $problem_handle;
+    $command  = $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    return $command;
+}
+function generic_post_process() {
+    global $problem_handle;
+    $command  = "strip --strip-all ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= " &> ";
+    $command .= $problem_handle['judged_dir'];
+    $command .= $problem_handle['file_name'];
+    $command .= ".err";
+    return $command;
+}
+function generic_process_errors($errors, $orig_file_name) {
+        return preg_replace("/^[^:]+:/m", "$orig_file_name:", $errors);
+}
+
+function generic_check_forbidden($compiler, $replace) {
+    global $problem_handle;
+
+    $flag = "START_PREPROC_HERE";
+
+    $check_filename  = $problem_handle['judged_dir'];
+    $check_filename .= $problem_handle['file_name'];
+    $check_filename .= "_check.";
+    $check_filename .= $problem_handle['file_extension'];
+
+    $output_filename  = $problem_handle['judged_dir'];
+    $output_filename .= $problem_handle['file_name'];
+    $output_filename .= "_check.processed";
+
+    $original_source = $problem_handle['judged_source'];
+    $replaced_source = preg_replace("/$replace/", "$flag\n", $original_source);
+
+    $check_file = fopen($check_filename, "w");
+    if (!$check_file) {
+        echo "Could not open the check forbidden words file!";
+    }
+    fwrite($check_file, "THIS_IS_TO_SEPARATE\n\n");
+    fwrite($check_file, "$flag\n");
+    fwrite($check_file, $replaced_source);
+    fclose($check_file);
+
+    $command = "$compiler -E -P $check_filename > $output_filename";
+
+    system($command, $result);
+
+    if (!$result) {
+        $check = fopen($output_filename, "r") or die("Error opening preprocessed program");
+	$contents = fread($check, filesize($output_filename));
+	$preproc_array = preg_split("/$flag/", $contents);
+    } else {
+	echo "Could not check Forbidden words after preprocessing.<br />\n";
+    }
+
+    return $preproc_array;
+}
+?>
diff --git a/public_html/judge/clarification_response_form.php b/public_html/judge/clarification_response_form.php
new file mode 100755
index 0000000..5915681
--- /dev/null
+++ b/public_html/judge/clarification_response_form.php
@@ -0,0 +1,115 @@
+<?php
+#
+# Copyright (C) 2002 David Whittington
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/clarification_response_form.php
+#
+	include_once("lib/config.inc");
+	include_once("lib/judge.inc");
+	include_once("lib/header.inc");
+
+	$clarification_id = $_GET['clarification_id'];
+	$ignore_clarification = $_GET['ignore'];
+
+	//if the clarification_id = 0, then the judge is making a clarification without one being submitted
+	if($clarification_id > 0)
+	{
+		$sql  = "SELECT * FROM CLARIFICATION_REQUESTS ";
+		$sql .= "WHERE CLARIFICATION_ID=$clarification_id ";
+		$result = mysql_query($sql);
+		$row = mysql_fetch_assoc($result);
+	}
+	else
+	{
+		$sql = "SELECT * FROM PROBLEMS ORDER BY PROBLEM_ID";
+		$result = mysql_query($sql);
+		$numrows = mysql_num_rows($result);
+		$row = mysql_fetch_assoc($result);
+	}
+
+	echo "<br>\n";
+	echo "<form action=respond_to_clarification.php method=post>\n";
+	echo "<input type=hidden name=clarification_id value=$clarification_id>\n";
+	echo "<table align=center bgcolor=#000000 cellpadding=0 cellspacing=0 border=0 width=60%><tr><td>";
+	echo "<table width=100% cellpadding=5 cellspacing=1 border=0>\n";
+	echo "<tr bgcolor=\"$hd_bg_color1\">\n";
+	echo "<td align=\"center\" colspan=\"2\"><font color=\"$hd_txt_color1\"><b>Request Clarification</b></font></td>\n";
+	echo "</tr>\n";
+	echo "<tr bgcolor=$hd_bg_color2>\n";
+	echo "<td align=center colspan=2><font color=$hd_txt_color2><b>Problem</b></font></td>\n";
+	echo "</tr>\n";
+	echo "<tr>\n";
+	echo "<td align=center bgcolor=$data_bg_color1>\n";
+	if($clarification_id != 0) {
+		if ($row['PROBLEM_ID']!=-1) {
+			echo $problems[$row['PROBLEM_ID']]['name']."\n";
+		} else {
+			echo "		General\n";
+		}
+	}
+	else {
+		echo "<select name=problem>\n";
+		echo "<option value=-1 selected=selected>General</option>\n";
+		for($x = 0; $x < $numrows; $x++) {
+			echo "<option value=" . $row['PROBLEM_ID'] . ">" . $row['PROBLEM_NAME'] . "</option>\n";
+			$row = mysql_fetch_assoc($result);
+		}
+		echo "</select>\n";
+	}
+	echo "</td>\n";
+	echo "</tr>\n";
+	echo "<tr bgcolor=$hd_bg_color2>\n";
+	echo "<td align=center colspan=2><font color=$hd_txt_color2><b>Question</b></font></td>\n";
+	echo "</tr>\n";
+	echo "<tr bgcolor=$data_bg_color1>\n";
+	echo "<td align=center><font color=$data_txt_color1>\n";
+	echo "$row[QUESTION]\n";
+	echo "<br><br>\n";
+	echo "</td>\n";
+	echo "</tr>\n";
+	echo "<tr bgcolor=$hd_bg_color2>\n";
+	echo "<td align=center colspan=2><font color=$hd_txt_color2><b>Response</b></font></td>\n";
+	echo "</tr>\n";
+	echo "<tr bgcolor=$data_bg_color1>\n";
+	echo "<td align=center><font color=$data_txt_color1>\n";
+
+	if($ignore_clarification == "y") {
+		echo "<textarea name=response rows=5 cols=70 wrap=virtual>IGNORED</textarea>\n";
+	}else{
+		echo "<textarea name=response rows=5 cols=70 wrap=virtual></textarea>\n";
+	}
+	echo "<br><br>\n";
+	echo "<select name=\"broadcast\">\n";
+	if($clarification_id != 0) {
+		if ($row['TEAM_ID'] != -1) {
+			echo "<option value=\"0\">Respond to ".$teams[$row['TEAM_ID']]['name']."</option>\n";
+		}
+		echo "<option value=1>Respond to All</option>\n";
+	}
+
+	if($clarification_id == 0) {
+                $sql = "SELECT * FROM TEAMS ORDER BY TEAM_ID";
+                $result = mysql_query($sql);
+                $numrows = mysql_num_rows($result);
+		echo "<option value=".($numrows+1).">Respond to All</option>\n";
+
+//WORK ON THIS BUG
+//                $row = mysql_fetch_assoc($result);
+//		for($x = 0; $x < $numrows; $x++) {
+//			echo "<option value='".$x."'>".($x+1)." - ".$row['TEAM_NAME']."</option>\n";
+  //              	$row = mysql_fetch_assoc($result);
+//		}
+	}	
+	echo "</select>\n";
+	echo "<input name=submit type=submit value=Submit Response>\n";
+	echo "</td>\n";
+	echo "</tr>\n";
+	echo "</table>\n";
+	echo "</td></tr></table>";
+	echo "</form>\n";
+
+	include("lib/footer.inc");
+?>
diff --git a/public_html/judge/clarifications.php b/public_html/judge/clarifications.php
new file mode 100755
index 0000000..a81c1cd
--- /dev/null
+++ b/public_html/judge/clarifications.php
@@ -0,0 +1,177 @@
+<?
+#
+# Copyright (C) 2002 David Whittington
+# Copyright (C) 2003 Jonathan Geisler
+# Copyright (C) 2005 Steve Overton
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: judge/clarifications.php
+#
+    include_once("lib/config.inc");
+    include_once("lib/judge.inc");
+    include_once("lib/header.inc");
+
+
+judge_header(60);
+$clar_id = $_GET["clar_id"];
+if(!isset($_GET['sort']) || $_GET['sort'] == 'time') {
+	$sort = 'time';
+}
+else {
+	$sort = 'team';
+}
+
+
+if(!isset($clar_id)) {
+    $clar_id = -2;
+}
+echo "<center>\n";
+if ($clar_id == -2) {
+    echo "Pending";
+}
+else {
+    echo "<a href='clarifications.php?clar_id=-2&sort=$sort'>Pending</a>";
+}
+if ($clar_id == 0) {
+    echo " | All";
+}
+else {
+    echo " | <a href='clarifications.php?clar_id=0&sort=$sort'>All</a>";
+}
+
+if ($clar_id == -1) {
+    echo " | General";
+}
+else {
+    echo " | <a href='clarifications.php?clar_id=-1&sort=$sort'>General</a>";
+}
+foreach ($problems as $problem) {
+	if ($problem[id] == $clar_id) {
+		echo " | $problem[name]";
+	} else {
+		echo " | <a href=clarifications.php?clar_id=$problem[id]&sort=$sort>$problem[name]</a>";
+	}
+}
+echo "</center>\n";
+
+
+echo "<form action=clarifications.php method=get>";
+echo "<b>Sort By:</b><select name='sort' onchange='JavaScript:submit()'>";
+echo "<option value='time'";
+if($sort == 'time') {
+	echo "selected='selected'";
+}
+echo ">Time</option>\n";
+echo "<option value='team'";
+if($sort == 'team') {
+	echo "selected='selected'";
+}
+echo ">Team</option>\n";
+echo "</select>";
+echo "<input type='hidden' name='clar_id' value='$clar_id'>";
+echo "</form>\n";
+	
+if ($clar_id == -2) {
+    $sql  = "SELECT * FROM CLARIFICATION_REQUESTS ";
+    $sql .= "WHERE ";
+    $sql .= "    RESPONSE='' ";
+    if($sort == 'time')
+    	$sql .= "ORDER BY SUBMIT_TS DESC ";
+    else
+    	$sql .= "ORDER BY TEAM_ID ASC ";
+}
+else if($clar_id == 0) {
+    $sql = "SELECT * FROM CLARIFICATION_REQUESTS ";
+    if($sort == 'time')
+        $sql .= "ORDER BY SUBMIT_TS DESC ";
+    else
+        $sql .= "ORDER BY TEAM_ID ASC ";
+}
+else{
+    $sql  = "SELECT * FROM CLARIFICATION_REQUESTS ";
+    $sql .= "WHERE ";
+    $sql .= "    PROBLEM_ID = $clar_id AND ";
+    $sql .= "	 RESPONSE<>'' AND RESPONSE<>'IGNORED'";
+    if($sort == 'time')
+    	$sql .= "ORDER BY SUBMIT_TS DESC ";
+    else
+    	$sql .= "ORDER BY TEAM_ID ASC ";
+}
+
+$result = mysql_query($sql);
+
+echo "<br><table align=center bgcolor=#000000 width=90% 
+    cellpadding=0 cellspacing=0 border=0><tr><td>\n";
+echo "<table align=center width=100% cellpadding=5 cellspacing=1 border=0>\n";
+echo "<tr><td colspan=5 align=center bgcolor=$hd_bg_color1>\n";
+echo "<font color=$hd_txt_color1><b>Clarifications</b></font></td></tr>\n";
+
+$clar = 0;
+while ($row = mysql_fetch_assoc($result)) {
+    $clar = 1;
+    echo "<tr bgcolor=$hd_bg_color2>\n";
+    echo "<td align=center width=33%>";
+    echo "<font color=$hd_txt_color2><b>Team</b></font></td>\n";
+    echo "<td align=center width=33%>";
+    echo "<font color=$hd_txt_color2><b>Submission Time</b></font></td>\n";
+    echo "<td align=center width=34%>";
+    echo "<font color=$hd_txt_color2><b>Reply Time</b></font></td>\n";
+    echo "</tr>\n";
+    echo "<tr>\n";
+    if ($row['TEAM_ID'] != -1) {
+	echo "<td align=center bgcolor=$data_bg_color1>";
+	echo $teams[$row['TEAM_ID']]['name'] . "</td>\n";
+    }
+    else {
+	echo "<td align=center bgcolor=$data_bg_color1>Judge</td>\n";
+    }
+    echo "<td align=center bgcolor=$data_bg_color1>\n";
+    echo date("g:ia",$row['SUBMIT_TS'])."\n";
+    echo "</td>\n";
+    echo "<td align=center bgcolor=$data_bg_color1>\n";
+    if($row['REPLY_TS'] != 0) {
+	echo date("g:ia",$row['REPLY_TS'])."\n";
+    }
+    echo "</td>\n";
+    echo "</tr>\n";
+    echo "<tr>\n";
+    echo "<td align=left valign=top bgcolor=$hd_bg_color2><font color=$hd_txt_color2><b>Problem</b></font></td>\n";
+    echo "		<td bgcolor=$data_bg_color1 colspan=2>\n";
+    if ($row['PROBLEM_ID']==-1) {
+	echo "General\n";
+    }
+    else {
+	echo $problems[$row['PROBLEM_ID']]['name']."\n";
+    }
+    echo "</td>\n";
+    echo "</tr>\n";
+    echo "<tr>\n";
+    echo "<td align=left valign=top bgcolor=$hd_bg_color2>";
+    echo "<font color=$hd_txt_color2><b>Question</b></font></td>\n";
+    echo "<td colspan=2 bgcolor=$data_bg_color1>$row[QUESTION]</td>\n";
+    echo "</tr>\n";
+    echo "<tr>\n";
+    echo "<td align=left valign=top bgcolor=$hd_bg_color2>";
+    echo "<font color=$hd_txt_color2><b>Response</b></font></td>\n";
+    echo "<td colspan=2 bgcolor=$data_bg_color1>$row[RESPONSE]</td>\n";
+    echo "</tr>\n";
+    if ($row['RESPONSE']=='') {
+	echo "	<tr>\n";
+	echo "<td colspan=3 bgcolor=$data_bg_color1>";
+	echo "<a href='clarification_response_form.php?clarification_id=$row[CLARIFICATION_ID]'>";
+	echo "Respond to Clarification</a> &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp";
+	echo "<a href='clarification_response_form.php?clarification_id=$row[CLARIFICATION_ID]&ignore=y'>";
+	echo "Ignore Clarification</a></td>\n";
+	echo "	</tr>\n";
+    }
+}
+    if(!$clar){
+	echo "<tr><td align=center bgcolor=$data_bg_color1>";
+	echo "There are no new clarifications</td></tr>";
+    }
+    echo "</table></table>";
+    echo "<center><a href='clarification_response_form.php?clarification_id=0'>Make new Clarification</a></center>\n";	
+    include("lib/footer.inc");
+?>
diff --git a/public_html/judge/class.ezpdf.php b/public_html/judge/class.ezpdf.php
new file mode 100755
index 0000000..155bef7
--- /dev/null
+++ b/public_html/judge/class.ezpdf.php
@@ -0,0 +1,1555 @@
+<?php
+
+include_once('class.pdf.php');
+
+class Cezpdf extends Cpdf {
+//==============================================================================
+// this class will take the basic interaction facilities of the Cpdf class
+// and make more useful functions so that the user does not have to 
+// know all the ins and outs of pdf presentation to produce something pretty.
+//
+// IMPORTANT NOTE
+// there is no warranty, implied or otherwise with this software.
+// 
+// version 009 (versioning is linked to class.pdf.php)
+//
+// released under a public domain licence.
+//
+// Wayne Munro, R&OS Ltd, http://www.ros.co.nz/pdf
+//==============================================================================
+
+var $ez=array('fontSize'=>10); // used for storing most of the page configuration parameters
+var $y; // this is the current vertical positon on the page of the writing point, very important
+var $ezPages=array(); // keep an array of the ids of the pages, making it easy to go back and add page numbers etc.
+var $ezPageCount=0;
+
+// ------------------------------------------------------------------------------
+
+function Cezpdf($paper='a4',$orientation='portrait'){
+	// Assuming that people don't want to specify the paper size using the absolute coordinates
+	// allow a couple of options:
+	// orientation can be 'portrait' or 'landscape'
+	// or, to actually set the coordinates, then pass an array in as the first parameter.
+	// the defaults are as shown.
+	// 
+	// -------------------------
+	// 2002-07-24 - Nicola Asuni (info@tecnick.com):
+	// Added new page formats (45 standard ISO paper formats and 4 american common formats)
+	// paper cordinates are calculated in this way: (inches * 72) where 1 inch = 2.54 cm
+	// 
+	// Now you may also pass a 2 values array containing the page width and height in centimeters
+	// -------------------------
+
+	if (!is_array($paper)){
+		switch (strtoupper($paper)){
+			case '4A0': {$size = array(0,0,4767.87,6740.79); break;}
+			case '2A0': {$size = array(0,0,3370.39,4767.87); break;}
+			case 'A0': {$size = array(0,0,2383.94,3370.39); break;}
+			case 'A1': {$size = array(0,0,1683.78,2383.94); break;}
+			case 'A2': {$size = array(0,0,1190.55,1683.78); break;}
+			case 'A3': {$size = array(0,0,841.89,1190.55); break;}
+			case 'A4': default: {$size = array(0,0,595.28,841.89); break;}
+			case 'A5': {$size = array(0,0,419.53,595.28); break;}
+			case 'A6': {$size = array(0,0,297.64,419.53); break;}
+			case 'A7': {$size = array(0,0,209.76,297.64); break;}
+			case 'A8': {$size = array(0,0,147.40,209.76); break;}
+			case 'A9': {$size = array(0,0,104.88,147.40); break;}
+			case 'A10': {$size = array(0,0,73.70,104.88); break;}
+			case 'B0': {$size = array(0,0,2834.65,4008.19); break;}
+			case 'B1': {$size = array(0,0,2004.09,2834.65); break;}
+			case 'B2': {$size = array(0,0,1417.32,2004.09); break;}
+			case 'B3': {$size = array(0,0,1000.63,1417.32); break;}
+			case 'B4': {$size = array(0,0,708.66,1000.63); break;}
+			case 'B5': {$size = array(0,0,498.90,708.66); break;}
+			case 'B6': {$size = array(0,0,354.33,498.90); break;}
+			case 'B7': {$size = array(0,0,249.45,354.33); break;}
+			case 'B8': {$size = array(0,0,175.75,249.45); break;}
+			case 'B9': {$size = array(0,0,124.72,175.75); break;}
+			case 'B10': {$size = array(0,0,87.87,124.72); break;}
+			case 'C0': {$size = array(0,0,2599.37,3676.54); break;}
+			case 'C1': {$size = array(0,0,1836.85,2599.37); break;}
+			case 'C2': {$size = array(0,0,1298.27,1836.85); break;}
+			case 'C3': {$size = array(0,0,918.43,1298.27); break;}
+			case 'C4': {$size = array(0,0,649.13,918.43); break;}
+			case 'C5': {$size = array(0,0,459.21,649.13); break;}
+			case 'C6': {$size = array(0,0,323.15,459.21); break;}
+			case 'C7': {$size = array(0,0,229.61,323.15); break;}
+			case 'C8': {$size = array(0,0,161.57,229.61); break;}
+			case 'C9': {$size = array(0,0,113.39,161.57); break;}
+			case 'C10': {$size = array(0,0,79.37,113.39); break;}
+			case 'RA0': {$size = array(0,0,2437.80,3458.27); break;}
+			case 'RA1': {$size = array(0,0,1729.13,2437.80); break;}
+			case 'RA2': {$size = array(0,0,1218.90,1729.13); break;}
+			case 'RA3': {$size = array(0,0,864.57,1218.90); break;}
+			case 'RA4': {$size = array(0,0,609.45,864.57); break;}
+			case 'SRA0': {$size = array(0,0,2551.18,3628.35); break;}
+			case 'SRA1': {$size = array(0,0,1814.17,2551.18); break;}
+			case 'SRA2': {$size = array(0,0,1275.59,1814.17); break;}
+			case 'SRA3': {$size = array(0,0,907.09,1275.59); break;}
+			case 'SRA4': {$size = array(0,0,637.80,907.09); break;}
+			case 'LETTER': {$size = array(0,0,612.00,792.00); break;}
+			case 'LEGAL': {$size = array(0,0,612.00,1008.00); break;}
+			case 'EXECUTIVE': {$size = array(0,0,521.86,756.00); break;}
+			case 'FOLIO': {$size = array(0,0,612.00,936.00); break;}
+		}
+		switch (strtolower($orientation)){
+			case 'landscape':
+				$a=$size[3];
+				$size[3]=$size[2];
+				$size[2]=$a;
+				break;
+		}
+	} else {
+		if (count($paper)>2) {
+			// then an array was sent it to set the size
+			$size = $paper;
+		}
+		else { //size in centimeters has been passed
+			$size[0] = 0;
+			$size[1] = 0;
+			$size[2] = ( $paper[0] / 2.54 ) * 72;
+			$size[3] = ( $paper[1] / 2.54 ) * 72;
+		}
+	}
+	$this->Cpdf($size);
+	$this->ez['pageWidth']=$size[2];
+	$this->ez['pageHeight']=$size[3];
+	
+	// also set the margins to some reasonable defaults
+	$this->ez['topMargin']=30;
+	$this->ez['bottomMargin']=30;
+	$this->ez['leftMargin']=30;
+	$this->ez['rightMargin']=30;
+	
+	// set the current writing position to the top of the first page
+	$this->y = $this->ez['pageHeight']-$this->ez['topMargin'];
+	// and get the ID of the page that was created during the instancing process.
+	$this->ezPages[1]=$this->getFirstPageId();
+	$this->ezPageCount=1;
+}
+
+// ------------------------------------------------------------------------------
+// 2002-07-24: Nicola Asuni (info@tecnick.com)
+// Set Margins in centimeters
+function ezSetCmMargins($top,$bottom,$left,$right){
+	$top = ( $top / 2.54 ) * 72;
+	$bottom = ( $bottom / 2.54 ) * 72;
+	$left = ( $left / 2.54 ) * 72;
+	$right = ( $right / 2.54 ) * 72;
+	$this->ezSetMargins($top,$bottom,$left,$right);
+}
+// ------------------------------------------------------------------------------
+
+
+function ezColumnsStart($options=array()){
+  // start from the current y-position, make the set number of columne
+  if (isset($this->ez['columns']) && $this->ez['columns']==1){
+    // if we are already in a column mode then just return.
+    return;
+  }
+  $def=array('gap'=>10,'num'=>2);
+  foreach($def as $k=>$v){
+    if (!isset($options[$k])){
+      $options[$k]=$v;
+    }
+  }
+  // setup the columns
+  $this->ez['columns']=array('on'=>1,'colNum'=>1);
+
+  // store the current margins
+  $this->ez['columns']['margins']=array(
+     $this->ez['leftMargin']
+    ,$this->ez['rightMargin']
+    ,$this->ez['topMargin']
+    ,$this->ez['bottomMargin']
+  );
+  // and store the settings for the columns
+  $this->ez['columns']['options']=$options;
+  // then reset the margins to suit the new columns
+  // safe enough to assume the first column here, but start from the current y-position
+  $this->ez['topMargin']=$this->ez['pageHeight']-$this->y;
+  $width=($this->ez['pageWidth']-$this->ez['leftMargin']-$this->ez['rightMargin']-($options['num']-1)*$options['gap'])/$options['num'];
+  $this->ez['columns']['width']=$width;
+  $this->ez['rightMargin']=$this->ez['pageWidth']-$this->ez['leftMargin']-$width;
+  
+}
+// ------------------------------------------------------------------------------
+function ezColumnsStop(){
+  if (isset($this->ez['columns']) && $this->ez['columns']['on']==1){
+    $this->ez['columns']['on']=0;
+    $this->ez['leftMargin']=$this->ez['columns']['margins'][0];
+    $this->ez['rightMargin']=$this->ez['columns']['margins'][1];
+    $this->ez['topMargin']=$this->ez['columns']['margins'][2];
+    $this->ez['bottomMargin']=$this->ez['columns']['margins'][3];
+  }
+}
+// ------------------------------------------------------------------------------
+function ezInsertMode($status=1,$pageNum=1,$pos='before'){
+  // puts the document into insert mode. new pages are inserted until this is re-called with status=0
+  // by default pages wil be inserted at the start of the document
+  switch($status){
+    case '1':
+      if (isset($this->ezPages[$pageNum])){
+        $this->ez['insertMode']=1;
+        $this->ez['insertOptions']=array('id'=>$this->ezPages[$pageNum],'pos'=>$pos);
+      }
+      break;
+    case '0':
+      $this->ez['insertMode']=0;
+      break;
+  }
+}
+// ------------------------------------------------------------------------------
+
+function ezNewPage(){
+  $pageRequired=1;
+  if (isset($this->ez['columns']) && $this->ez['columns']['on']==1){
+    // check if this is just going to a new column
+    // increment the column number
+//echo 'HERE<br>';
+    $this->ez['columns']['colNum']++;
+//echo $this->ez['columns']['colNum'].'<br>';
+    if ($this->ez['columns']['colNum'] <= $this->ez['columns']['options']['num']){
+      // then just reset to the top of the next column
+      $pageRequired=0;
+    } else {
+      $this->ez['columns']['colNum']=1;
+      $this->ez['topMargin']=$this->ez['columns']['margins'][2];
+    }
+
+    $width = $this->ez['columns']['width'];
+    $this->ez['leftMargin']=$this->ez['columns']['margins'][0]+($this->ez['columns']['colNum']-1)*($this->ez['columns']['options']['gap']+$width);
+    $this->ez['rightMargin']=$this->ez['pageWidth']-$this->ez['leftMargin']-$width;
+  }
+//echo 'left='.$this->ez['leftMargin'].'   right='.$this->ez['rightMargin'].'<br>';
+
+  if ($pageRequired){
+    // make a new page, setting the writing point back to the top
+    $this->y = $this->ez['pageHeight']-$this->ez['topMargin'];
+    // make the new page with a call to the basic class.
+    $this->ezPageCount++;
+    if (isset($this->ez['insertMode']) && $this->ez['insertMode']==1){
+      $id = $this->ezPages[$this->ezPageCount] = $this->newPage(1,$this->ez['insertOptions']['id'],$this->ez['insertOptions']['pos']);
+      // then manipulate the insert options so that inserted pages follow each other
+      $this->ez['insertOptions']['id']=$id;
+      $this->ez['insertOptions']['pos']='after';
+    } else {
+      $this->ezPages[$this->ezPageCount] = $this->newPage();
+    }
+  } else {
+    $this->y = $this->ez['pageHeight']-$this->ez['topMargin'];
+  }
+}
+
+// ------------------------------------------------------------------------------
+
+function ezSetMargins($top,$bottom,$left,$right){
+  // sets the margins to new values
+  $this->ez['topMargin']=$top;
+  $this->ez['bottomMargin']=$bottom;
+  $this->ez['leftMargin']=$left;
+  $this->ez['rightMargin']=$right;
+  // check to see if this means that the current writing position is outside the 
+  // writable area
+  if ($this->y > $this->ez['pageHeight']-$top){
+    // then move y down
+    $this->y = $this->ez['pageHeight']-$top;
+  }
+  if ( $this->y < $bottom){
+    // then make a new page
+    $this->ezNewPage();
+  }
+}  
+
+// ------------------------------------------------------------------------------
+
+function ezGetCurrentPageNumber(){
+  // return the strict numbering (1,2,3,4..) number of the current page
+  return $this->ezPageCount;
+}
+
+// ------------------------------------------------------------------------------
+
+function ezStartPageNumbers($x,$y,$size,$pos='left',$pattern='{PAGENUM} of {TOTALPAGENUM}',$num=''){
+  // put page numbers on the pages from here.
+  // place then on the 'pos' side of the coordinates (x,y).
+  // pos can be 'left' or 'right'
+  // use the given 'pattern' for display, where (PAGENUM} and {TOTALPAGENUM} are replaced
+  // as required.
+  // if $num is set, then make the first page this number, the number of total pages will
+  // be adjusted to account for this.
+  // Adjust this function so that each time you 'start' page numbers then you effectively start a different batch
+  // return the number of the batch, so that they can be stopped in a different order if required.
+  if (!$pos || !strlen($pos)){
+    $pos='left';
+  }
+  if (!$pattern || !strlen($pattern)){
+    $pattern='{PAGENUM} of {TOTALPAGENUM}';
+  }
+  if (!isset($this->ez['pageNumbering'])){
+    $this->ez['pageNumbering']=array();
+  }
+  $i = count($this->ez['pageNumbering']);
+  $this->ez['pageNumbering'][$i][$this->ezPageCount]=array('x'=>$x,'y'=>$y,'pos'=>$pos,'pattern'=>$pattern,'num'=>$num,'size'=>$size);
+  return $i;
+}
+
+// ------------------------------------------------------------------------------
+
+function ezWhatPageNumber($pageNum,$i=0){
+  // given a particular generic page number (ie, document numbered sequentially from beginning),
+  // return the page number under a particular page numbering scheme ($i)
+  $num=0;
+  $start=1;
+  $startNum=1;
+  if (!isset($this->ez['pageNumbering']))
+  {
+    $this->addMessage('WARNING: page numbering called for and wasn\'t started with ezStartPageNumbers');
+    return 0;
+  }
+  foreach($this->ez['pageNumbering'][$i] as $k=>$v){
+    if ($k<=$pageNum){
+      if (is_array($v)){
+        // start block
+        if (strlen($v['num'])){
+          // a start was specified
+          $start=$v['num'];
+          $startNum=$k;
+          $num=$pageNum-$startNum+$start;
+        }
+      } else {
+        // stop block
+        $num=0;
+      }
+    }
+  }
+  return $num;
+}
+
+// ------------------------------------------------------------------------------
+
+function ezStopPageNumbers($stopTotal=0,$next=0,$i=0){
+  // if stopTotal=1 then the totalling of pages for this number will stop too
+  // if $next=1, then do this page, but not the next, else do not do this page either
+  // if $i is set, then stop that particular pagenumbering sequence.
+  if (!isset($this->ez['pageNumbering'])){
+    $this->ez['pageNumbering']=array();
+  }
+  if ($next && isset($this->ez['pageNumbering'][$i][$this->ezPageCount]) && is_array($this->ez['pageNumbering'][$i][$this->ezPageCount])){
+    // then this has only just been started, this will over-write the start, and nothing will appear
+    // add a special command to the start block, telling it to stop as well
+    if ($stopTotal){
+      $this->ez['pageNumbering'][$i][$this->ezPageCount]['stoptn']=1;
+    } else {
+      $this->ez['pageNumbering'][$i][$this->ezPageCount]['stopn']=1;
+    }
+  } else {
+    if ($stopTotal){
+      $this->ez['pageNumbering'][$i][$this->ezPageCount]='stopt';
+    } else {
+      $this->ez['pageNumbering'][$i][$this->ezPageCount]='stop';
+    }
+    if ($next){
+      $this->ez['pageNumbering'][$i][$this->ezPageCount].='n';
+    }
+  }
+}
+
+// ------------------------------------------------------------------------------
+
+function ezPRVTpageNumberSearch($lbl,&$tmp){
+  foreach($tmp as $i=>$v){
+    if (is_array($v)){
+      if (isset($v[$lbl])){
+        return $i;
+      }
+    } else {
+      if ($v==$lbl){
+        return $i;
+      }
+    }
+  }
+  return 0;
+}
+
+// ------------------------------------------------------------------------------
+
+function ezPRVTaddPageNumbers(){
+  // this will go through the pageNumbering array and add the page numbers are required
+  if (isset($this->ez['pageNumbering'])){
+    $totalPages1 = $this->ezPageCount;
+    $tmp1=$this->ez['pageNumbering'];
+    $status=0;
+    foreach($tmp1 as $i=>$tmp){
+      // do each of the page numbering systems
+      // firstly, find the total pages for this one
+      $k = $this->ezPRVTpageNumberSearch('stopt',$tmp);
+      if ($k && $k>0){
+        $totalPages = $k-1;
+      } else {
+        $l = $this->ezPRVTpageNumberSearch('stoptn',$tmp);
+        if ($l && $l>0){
+          $totalPages = $l;
+        } else {
+          $totalPages = $totalPages1;
+        }
+      }
+      foreach ($this->ezPages as $pageNum=>$id){
+        if (isset($tmp[$pageNum])){
+          if (is_array($tmp[$pageNum])){
+            // then this must be starting page numbers
+            $status=1;
+            $info = $tmp[$pageNum];
+            $info['dnum']=$info['num']-$pageNum;
+            // also check for the special case of the numbering stopping and starting on the same page
+            if (isset($info['stopn']) || isset($info['stoptn']) ){
+              $status=2;
+            }
+          } else if ($tmp[$pageNum]=='stop' || $tmp[$pageNum]=='stopt'){
+            // then we are stopping page numbers
+            $status=0;
+          } else if ($status==1 && ($tmp[$pageNum]=='stoptn' || $tmp[$pageNum]=='stopn')){
+            // then we are stopping page numbers
+            $status=2;
+          }
+        }
+        if ($status){
+          // then add the page numbering to this page
+          if (strlen($info['num'])){
+            $num=$pageNum+$info['dnum'];
+          } else {
+            $num=$pageNum;
+          }
+          $total = $totalPages+$num-$pageNum;
+          $pat = str_replace('{PAGENUM}',$num,$info['pattern']);
+          $pat = str_replace('{TOTALPAGENUM}',$total,$pat);
+          $this->reopenObject($id);
+          switch($info['pos']){
+            case 'right':
+              $this->addText($info['x'],$info['y'],$info['size'],$pat);
+              break;
+            default:
+              $w=$this->getTextWidth($info['size'],$pat);
+              $this->addText($info['x']-$w,$info['y'],$info['size'],$pat);
+              break;
+          }
+          $this->closeObject();
+        }
+        if ($status==2){
+          $status=0;
+        }
+      }
+    }
+  }
+}
+
+// ------------------------------------------------------------------------------
+
+function ezPRVTcleanUp(){
+  $this->ezPRVTaddPageNumbers();
+}
+
+// ------------------------------------------------------------------------------
+
+function ezStream($options=''){
+  $this->ezPRVTcleanUp();
+  $this->stream($options);
+}
+
+// ------------------------------------------------------------------------------
+
+function ezOutput($options=0){
+  $this->ezPRVTcleanUp();
+  return $this->output($options);
+}
+
+// ------------------------------------------------------------------------------
+
+function ezSetY($y){
+  // used to change the vertical position of the writing point.
+  $this->y = $y;
+  if ( $this->y < $this->ez['bottomMargin']){
+    // then make a new page
+    $this->ezNewPage();
+  }
+}
+
+// ------------------------------------------------------------------------------
+
+function ezSetDy($dy,$mod=''){
+  // used to change the vertical position of the writing point.
+  // changes up by a positive increment, so enter a negative number to go
+  // down the page
+  // if $mod is set to 'makeSpace' and a new page is forced, then the pointed will be moved 
+  // down on the new page, this will allow space to be reserved for graphics etc.
+  $this->y += $dy;
+  if ( $this->y < $this->ez['bottomMargin']){
+    // then make a new page
+    $this->ezNewPage();
+    if ($mod=='makeSpace'){
+      $this->y += $dy;
+    }
+  }
+}
+
+// ------------------------------------------------------------------------------
+
+function ezPrvtTableDrawLines($pos,$gap,$x0,$x1,$y0,$y1,$y2,$col,$inner,$outer,$opt=1){
+  $x0=1000;
+  $x1=0;
+  $this->setStrokeColor($col[0],$col[1],$col[2]);
+  $cnt=0;
+  $n = count($pos);
+  foreach($pos as $x){
+    $cnt++;
+    if ($cnt==1 || $cnt==$n){
+      $this->setLineStyle($outer);
+    } else {
+      $this->setLineStyle($inner);
+    }
+    $this->line($x-$gap/2,$y0,$x-$gap/2,$y2);
+    if ($x>$x1){ $x1=$x; };
+    if ($x<$x0){ $x0=$x; };
+  }
+  $this->setLineStyle($outer);
+  $this->line($x0-$gap/2-$outer/2,$y0,$x1-$gap/2+$outer/2,$y0);
+  // only do the second line if it is different to the first, AND each row does not have
+  // a line on it.
+  if ($y0!=$y1 && $opt<2){
+    $this->line($x0-$gap/2,$y1,$x1-$gap/2,$y1);
+  }
+  $this->line($x0-$gap/2-$outer/2,$y2,$x1-$gap/2+$outer/2,$y2);
+}
+
+// ------------------------------------------------------------------------------
+
+function ezPrvtTableColumnHeadings($cols,$pos,$maxWidth,$height,$decender,$gap,$size,&$y,$optionsAll=array()){
+  // uses ezText to add the text, and returns the height taken by the largest heading
+  // this page will move the headings to a new page if they will not fit completely on this one
+  // transaction support will be used to implement this
+
+  if (isset($optionsAll['cols'])){
+    $options = $optionsAll['cols'];
+  } else {
+    $options = array();
+  }
+  
+  $mx=0;
+  $startPage = $this->ezPageCount;
+  $secondGo=0;
+
+  // $y is the position at which the top of the table should start, so the base
+  // of the first text, is $y-$height-$gap-$decender, but ezText starts by dropping $height
+  
+  // the return from this function is the total cell height, including gaps, and $y is adjusted
+  // to be the postion of the bottom line
+  
+  // begin the transaction
+  $this->transaction('start');
+  $ok=0;
+//  $y-=$gap-$decender;
+  $y-=$gap;
+  while ($ok==0){
+    foreach($cols as $colName=>$colHeading){
+      $this->ezSetY($y);
+      if (isset($options[$colName]) && isset($options[$colName]['justification'])){
+        $justification = $options[$colName]['justification'];
+      } else {
+        $justification = 'left';
+      }
+      $this->ezText($colHeading,$size,array('aleft'=> $pos[$colName],'aright'=>($maxWidth[$colName]+$pos[$colName]),'justification'=>$justification));
+      $dy = $y-$this->y;
+      if ($dy>$mx){
+        $mx=$dy;
+      }
+    }
+    $y = $y - $mx - $gap + $decender;
+//    $y -= $mx-$gap+$decender;
+    
+    // now, if this has moved to a new page, then abort the transaction, move to a new page, and put it there
+    // do not check on the second time around, to avoid an infinite loop
+    if ($this->ezPageCount != $startPage && $secondGo==0){
+      $this->transaction('rewind');
+      $this->ezNewPage();
+      $y = $this->y - $gap-$decender;
+      $ok=0;
+      $secondGo=1;
+//      $y = $store_y;
+      $mx=0;
+
+    } else {
+      $this->transaction('commit');
+      $ok=1;
+    }
+  }
+
+  return $mx+$gap*2-$decender;
+}
+
+// ------------------------------------------------------------------------------
+
+function ezPrvtGetTextWidth($size,$text){
+  // will calculate the maximum width, taking into account that the text may be broken
+  // by line breaks.
+  $mx=0;
+  $lines = explode("\n",$text);
+  foreach ($lines as $line){
+    $w = $this->getTextWidth($size,$line);
+    if ($w>$mx){
+      $mx=$w;
+    }
+  }
+  return $mx;
+}
+
+// ------------------------------------------------------------------------------
+
+function ezTable(&$data,$cols='',$title='',$options=''){
+  // add a table of information to the pdf document
+  // $data is a two dimensional array
+  // $cols (optional) is an associative array, the keys are the names of the columns from $data
+  // to be presented (and in that order), the values are the titles to be given to the columns
+  // $title (optional) is the title to be put on the top of the table
+  //
+  // $options is an associative array which can contain:
+  // 'showLines'=> 0,1,2, default is 1 (show outside and top lines only), 2=> lines on each row
+  // 'showHeadings' => 0 or 1
+  // 'shaded'=> 0,1,2,3 default is 1 (1->alternate lines are shaded, 0->no shading, 2-> both shaded, second uses shadeCol2)
+  // 'shadeCol' => (r,g,b) array, defining the colour of the shading, default is (0.8,0.8,0.8)
+  // 'shadeCol2' => (r,g,b) array, defining the colour of the shading of the other blocks, default is (0.7,0.7,0.7)
+  // 'fontSize' => 10
+  // 'textCol' => (r,g,b) array, text colour
+  // 'titleFontSize' => 12
+  // 'rowGap' => 2 , the space added at the top and bottom of each row, between the text and the lines
+  // 'colGap' => 5 , the space on the left and right sides of each cell
+  // 'lineCol' => (r,g,b) array, defining the colour of the lines, default, black.
+  // 'xPos' => 'left','right','center','centre',or coordinate, reference coordinate in the x-direction
+  // 'xOrientation' => 'left','right','center','centre', position of the table w.r.t 'xPos' 
+  // 'width'=> <number> which will specify the width of the table, if it turns out to not be this
+  //    wide, then it will stretch the table to fit, if it is wider then each cell will be made
+  //    proportionalty smaller, and the content may have to wrap.
+  // 'maxWidth'=> <number> similar to 'width', but will only make table smaller than it wants to be
+  // 'options' => array(<colname>=>array('justification'=>'left','width'=>100,'link'=>linkDataName),<colname>=>....)
+  //             allow the setting of other paramaters for the individual columns
+  // 'minRowSpace'=> the minimum space between the bottom of each row and the bottom margin, in which a new row will be started
+  //                  if it is less, then a new page would be started, default=-100
+  // 'innerLineThickness'=>1
+  // 'outerLineThickness'=>1
+  // 'splitRows'=>0, 0 or 1, whether or not to allow the rows to be split across page boundaries
+  // 'protectRows'=>number, the number of rows to hold with the heading on page, ie, if there less than this number of
+  //                rows on the page, then move the whole lot onto the next page, default=1
+  //
+  // note that the user will have had to make a font selection already or this will not 
+  // produce a valid pdf file.
+  
+  if (!is_array($data)){
+    return;
+  }
+  
+  if (!is_array($cols)){
+    // take the columns from the first row of the data set
+    reset($data);
+    list($k,$v)=each($data);
+    if (!is_array($v)){
+      return;
+    }
+    $cols=array();
+    foreach($v as $k1=>$v1){
+      $cols[$k1]=$k1;
+    }
+  }
+  
+  if (!is_array($options)){
+    $options=array();
+  }
+
+  $defaults = array(
+    'shaded'=>1,'showLines'=>1,'shadeCol'=>array(0.8,0.8,0.8),'shadeCol2'=>array(0.7,0.7,0.7),'fontSize'=>10,'titleFontSize'=>12
+    ,'titleGap'=>5,'lineCol'=>array(0,0,0),'gap'=>5,'xPos'=>'centre','xOrientation'=>'centre'
+    ,'showHeadings'=>1,'textCol'=>array(0,0,0),'width'=>0,'maxWidth'=>0,'cols'=>array(),'minRowSpace'=>-100,'rowGap'=>2,'colGap'=>5
+    ,'innerLineThickness'=>1,'outerLineThickness'=>1,'splitRows'=>0,'protectRows'=>1
+    );
+
+  foreach($defaults as $key=>$value){
+    if (is_array($value)){
+      if (!isset($options[$key]) || !is_array($options[$key])){
+        $options[$key]=$value;
+      }
+    } else {
+      if (!isset($options[$key])){
+        $options[$key]=$value;
+      }
+    }
+  }
+  $options['gap']=2*$options['colGap'];
+  
+  $middle = ($this->ez['pageWidth']-$this->ez['rightMargin'])/2+($this->ez['leftMargin'])/2;
+  // figure out the maximum widths of the text within each column
+  $maxWidth=array();
+  foreach($cols as $colName=>$colHeading){
+    $maxWidth[$colName]=0;
+  }
+  // find the maximum cell widths based on the data
+  foreach($data as $row){
+    foreach($cols as $colName=>$colHeading){
+      $w = $this->ezPrvtGetTextWidth($options['fontSize'],(string)$row[$colName])*1.01;
+      if ($w > $maxWidth[$colName]){
+        $maxWidth[$colName]=$w;
+      }
+    }
+  }
+  // and the maximum widths to fit in the headings
+  foreach($cols as $colName=>$colTitle){
+    $w = $this->ezPrvtGetTextWidth($options['fontSize'],(string)$colTitle)*1.01;
+    if ($w > $maxWidth[$colName]){
+      $maxWidth[$colName]=$w;
+    }
+  }
+  
+  // calculate the start positions of each of the columns
+  $pos=array();
+  $x=0;
+  $t=$x;
+  $adjustmentWidth=0;
+  $setWidth=0;
+  foreach($maxWidth as $colName => $w){
+    $pos[$colName]=$t;
+    // if the column width has been specified then set that here, also total the
+    // width avaliable for adjustment
+    if (isset($options['cols'][$colName]) && isset($options['cols'][$colName]['width']) && $options['cols'][$colName]['width']>0){
+      $t=$t+$options['cols'][$colName]['width'];
+      $maxWidth[$colName] = $options['cols'][$colName]['width']-$options['gap'];
+      $setWidth += $options['cols'][$colName]['width'];
+    } else {
+      $t=$t+$w+$options['gap'];
+      $adjustmentWidth += $w;
+      $setWidth += $options['gap'];
+    }
+  }
+  $pos['_end_']=$t;
+
+  // if maxWidth is specified, and the table is too wide, and the width has not been set,
+  // then set the width.
+  if ($options['width']==0 && $options['maxWidth'] && ($t-$x)>$options['maxWidth']){
+    // then need to make this one smaller
+    $options['width']=$options['maxWidth'];
+  }
+
+  if ($options['width'] && $adjustmentWidth>0 && $setWidth<$options['width']){
+    // first find the current widths of the columns involved in this mystery
+    $cols0 = array();
+    $cols1 = array();
+    $xq=0;
+    $presentWidth=0;
+    $last='';
+    foreach($pos as $colName=>$p){
+      if (!isset($options['cols'][$last]) || !isset($options['cols'][$last]['width']) || $options['cols'][$last]['width']<=0){
+        if (strlen($last)){
+          $cols0[$last]=$p-$xq -$options['gap'];
+          $presentWidth += ($p-$xq - $options['gap']);
+        }
+      } else {
+        $cols1[$last]=$p-$xq;
+      }
+      $last=$colName;
+      $xq=$p;
+    }
+    // $cols0 contains the widths of all the columns which are not set
+    $neededWidth = $options['width']-$setWidth;
+    // if needed width is negative then add it equally to each column, else get more tricky
+    if ($presentWidth<$neededWidth){
+      foreach($cols0 as $colName=>$w){
+        $cols0[$colName]+= ($neededWidth-$presentWidth)/count($cols0);
+      }
+    } else {
+    
+      $cnt=0;
+      while ($presentWidth>$neededWidth && $cnt<100){
+        $cnt++; // insurance policy
+        // find the widest columns, and the next to widest width
+        $aWidest = array();
+        $nWidest=0;
+        $widest=0;
+        foreach($cols0 as $colName=>$w){
+          if ($w>$widest){
+            $aWidest=array($colName);
+            $nWidest = $widest;
+            $widest=$w;
+          } else if ($w==$widest){
+            $aWidest[]=$colName;
+          }
+        }
+        // then figure out what the width of the widest columns would have to be to take up all the slack
+        $newWidestWidth = $widest - ($presentWidth-$neededWidth)/count($aWidest);
+        if ($newWidestWidth > $nWidest){
+          // then there is space to set them to this
+          foreach($aWidest as $colName){
+            $cols0[$colName] = $newWidestWidth;
+          }
+          $presentWidth=$neededWidth;
+        } else {
+          // there is not space, reduce the size of the widest ones down to the next size down, and we
+          // will go round again
+          foreach($aWidest as $colName){
+            $cols0[$colName] = $nWidest;
+          }
+          $presentWidth=$presentWidth-($widest-$nWidest)*count($aWidest);
+        }
+      }
+    }
+    // $cols0 now contains the new widths of the constrained columns.
+    // now need to update the $pos and $maxWidth arrays
+    $xq=0;
+    foreach($pos as $colName=>$p){
+      $pos[$colName]=$xq;
+      if (!isset($options['cols'][$colName]) || !isset($options['cols'][$colName]['width']) || $options['cols'][$colName]['width']<=0){
+        if (isset($cols0[$colName])){
+          $xq += $cols0[$colName] + $options['gap'];
+          $maxWidth[$colName]=$cols0[$colName];
+        }
+      } else {
+        if (isset($cols1[$colName])){
+          $xq += $cols1[$colName];
+        }
+      }
+    }
+
+    $t=$x+$options['width'];
+    $pos['_end_']=$t;
+  }
+
+  // now adjust the table to the correct location across the page
+  switch ($options['xPos']){
+    case 'left':
+      $xref = $this->ez['leftMargin'];
+      break;
+    case 'right':
+      $xref = $this->ez['pageWidth'] - $this->ez['rightMargin'];
+      break;
+    case 'centre':
+    case 'center':
+      $xref = $middle;
+      break;
+    default:
+      $xref = $options['xPos'];
+      break;
+  }
+  switch ($options['xOrientation']){
+    case 'left':
+      $dx = $xref-$t;
+      break;
+    case 'right':
+      $dx = $xref;
+      break;
+    case 'centre':
+    case 'center':
+      $dx = $xref-$t/2;
+      break;
+  }
+
+
+  foreach($pos as $k=>$v){
+    $pos[$k]=$v+$dx;
+  }
+  $x0=$x+$dx;
+  $x1=$t+$dx;
+
+  $baseLeftMargin = $this->ez['leftMargin'];
+  $basePos = $pos;
+  $baseX0 = $x0;
+  $baseX1 = $x1;
+  
+  // ok, just about ready to make me a table
+  $this->setColor($options['textCol'][0],$options['textCol'][1],$options['textCol'][2]);
+  $this->setStrokeColor($options['shadeCol'][0],$options['shadeCol'][1],$options['shadeCol'][2]);
+
+  $middle = ($x1+$x0)/2;
+
+  // start a transaction which will be used to regress the table, if there are not enough rows protected
+  if ($options['protectRows']>0){
+    $this->transaction('start');
+    $movedOnce=0;
+  }
+  $abortTable = 1;
+  while ($abortTable){
+  $abortTable=0;
+
+  $dm = $this->ez['leftMargin']-$baseLeftMargin;
+  foreach($basePos as $k=>$v){
+    $pos[$k]=$v+$dm;
+  }
+  $x0=$baseX0+$dm;
+  $x1=$baseX1+$dm;
+  $middle = ($x1+$x0)/2;
+
+
+  // if the title is set, then do that
+  if (strlen($title)){
+    $w = $this->getTextWidth($options['titleFontSize'],$title);
+    $this->y -= $this->getFontHeight($options['titleFontSize']);
+    if ($this->y < $this->ez['bottomMargin']){
+      $this->ezNewPage();
+        // margins may have changed on the newpage
+        $dm = $this->ez['leftMargin']-$baseLeftMargin;
+        foreach($basePos as $k=>$v){
+          $pos[$k]=$v+$dm;
+        }
+        $x0=$baseX0+$dm;
+        $x1=$baseX1+$dm;
+        $middle = ($x1+$x0)/2;
+      $this->y -= $this->getFontHeight($options['titleFontSize']);
+    }
+    $this->addText($middle-$w/2,$this->y,$options['titleFontSize'],$title);
+    $this->y -= $options['titleGap'];
+  }
+
+        // margins may have changed on the newpage
+        $dm = $this->ez['leftMargin']-$baseLeftMargin;
+        foreach($basePos as $k=>$v){
+          $pos[$k]=$v+$dm;
+        }
+        $x0=$baseX0+$dm;
+        $x1=$baseX1+$dm;
+  
+  $y=$this->y; // to simplify the code a bit
+  
+  // make the table
+  $height = $this->getFontHeight($options['fontSize']);
+  $decender = $this->getFontDecender($options['fontSize']);
+
+  
+  
+  $y0=$y+$decender;
+  $dy=0;
+  if ($options['showHeadings']){
+    // this function will move the start of the table to a new page if it does not fit on this one
+    $headingHeight = $this->ezPrvtTableColumnHeadings($cols,$pos,$maxWidth,$height,$decender,$options['rowGap'],$options['fontSize'],$y,$options);
+    $y0 = $y+$headingHeight;
+    $y1 = $y;
+
+
+    $dm = $this->ez['leftMargin']-$baseLeftMargin;
+    foreach($basePos as $k=>$v){
+      $pos[$k]=$v+$dm;
+    }
+    $x0=$baseX0+$dm;
+    $x1=$baseX1+$dm;
+
+  } else {
+    $y1 = $y0;
+  }
+  $firstLine=1;
+
+  
+  // open an object here so that the text can be put in over the shading
+  if ($options['shaded']){
+    $this->saveState();
+    $textObjectId = $this->openObject();
+    $this->closeObject();
+    $this->addObject($textObjectId);
+    $this->reopenObject($textObjectId);
+  }
+  
+  $cnt=0;
+  $newPage=0;
+  foreach($data as $row){
+    $cnt++;
+    // the transaction support will be used to prevent rows being split
+    if ($options['splitRows']==0){
+      $pageStart = $this->ezPageCount;
+      if (isset($this->ez['columns']) && $this->ez['columns']['on']==1){
+        $columnStart = $this->ez['columns']['colNum'];
+      }
+      $this->transaction('start');
+      $row_orig = $row;
+      $y_orig = $y;
+      $y0_orig = $y0;
+      $y1_orig = $y1;
+    }
+    $ok=0;
+    $secondTurn=0;
+    while(!$abortTable && $ok == 0){
+
+    $mx=0;
+    $newRow=1;
+    while(!$abortTable && ($newPage || $newRow)){
+      
+      $y-=$height;
+      if ($newPage || $y<$this->ez['bottomMargin'] || (isset($options['minRowSpace']) && $y<($this->ez['bottomMargin']+$options['minRowSpace'])) ){
+        // check that enough rows are with the heading
+        if ($options['protectRows']>0 && $movedOnce==0 && $cnt<=$options['protectRows']){
+          // then we need to move the whole table onto the next page
+          $movedOnce = 1;
+          $abortTable = 1;
+        }
+      
+        $y2=$y-$mx+2*$height+$decender-$newRow*$height;
+        if ($options['showLines']){
+          if (!$options['showHeadings']){
+            $y0=$y1;
+          }
+          $this->ezPrvtTableDrawLines($pos,$options['gap'],$x0,$x1,$y0,$y1,$y2,$options['lineCol'],$options['innerLineThickness'],$options['outerLineThickness'],$options['showLines']);
+        }
+        if ($options['shaded']){
+          $this->closeObject();
+          $this->restoreState();
+        }
+        $this->ezNewPage();
+        // and the margins may have changed, this is due to the possibility of the columns being turned on
+        // as the columns are managed by manipulating the margins
+
+        $dm = $this->ez['leftMargin']-$baseLeftMargin;
+        foreach($basePos as $k=>$v){
+          $pos[$k]=$v+$dm;
+        }
+//        $x0=$x0+$dm;
+//        $x1=$x1+$dm;
+        $x0=$baseX0+$dm;
+        $x1=$baseX1+$dm;
+  
+        if ($options['shaded']){
+          $this->saveState();
+          $textObjectId = $this->openObject();
+          $this->closeObject();
+          $this->addObject($textObjectId);
+          $this->reopenObject($textObjectId);
+        }
+        $this->setColor($options['textCol'][0],$options['textCol'][1],$options['textCol'][2],1);
+        $y = $this->ez['pageHeight']-$this->ez['topMargin'];
+        $y0=$y+$decender;
+        $mx=0;
+        if ($options['showHeadings']){
+          $this->ezPrvtTableColumnHeadings($cols,$pos,$maxWidth,$height,$decender,$options['rowGap'],$options['fontSize'],$y,$options);
+          $y1=$y;
+        } else {
+          $y1=$y0;
+        }
+        $firstLine=1;
+        $y -= $height;
+      }
+      $newRow=0;
+      // write the actual data
+      // if these cells need to be split over a page, then $newPage will be set, and the remaining
+      // text will be placed in $leftOvers
+      $newPage=0;
+      $leftOvers=array();
+
+      foreach($cols as $colName=>$colTitle){
+        $this->ezSetY($y+$height);
+        $colNewPage=0;
+        if (isset($row[$colName])){
+          if (isset($options['cols'][$colName]) && isset($options['cols'][$colName]['link']) && strlen($options['cols'][$colName]['link'])){
+            
+            $lines = explode("\n",$row[$colName]);
+            if (isset($row[$options['cols'][$colName]['link']]) && strlen($row[$options['cols'][$colName]['link']])){
+              foreach($lines as $k=>$v){
+                $lines[$k]='<c:alink:'.$row[$options['cols'][$colName]['link']].'>'.$v.'</c:alink>';
+              }
+            }
+          } else {
+            $lines = explode("\n",$row[$colName]);
+          }
+        } else {
+          $lines = array();
+        }
+        $this->y -= $options['rowGap'];
+        foreach ($lines as $line){
+          $line = $this->ezProcessText($line);
+          $start=1;
+
+          while (strlen($line) || $start){
+            $start=0;
+            if (!$colNewPage){
+              $this->y=$this->y-$height;
+            }
+            if ($this->y < $this->ez['bottomMargin']){
+  //            $this->ezNewPage();
+              $newPage=1;  // whether a new page is required for any of the columns
+              $colNewPage=1; // whether a new page is required for this column
+            }
+            if ($colNewPage){
+              if (isset($leftOvers[$colName])){
+                $leftOvers[$colName].="\n".$line;
+              } else {
+                $leftOvers[$colName] = $line;
+              }
+              $line='';
+            } else {
+              if (isset($options['cols'][$colName]) && isset($options['cols'][$colName]['justification']) ){
+                $just = $options['cols'][$colName]['justification'];
+              } else {
+                $just='left';
+              }
+
+              $line=$this->addTextWrap($pos[$colName],$this->y,$maxWidth[$colName],$options['fontSize'],$line,$just);
+            }
+          }
+        }
+  
+        $dy=$y+$height-$this->y+$options['rowGap'];
+        if ($dy-$height*$newPage>$mx){
+          $mx=$dy-$height*$newPage;
+        }
+      }
+      // set $row to $leftOvers so that they will be processed onto the new page
+      $row = $leftOvers;
+      // now add the shading underneath
+      if ($options['shaded'] && $cnt%2==0){
+        $this->closeObject();
+        $this->setColor($options['shadeCol'][0],$options['shadeCol'][1],$options['shadeCol'][2],1);
+        $this->filledRectangle($x0-$options['gap']/2,$y+$decender+$height-$mx,$x1-$x0,$mx);
+        $this->reopenObject($textObjectId);
+      }
+
+      if ($options['shaded']==2 && $cnt%2==1){
+        $this->closeObject();
+        $this->setColor($options['shadeCol2'][0],$options['shadeCol2'][1],$options['shadeCol2'][2],1);
+        $this->filledRectangle($x0-$options['gap']/2,$y+$decender+$height-$mx,$x1-$x0,$mx);
+        $this->reopenObject($textObjectId);
+      }
+
+      if ($options['showLines']>1){
+        // then draw a line on the top of each block
+//        $this->closeObject();
+        $this->saveState();
+        $this->setStrokeColor($options['lineCol'][0],$options['lineCol'][1],$options['lineCol'][2],1);
+//        $this->line($x0-$options['gap']/2,$y+$decender+$height-$mx,$x1-$x0,$mx);
+        if ($firstLine){
+          $this->setLineStyle($options['outerLineThickness']);
+          $firstLine=0;
+        } else {
+          $this->setLineStyle($options['innerLineThickness']);
+        }
+        $this->line($x0-$options['gap']/2,$y+$decender+$height,$x1-$options['gap']/2,$y+$decender+$height);
+        $this->restoreState();
+//        $this->reopenObject($textObjectId);
+      }
+    } // end of while 
+    $y=$y-$mx+$height;
+    
+    // checking row split over pages
+    if ($options['splitRows']==0){
+      if ( ( ($this->ezPageCount != $pageStart) || (isset($this->ez['columns']) && $this->ez['columns']['on']==1 && $columnStart != $this->ez['columns']['colNum'] ))  && $secondTurn==0){
+        // then we need to go back and try that again !
+        $newPage=1;
+        $secondTurn=1;
+        $this->transaction('rewind');
+        $row = $row_orig;
+        $y = $y_orig;
+        $y0 = $y0_orig;
+        $y1 = $y1_orig;
+        $ok=0;
+
+        $dm = $this->ez['leftMargin']-$baseLeftMargin;
+        foreach($basePos as $k=>$v){
+          $pos[$k]=$v+$dm;
+        }
+        $x0=$baseX0+$dm;
+        $x1=$baseX1+$dm;
+
+      } else {
+        $this->transaction('commit');
+        $ok=1;
+      }
+    } else {
+      $ok=1;  // don't go round the loop if splitting rows is allowed
+    }
+    
+    }  // end of while to check for row splitting
+    if ($abortTable){
+      if ($ok==0){
+        $this->transaction('abort');
+      }
+      // only the outer transaction should be operational
+      $this->transaction('rewind');
+      $this->ezNewPage();
+      break;
+    }
+    
+  } // end of foreach ($data as $row)
+  
+  } // end of while ($abortTable)
+
+  // table has been put on the page, the rows guarded as required, commit.
+  $this->transaction('commit');
+
+  $y2=$y+$decender;
+  if ($options['showLines']){
+    if (!$options['showHeadings']){
+      $y0=$y1;
+    }
+    $this->ezPrvtTableDrawLines($pos,$options['gap'],$x0,$x1,$y0,$y1,$y2,$options['lineCol'],$options['innerLineThickness'],$options['outerLineThickness'],$options['showLines']);
+  }
+
+  // close the object for drawing the text on top
+  if ($options['shaded']){
+    $this->closeObject();
+    $this->restoreState();
+  }
+  
+  $this->y=$y;
+  return $y;
+}
+
+// ------------------------------------------------------------------------------
+function ezProcessText($text){
+  // this function will intially be used to implement underlining support, but could be used for a range of other
+  // purposes
+  $search = array('<u>','<U>','</u>','</U>');
+  $replace = array('<c:uline>','<c:uline>','</c:uline>','</c:uline>');
+  return str_replace($search,$replace,$text);
+}
+
+// ------------------------------------------------------------------------------
+
+function ezText($text,$size=0,$options=array(),$test=0){
+  // this will add a string of text to the document, starting at the current drawing
+  // position.
+  // it will wrap to keep within the margins, including optional offsets from the left
+  // and the right, if $size is not specified, then it will be the last one used, or
+  // the default value (12 I think).
+  // the text will go to the start of the next line when a return code "\n" is found.
+  // possible options are:
+  // 'left'=> number, gap to leave from the left margin
+  // 'right'=> number, gap to leave from the right margin
+  // 'aleft'=> number, absolute left position (overrides 'left')
+  // 'aright'=> number, absolute right position (overrides 'right')
+  // 'justification' => 'left','right','center','centre','full'
+
+  // only set one of the next two items (leading overrides spacing)
+  // 'leading' => number, defines the total height taken by the line, independent of the font height.
+  // 'spacing' => a real number, though usually set to one of 1, 1.5, 2 (line spacing as used in word processing)
+  
+  // if $test is set then this should just check if the text is going to flow onto a new page or not, returning true or false
+  
+  // apply the filtering which will make the underlining function.
+  $text = $this->ezProcessText($text);
+  
+  $newPage=false;
+  $store_y = $this->y;
+  
+  if (is_array($options) && isset($options['aleft'])){
+    $left=$options['aleft'];
+  } else {
+    $left = $this->ez['leftMargin'] + ((is_array($options) && isset($options['left']))?$options['left']:0);
+  }
+  if (is_array($options) && isset($options['aright'])){
+    $right=$options['aright'];
+  } else {
+    $right = $this->ez['pageWidth'] - $this->ez['rightMargin'] - ((is_array($options) && isset($options['right']))?$options['right']:0);
+  }
+  if ($size<=0){
+    $size = $this->ez['fontSize'];
+  } else {
+    $this->ez['fontSize']=$size;
+  }
+  
+  if (is_array($options) && isset($options['justification'])){
+    $just = $options['justification'];
+  } else {
+    $just = 'left';
+  }
+  
+  // modifications to give leading and spacing based on those given by Craig Heydenburg 1/1/02
+  if (is_array($options) && isset($options['leading'])) { ## use leading instead of spacing
+    $height = $options['leading'];
+	} else if (is_array($options) && isset($options['spacing'])) {
+    $height = $this->getFontHeight($size) * $options['spacing'];
+	} else {
+		$height = $this->getFontHeight($size);
+	}
+
+  
+  $lines = explode("\n",$text);
+  foreach ($lines as $line){
+    $start=1;
+    while (strlen($line) || $start){
+      $start=0;
+      $this->y=$this->y-$height;
+      if ($this->y < $this->ez['bottomMargin']){
+        if ($test){
+          $newPage=true;
+        } else {
+          $this->ezNewPage();
+          // and then re-calc the left and right, in case they have changed due to columns
+        }
+      }
+      if (is_array($options) && isset($options['aleft'])){
+        $left=$options['aleft'];
+      } else {
+        $left = $this->ez['leftMargin'] + ((is_array($options) && isset($options['left']))?$options['left']:0);
+      }
+      if (is_array($options) && isset($options['aright'])){
+        $right=$options['aright'];
+      } else {
+        $right = $this->ez['pageWidth'] - $this->ez['rightMargin'] - ((is_array($options) && isset($options['right']))?$options['right']:0);
+      }
+      $line=$this->addTextWrap($left,$this->y,$right-$left,$size,$line,$just,0,$test);
+    }
+  }
+
+  if ($test){
+    $this->y=$store_y;
+    return $newPage;
+  } else {
+    return $this->y;
+  }
+}
+
+// ------------------------------------------------------------------------------
+
+function ezImage($image,$pad = 5,$width = 0,$resize = 'full',$just = 'center',$border = ''){
+	//beta ezimage function
+	if (stristr($image,'://'))//copy to temp file
+	{
+		$fp = @fopen($image,"rb");
+		while(!feof($fp))
+   		{
+      			$cont.= fread($fp,1024);
+   		}
+   		fclose($fp);
+		$image = tempnam ("/tmp", "php-pdf");
+		$fp2 = @fopen($image,"w");
+   		fwrite($fp2,$cont);
+  		fclose($fp2);
+		$temp = true;
+	}
+
+	if (!(file_exists($image))) return false; //return immediately if image file does not exist
+	$imageInfo = getimagesize($image);
+	switch ($imageInfo[2]){
+		case 2:
+			$type = "jpeg";
+			break;
+		case 3:
+			$type = "png";
+			break;
+		default:
+			return false; //return if file is not jpg or png
+	}
+	if ($width == 0) $width = $imageInfo[0]; //set width
+	$ratio = $imageInfo[0]/$imageInfo[1];
+
+	//get maximum width of image
+	if (isset($this->ez['columns']) && $this->ez['columns']['on'] == 1)
+	{
+		$bigwidth = $this->ez['columns']['width'] - ($pad * 2);
+	}
+	else
+	{
+		$bigwidth = $this->ez['pageWidth'] - ($pad * 2);
+	}
+	//fix width if larger than maximum or if $resize=full
+	if ($resize == 'full' || $resize == 'width' || $width > $bigwidth)
+	{
+		$width = $bigwidth;
+
+	}
+
+	$height = ($width/$ratio); //set height
+
+	//fix size if runs off page
+	if ($height > ($this->y - $this->ez['bottomMargin'] - ($pad * 2)))
+	{
+		if ($resize != 'full')
+		{
+			$this->ezNewPage();
+		}
+		else
+		{
+			$height = ($this->y - $this->ez['bottomMargin'] - ($pad * 2)); //shrink height
+			$width = ($height*$ratio); //fix width
+		}
+	}
+
+	//fix x-offset if image smaller than bigwidth
+	if ($width < $bigwidth)
+	{
+		//center if justification=center
+		if ($just == 'center')
+		{
+			$offset = ($bigwidth - $width) / 2;
+		}
+		//move to right if justification=right
+		if ($just == 'right')
+		{
+			$offset = ($bigwidth - $width);
+		}
+		//leave at left if justification=left
+		if ($just == 'left')
+		{
+			$offset = 0;
+		}
+	}
+
+
+	//call appropriate function
+	if ($type == "jpeg"){
+		$this->addJpegFromFile($image,$this->ez['leftMargin'] + $pad + $offset, $this->y + $this->getFontHeight($this->ez['fontSize']) - $pad - $height,$width);
+	}
+
+	if ($type == "png"){
+		$this->addPngFromFile($image,$this->ez['leftMargin'] + $pad + $offset, $this->y + $this->getFontHeight($this->ez['fontSize']) - $pad - $height,$width);
+	}
+	//draw border
+	if ($border != '')
+	{
+	if (!(isset($border['color'])))
+	{
+		$border['color']['red'] = .5;
+		$border['color']['blue'] = .5;
+		$border['color']['green'] = .5;
+	}
+	if (!(isset($border['width']))) $border['width'] = 1;
+	if (!(isset($border['cap']))) $border['cap'] = 'round';
+	if (!(isset($border['join']))) $border['join'] = 'round';
+	
+
+	$this->setStrokeColor($border['color']['red'],$border['color']['green'],$border['color']['blue']);
+	$this->setLineStyle($border['width'],$border['cap'],$border['join']);
+	$this->rectangle($this->ez['leftMargin'] + $pad + $offset, $this->y + $this->getFontHeight($this->ez['fontSize']) - $pad - $height,$width,$height);
+
+	}
+	// move y below image
+	$this->y = $this->y - $pad - $height;
+	//remove tempfile for remote images
+	if ($temp == true) unlink($image);
+
+}
+// ------------------------------------------------------------------------------
+
+// note that templating code is still considered developmental - have not really figured
+// out a good way of doing this yet.
+function loadTemplate($templateFile){
+  // this function will load the requested template ($file includes full or relative pathname)
+  // the code for the template will be modified to make it name safe, and then stored in 
+  // an array for later use
+  // The id of the template will be returned for the user to operate on it later
+  if (!file_exists($templateFile)){
+    return -1;
+  }
+
+  $code = implode('',file($templateFile));
+  if (!strlen($code)){
+    return;
+  }
+
+  $code = trim($code);
+  if (substr($code,0,5)=='<?php'){
+    $code = substr($code,5);
+  }
+  if (substr($code,-2)=='?>'){
+    $code = substr($code,0,strlen($code)-2);
+  }
+  if (isset($this->ez['numTemplates'])){
+    $newNum = $this->ez['numTemplates'];
+    $this->ez['numTemplates']++;
+  } else {
+    $newNum=0;
+    $this->ez['numTemplates']=1;
+    $this->ez['templates']=array();
+  }
+
+  $this->ez['templates'][$newNum]['code']=$code;
+
+  return $newNum;
+}
+
+// ------------------------------------------------------------------------------
+
+function execTemplate($id,$data=array(),$options=array()){
+  // execute the given template on the current document.
+  if (!isset($this->ez['templates'][$id])){
+    return;
+  }
+  eval($this->ez['templates'][$id]['code']);
+}
+
+// ------------------------------------------------------------------------------
+function ilink($info){
+  $this->alink($info,1);
+}
+
+function alink($info,$internal=0){
+  // a callback function to support the formation of clickable links within the document
+  $lineFactor=0.05; // the thickness of the line as a proportion of the height. also the drop of the line.
+  switch($info['status']){
+    case 'start':
+    case 'sol':
+      // the beginning of the link
+      // this should contain the URl for the link as the 'p' entry, and will also contain the value of 'nCallback'
+      if (!isset($this->ez['links'])){
+        $this->ez['links']=array();
+      }
+      $i = $info['nCallback'];
+      $this->ez['links'][$i] = array('x'=>$info['x'],'y'=>$info['y'],'angle'=>$info['angle'],'decender'=>$info['decender'],'height'=>$info['height'],'url'=>$info['p']);
+      if ($internal==0){
+        $this->saveState();
+        $this->setColor(0,0,1);
+        $this->setStrokeColor(0,0,1);
+        $thick = $info['height']*$lineFactor;
+        $this->setLineStyle($thick);
+      }
+      break;
+    case 'end':
+    case 'eol':
+      // the end of the link
+      // assume that it is the most recent opening which has closed
+      $i = $info['nCallback'];
+      $start = $this->ez['links'][$i];
+      // add underlining
+      if ($internal){
+        $this->addInternalLink($start['url'],$start['x'],$start['y']+$start['decender'],$info['x'],$start['y']+$start['decender']+$start['height']);
+      } else {
+        $a = deg2rad((float)$start['angle']-90.0);
+        $drop = $start['height']*$lineFactor*1.5;
+        $dropx = cos($a)*$drop;
+        $dropy = -sin($a)*$drop;
+        $this->line($start['x']-$dropx,$start['y']-$dropy,$info['x']-$dropx,$info['y']-$dropy);
+        $this->addLink($start['url'],$start['x'],$start['y']+$start['decender'],$info['x'],$start['y']+$start['decender']+$start['height']);
+        $this->restoreState();
+      }
+      break;
+  }
+}
+
+// ------------------------------------------------------------------------------
+
+function uline($info){
+  // a callback function to support underlining
+  $lineFactor=0.05; // the thickness of the line as a proportion of the height. also the drop of the line.
+  switch($info['status']){
+    case 'start':
+    case 'sol':
+    
+      // the beginning of the underline zone
+      if (!isset($this->ez['links'])){
+        $this->ez['links']=array();
+      }
+      $i = $info['nCallback'];
+      $this->ez['links'][$i] = array('x'=>$info['x'],'y'=>$info['y'],'angle'=>$info['angle'],'decender'=>$info['decender'],'height'=>$info['height']);
+      $this->saveState();
+      $thick = $info['height']*$lineFactor;
+      $this->setLineStyle($thick);
+      break;
+    case 'end':
+    case 'eol':
+      // the end of the link
+      // assume that it is the most recent opening which has closed
+      $i = $info['nCallback'];
+      $start = $this->ez['links'][$i];
+      // add underlining
+      $a = deg2rad((float)$start['angle']-90.0);
+      $drop = $start['height']*$lineFactor*1.5;
+      $dropx = cos($a)*$drop;
+      $dropy = -sin($a)*$drop;
+      $this->line($start['x']-$dropx,$start['y']-$dropy,$info['x']-$dropx,$info['y']-$dropy);
+      $this->restoreState();
+      break;
+  }
+}
+
+// ------------------------------------------------------------------------------
+
+}
+?>
diff --git a/public_html/judge/class.pdf.php b/public_html/judge/class.pdf.php
new file mode 100755
index 0000000..f9f819b
--- /dev/null
+++ b/public_html/judge/class.pdf.php
@@ -0,0 +1,3075 @@
+<?php
+/**
+* Cpdf
+*
+* http://www.ros.co.nz/pdf
+*
+* A PHP class to provide the basic functionality to create a pdf document without
+* any requirement for additional modules.
+*
+* Note that they companion class CezPdf can be used to extend this class and dramatically
+* simplify the creation of documents.
+*
+* IMPORTANT NOTE
+* there is no warranty, implied or otherwise with this software.
+* 
+* LICENCE
+* This code has been placed in the Public Domain for all to enjoy.
+*
+* @author		Wayne Munro <pdf@ros.co.nz>
+* @version 	009
+* @package	Cpdf
+*/
+class Cpdf {
+
+/**
+* the current number of pdf objects in the document
+*/
+var $numObj=0;
+/**
+* this array contains all of the pdf objects, ready for final assembly
+*/
+var $objects = array();
+/**
+* the objectId (number within the objects array) of the document catalog
+*/
+var $catalogId;
+/**
+* array carrying information about the fonts that the system currently knows about
+* used to ensure that a font is not loaded twice, among other things
+*/
+var $fonts=array(); 
+/**
+* a record of the current font
+*/
+var $currentFont='';
+/**
+* the current base font
+*/
+var $currentBaseFont='';
+/**
+* the number of the current font within the font array
+*/
+var $currentFontNum=0;
+/**
+* 
+*/
+var $currentNode;
+/**
+* object number of the current page
+*/
+var $currentPage;
+/**
+* object number of the currently active contents block
+*/
+var $currentContents;
+/**
+* number of fonts within the system
+*/
+var $numFonts=0;
+/**
+* current colour for fill operations, defaults to inactive value, all three components should be between 0 and 1 inclusive when active
+*/
+var $currentColour=array('r'=>-1,'g'=>-1,'b'=>-1);
+/**
+* current colour for stroke operations (lines etc.)
+*/
+var $currentStrokeColour=array('r'=>-1,'g'=>-1,'b'=>-1);
+/**
+* current style that lines are drawn in
+*/
+var $currentLineStyle='';
+/**
+* an array which is used to save the state of the document, mainly the colours and styles
+* it is used to temporarily change to another state, the change back to what it was before
+*/
+var $stateStack = array();
+/**
+* number of elements within the state stack
+*/
+var $nStateStack = 0;
+/**
+* number of page objects within the document
+*/
+var $numPages=0;
+/**
+* object Id storage stack
+*/
+var $stack=array();
+/**
+* number of elements within the object Id storage stack
+*/
+var $nStack=0;
+/**
+* an array which contains information about the objects which are not firmly attached to pages
+* these have been added with the addObject function
+*/
+var $looseObjects=array();
+/**
+* array contains infomation about how the loose objects are to be added to the document
+*/
+var $addLooseObjects=array();
+/**
+* the objectId of the information object for the document
+* this contains authorship, title etc.
+*/
+var $infoObject=0;
+/**
+* number of images being tracked within the document
+*/
+var $numImages=0;
+/**
+* an array containing options about the document
+* it defaults to turning on the compression of the objects
+*/
+var $options=array('compression'=>1);
+/**
+* the objectId of the first page of the document
+*/
+var $firstPageId;
+/**
+* used to track the last used value of the inter-word spacing, this is so that it is known
+* when the spacing is changed.
+*/
+var $wordSpaceAdjust=0;
+/**
+* the object Id of the procset object
+*/
+var $procsetObjectId;
+/**
+* store the information about the relationship between font families
+* this used so that the code knows which font is the bold version of another font, etc.
+* the value of this array is initialised in the constuctor function.
+*/
+var $fontFamilies = array();
+/**
+* track if the current font is bolded or italicised
+*/
+var $currentTextState = ''; 
+/**
+* messages are stored here during processing, these can be selected afterwards to give some useful debug information
+*/
+var $messages='';
+/**
+* the ancryption array for the document encryption is stored here
+*/
+var $arc4='';
+/**
+* the object Id of the encryption information
+*/
+var $arc4_objnum=0;
+/**
+* the file identifier, used to uniquely identify a pdf document
+*/
+var $fileIdentifier='';
+/**
+* a flag to say if a document is to be encrypted or not
+*/
+var $encrypted=0;
+/**
+* the ancryption key for the encryption of all the document content (structure is not encrypted)
+*/
+var $encryptionKey='';
+/**
+* array which forms a stack to keep track of nested callback functions
+*/
+var $callback = array();
+/**
+* the number of callback functions in the callback array
+*/
+var $nCallback = 0;
+/**
+* store label->id pairs for named destinations, these will be used to replace internal links
+* done this way so that destinations can be defined after the location that links to them
+*/
+var $destinations = array();
+/**
+* store the stack for the transaction commands, each item in here is a record of the values of all the 
+* variables within the class, so that the user can rollback at will (from each 'start' command)
+* note that this includes the objects array, so these can be large.
+*/
+var $checkpoint = '';
+/**
+* class constructor
+* this will start a new document
+* @var array array of 4 numbers, defining the bottom left and upper right corner of the page. first two are normally zero.
+*/
+function Cpdf ($pageSize=array(0,0,612,792)){
+  $this->newDocument($pageSize);
+  
+  // also initialize the font families that are known about already
+  $this->setFontFamily('init');
+//  $this->fileIdentifier = md5('xxxxxxxx'.time());
+
+}
+
+/**
+* Document object methods (internal use only)
+*
+* There is about one object method for each type of object in the pdf document
+* Each function has the same call list ($id,$action,$options).
+* $id = the object ID of the object, or what it is to be if it is being created
+* $action = a string specifying the action to be performed, though ALL must support:
+*           'new' - create the object with the id $id
+*           'out' - produce the output for the pdf object
+* $options = optional, a string or array containing the various parameters for the object
+*
+* These, in conjunction with the output function are the ONLY way for output to be produced 
+* within the pdf 'file'.
+*/
+
+/**
+*destination object, used to specify the location for the user to jump to, presently on opening
+*/
+function o_destination($id,$action,$options=''){
+  if ($action!='new'){
+    $o =& $this->objects[$id];
+  }
+  switch($action){
+    case 'new':
+      $this->objects[$id]=array('t'=>'destination','info'=>array());
+      $tmp = '';
+      switch ($options['type']){
+        case 'XYZ':
+        case 'FitR':
+          $tmp =  ' '.$options['p3'].$tmp;
+        case 'FitH':
+        case 'FitV':
+        case 'FitBH':
+        case 'FitBV':
+          $tmp =  ' '.$options['p1'].' '.$options['p2'].$tmp;
+        case 'Fit':
+        case 'FitB':
+          $tmp =  $options['type'].$tmp;
+          $this->objects[$id]['info']['string']=$tmp;
+          $this->objects[$id]['info']['page']=$options['page'];
+      }
+      break;
+    case 'out':
+      $tmp = $o['info'];
+      $res="\n".$id." 0 obj\n".'['.$tmp['page'].' 0 R /'.$tmp['string']."]\nendobj\n";
+      return $res;
+      break;
+  }
+}
+
+/**
+* set the viewer preferences
+*/
+function o_viewerPreferences($id,$action,$options=''){
+  if ($action!='new'){
+    $o =& $this->objects[$id];
+  }
+  switch ($action){
+    case 'new':
+      $this->objects[$id]=array('t'=>'viewerPreferences','info'=>array());
+      break;
+    case 'add':
+      foreach($options as $k=>$v){
+        switch ($k){
+          case 'HideToolbar':
+          case 'HideMenubar':
+          case 'HideWindowUI':
+          case 'FitWindow':
+          case 'CenterWindow':
+          case 'NonFullScreenPageMode':
+          case 'Direction':
+            $o['info'][$k]=$v;
+          break;
+        }
+      }
+      break;
+    case 'out':
+
+      $res="\n".$id." 0 obj\n".'<< ';
+      foreach($o['info'] as $k=>$v){
+        $res.="\n/".$k.' '.$v;
+      }
+      $res.="\n>>\n";
+      return $res;
+      break;
+  }
+}
+
+/**
+* define the document catalog, the overall controller for the document
+*/
+function o_catalog($id,$action,$options=''){
+  if ($action!='new'){
+    $o =& $this->objects[$id];
+  }
+  switch ($action){
+    case 'new':
+      $this->objects[$id]=array('t'=>'catalog','info'=>array());
+      $this->catalogId=$id;
+      break;
+    case 'outlines':
+    case 'pages':
+    case 'openHere':
+      $o['info'][$action]=$options;
+      break;
+    case 'viewerPreferences':
+      if (!isset($o['info']['viewerPreferences'])){
+        $this->numObj++;
+        $this->o_viewerPreferences($this->numObj,'new');
+        $o['info']['viewerPreferences']=$this->numObj;
+      }
+      $vp = $o['info']['viewerPreferences'];
+      $this->o_viewerPreferences($vp,'add',$options);
+      break;
+    case 'out':
+      $res="\n".$id." 0 obj\n".'<< /Type /Catalog';
+      foreach($o['info'] as $k=>$v){
+        switch($k){
+          case 'outlines':
+            $res.="\n".'/Outlines '.$v.' 0 R';
+            break;
+          case 'pages':
+            $res.="\n".'/Pages '.$v.' 0 R';
+            break;
+          case 'viewerPreferences':
+            $res.="\n".'/ViewerPreferences '.$o['info']['viewerPreferences'].' 0 R';
+            break;
+          case 'openHere':
+            $res.="\n".'/OpenAction '.$o['info']['openHere'].' 0 R';
+            break;
+        }
+      }
+      $res.=" >>\nendobj";
+      return $res;
+      break;
+  }
+}
+
+/**
+* object which is a parent to the pages in the document
+*/
+function o_pages($id,$action,$options=''){
+  if ($action!='new'){
+    $o =& $this->objects[$id];
+  }
+  switch ($action){
+    case 'new':
+      $this->objects[$id]=array('t'=>'pages','info'=>array());
+      $this->o_catalog($this->catalogId,'pages',$id);
+      break;
+    case 'page':
+      if (!is_array($options)){
+        // then it will just be the id of the new page
+        $o['info']['pages'][]=$options;
+      } else {
+        // then it should be an array having 'id','rid','pos', where rid=the page to which this one will be placed relative
+        // and pos is either 'before' or 'after', saying where this page will fit.
+        if (isset($options['id']) && isset($options['rid']) && isset($options['pos'])){
+          $i = array_search($options['rid'],$o['info']['pages']);
+          if (isset($o['info']['pages'][$i]) && $o['info']['pages'][$i]==$options['rid']){
+            // then there is a match
+            // make a space
+            switch ($options['pos']){
+              case 'before':
+                $k = $i;
+                break;
+              case 'after':
+                $k=$i+1;
+                break;
+              default:
+                $k=-1;
+                break;
+            }
+            if ($k>=0){
+              for ($j=count($o['info']['pages'])-1;$j>=$k;$j--){
+                $o['info']['pages'][$j+1]=$o['info']['pages'][$j];
+              }
+              $o['info']['pages'][$k]=$options['id'];
+            }
+          }
+        } 
+      }
+      break;
+    case 'procset':
+      $o['info']['procset']=$options;
+      break;
+    case 'mediaBox':
+      $o['info']['mediaBox']=$options; // which should be an array of 4 numbers
+      break;
+    case 'font':
+      $o['info']['fonts'][]=array('objNum'=>$options['objNum'],'fontNum'=>$options['fontNum']);
+      break;
+    case 'xObject':
+      $o['info']['xObjects'][]=array('objNum'=>$options['objNum'],'label'=>$options['label']);
+      break;
+    case 'out':
+      if (count($o['info']['pages'])){
+        $res="\n".$id." 0 obj\n<< /Type /Pages\n/Kids [";
+        foreach($o['info']['pages'] as $k=>$v){
+          $res.=$v." 0 R\n";
+        }
+        $res.="]\n/Count ".count($this->objects[$id]['info']['pages']);
+        if ((isset($o['info']['fonts']) && count($o['info']['fonts'])) || isset($o['info']['procset'])){
+          $res.="\n/Resources <<";
+          if (isset($o['info']['procset'])){
+            $res.="\n/ProcSet ".$o['info']['procset']." 0 R";
+          }
+          if (isset($o['info']['fonts']) && count($o['info']['fonts'])){
+            $res.="\n/Font << ";
+            foreach($o['info']['fonts'] as $finfo){
+              $res.="\n/F".$finfo['fontNum']." ".$finfo['objNum']." 0 R";
+            }
+            $res.=" >>";
+          }
+          if (isset($o['info']['xObjects']) && count($o['info']['xObjects'])){
+            $res.="\n/XObject << ";
+            foreach($o['info']['xObjects'] as $finfo){
+              $res.="\n/".$finfo['label']." ".$finfo['objNum']." 0 R";
+            }
+            $res.=" >>";
+          }
+          $res.="\n>>";
+          if (isset($o['info']['mediaBox'])){
+            $tmp=$o['info']['mediaBox'];
+            $res.="\n/MediaBox [".sprintf('%.3f',$tmp[0]).' '.sprintf('%.3f',$tmp[1]).' '.sprintf('%.3f',$tmp[2]).' '.sprintf('%.3f',$tmp[3]).']';
+          }
+        }
+        $res.="\n >>\nendobj";
+      } else {
+        $res="\n".$id." 0 obj\n<< /Type /Pages\n/Count 0\n>>\nendobj";
+      }
+      return $res;
+    break;
+  }
+}
+
+/**
+* define the outlines in the doc, empty for now
+*/
+function o_outlines($id,$action,$options=''){
+  if ($action!='new'){
+    $o =& $this->objects[$id];
+  }
+  switch ($action){
+    case 'new':
+      $this->objects[$id]=array('t'=>'outlines','info'=>array('outlines'=>array()));
+      $this->o_catalog($this->catalogId,'outlines',$id);
+      break;
+    case 'outline':
+      $o['info']['outlines'][]=$options;
+      break;
+    case 'out':
+      if (count($o['info']['outlines'])){
+        $res="\n".$id." 0 obj\n<< /Type /Outlines /Kids [";
+        foreach($o['info']['outlines'] as $k=>$v){
+          $res.=$v." 0 R ";
+        }
+        $res.="] /Count ".count($o['info']['outlines'])." >>\nendobj";
+      } else {
+        $res="\n".$id." 0 obj\n<< /Type /Outlines /Count 0 >>\nendobj";
+      }
+      return $res;
+      break;
+  }
+}
+
+/**
+* an object to hold the font description
+*/
+function o_font($id,$action,$options=''){
+  if ($action!='new'){
+    $o =& $this->objects[$id];
+  }
+  switch ($action){
+    case 'new':
+      $this->objects[$id]=array('t'=>'font','info'=>array('name'=>$options['name'],'SubType'=>'Type1'));
+      $fontNum=$this->numFonts;
+      $this->objects[$id]['info']['fontNum']=$fontNum;
+      // deal with the encoding and the differences
+      if (isset($options['differences'])){
+        // then we'll need an encoding dictionary
+        $this->numObj++;
+        $this->o_fontEncoding($this->numObj,'new',$options);
+        $this->objects[$id]['info']['encodingDictionary']=$this->numObj;
+      } else if (isset($options['encoding'])){
+        // we can specify encoding here
+        switch($options['encoding']){
+          case 'WinAnsiEncoding':
+          case 'MacRomanEncoding':
+          case 'MacExpertEncoding':
+            $this->objects[$id]['info']['encoding']=$options['encoding'];
+            break;
+          case 'none':
+            break;
+          default:
+            $this->objects[$id]['info']['encoding']='WinAnsiEncoding';
+            break;
+        }
+      } else {
+        $this->objects[$id]['info']['encoding']='WinAnsiEncoding';
+      }
+      // also tell the pages node about the new font
+      $this->o_pages($this->currentNode,'font',array('fontNum'=>$fontNum,'objNum'=>$id));
+      break;
+    case 'add':
+      foreach ($options as $k=>$v){
+        switch ($k){
+          case 'BaseFont':
+            $o['info']['name'] = $v;
+            break;
+          case 'FirstChar':
+          case 'LastChar':
+          case 'Widths':
+          case 'FontDescriptor':
+          case 'SubType':
+          $this->addMessage('o_font '.$k." : ".$v);
+            $o['info'][$k] = $v;
+            break;
+        }
+     }
+      break;
+    case 'out':
+      $res="\n".$id." 0 obj\n<< /Type /Font\n/Subtype /".$o['info']['SubType']."\n";
+      $res.="/Name /F".$o['info']['fontNum']."\n";
+      $res.="/BaseFont /".$o['info']['name']."\n";
+      if (isset($o['info']['encodingDictionary'])){
+        // then place a reference to the dictionary
+        $res.="/Encoding ".$o['info']['encodingDictionary']." 0 R\n";
+      } else if (isset($o['info']['encoding'])){
+        // use the specified encoding
+        $res.="/Encoding /".$o['info']['encoding']."\n";
+      }
+      if (isset($o['info']['FirstChar'])){
+        $res.="/FirstChar ".$o['info']['FirstChar']."\n";
+      }
+      if (isset($o['info']['LastChar'])){
+        $res.="/LastChar ".$o['info']['LastChar']."\n";
+      }
+      if (isset($o['info']['Widths'])){
+        $res.="/Widths ".$o['info']['Widths']." 0 R\n";
+      }
+      if (isset($o['info']['FontDescriptor'])){
+        $res.="/FontDescriptor ".$o['info']['FontDescriptor']." 0 R\n";
+      }
+      $res.=">>\nendobj";
+      return $res;
+      break;
+  }
+}
+
+/**
+* a font descriptor, needed for including additional fonts
+*/
+function o_fontDescriptor($id,$action,$options=''){
+  if ($action!='new'){
+    $o =& $this->objects[$id];
+  }
+  switch ($action){
+    case 'new':
+      $this->objects[$id]=array('t'=>'fontDescriptor','info'=>$options);
+      break;
+    case 'out':
+      $res="\n".$id." 0 obj\n<< /Type /FontDescriptor\n";
+      foreach ($o['info'] as $label => $value){
+        switch ($label){
+          case 'Ascent':
+          case 'CapHeight':
+          case 'Descent':
+          case 'Flags':
+          case 'ItalicAngle':
+          case 'StemV':
+          case 'AvgWidth':
+          case 'Leading':
+          case 'MaxWidth':
+          case 'MissingWidth':
+          case 'StemH':
+          case 'XHeight':
+          case 'CharSet':
+            if (strlen($value)){
+              $res.='/'.$label.' '.$value."\n";
+            }
+            break;
+          case 'FontFile':
+          case 'FontFile2':
+          case 'FontFile3':
+            $res.='/'.$label.' '.$value." 0 R\n";
+            break;
+          case 'FontBBox':
+            $res.='/'.$label.' ['.$value[0].' '.$value[1].' '.$value[2].' '.$value[3]."]\n";
+            break;
+          case 'FontName':
+            $res.='/'.$label.' /'.$value."\n";
+            break;
+        }
+      }
+      $res.=">>\nendobj";
+      return $res;
+      break;
+  }
+}
+
+/**
+* the font encoding
+*/
+function o_fontEncoding($id,$action,$options=''){
+  if ($action!='new'){
+    $o =& $this->objects[$id];
+  }
+  switch ($action){
+    case 'new':
+      // the options array should contain 'differences' and maybe 'encoding'
+      $this->objects[$id]=array('t'=>'fontEncoding','info'=>$options);
+      break;
+    case 'out':
+      $res="\n".$id." 0 obj\n<< /Type /Encoding\n";
+      if (!isset($o['info']['encoding'])){
+        $o['info']['encoding']='WinAnsiEncoding';
+      }
+      if ($o['info']['encoding']!='none'){
+        $res.="/BaseEncoding /".$o['info']['encoding']."\n";
+      }
+      $res.="/Differences \n[";
+      $onum=-100;
+      foreach($o['info']['differences'] as $num=>$label){
+        if ($num!=$onum+1){
+          // we cannot make use of consecutive numbering
+          $res.= "\n".$num." /".$label;
+        } else {
+          $res.= " /".$label;
+        }
+        $onum=$num;
+      }
+      $res.="\n]\n>>\nendobj";
+      return $res;
+      break;
+  }
+}
+
+/**
+* the document procset, solves some problems with printing to old PS printers
+*/
+function o_procset($id,$action,$options=''){
+  if ($action!='new'){
+    $o =& $this->objects[$id];
+  }
+  switch ($action){
+    case 'new':
+      $this->objects[$id]=array('t'=>'procset','info'=>array('PDF'=>1,'Text'=>1));
+      $this->o_pages($this->currentNode,'procset',$id);
+      $this->procsetObjectId=$id;
+      break;
+    case 'add':
+      // this is to add new items to the procset list, despite the fact that this is considered
+      // obselete, the items are required for printing to some postscript printers
+      switch ($options) {
+        case 'ImageB':
+        case 'ImageC':
+        case 'ImageI':
+          $o['info'][$options]=1;
+          break;
+      }
+      break;
+    case 'out':
+      $res="\n".$id." 0 obj\n[";
+      foreach ($o['info'] as $label=>$val){
+        $res.='/'.$label.' ';
+      }
+      $res.="]\nendobj";
+      return $res;
+      break;
+  }
+}
+
+/**
+* define the document information
+*/
+function o_info($id,$action,$options=''){
+  if ($action!='new'){
+    $o =& $this->objects[$id];
+  }
+  switch ($action){
+    case 'new':
+      $this->infoObject=$id;
+      $date='D:'.date('Ymd');
+      $this->objects[$id]=array('t'=>'info','info'=>array('Creator'=>'R and OS php pdf writer, http://www.ros.co.nz','CreationDate'=>$date));
+      break;
+    case 'Title':
+    case 'Author':
+    case 'Subject':
+    case 'Keywords':
+    case 'Creator':
+    case 'Producer':
+    case 'CreationDate':
+    case 'ModDate':
+    case 'Trapped':
+      $o['info'][$action]=$options;
+      break;
+    case 'out':
+      if ($this->encrypted){
+        $this->encryptInit($id);
+      }
+      $res="\n".$id." 0 obj\n<<\n";
+      foreach ($o['info']  as $k=>$v){
+        $res.='/'.$k.' (';
+        if ($this->encrypted){
+          $res.=$this->filterText($this->ARC4($v));
+        } else {
+          $res.=$this->filterText($v);
+        }
+        $res.=")\n";
+      }
+      $res.=">>\nendobj";
+      return $res;
+      break;
+  }
+}
+
+/**
+* an action object, used to link to URLS initially
+*/
+function o_action($id,$action,$options=''){
+  if ($action!='new'){
+    $o =& $this->objects[$id];
+  }
+  switch ($action){
+    case 'new':
+      if (is_array($options)){
+        $this->objects[$id]=array('t'=>'action','info'=>$options,'type'=>$options['type']);
+      } else {
+        // then assume a URI action
+        $this->objects[$id]=array('t'=>'action','info'=>$options,'type'=>'URI');
+      }
+      break;
+    case 'out':
+      if ($this->encrypted){
+        $this->encryptInit($id);
+      }
+      $res="\n".$id." 0 obj\n<< /Type /Action";
+      switch($o['type']){
+        case 'ilink':
+          // there will be an 'label' setting, this is the name of the destination
+          $res.="\n/S /GoTo\n/D ".$this->destinations[(string)$o['info']['label']]." 0 R";
+          break;
+        case 'URI':
+          $res.="\n/S /URI\n/URI (";
+          if ($this->encrypted){
+            $res.=$this->filterText($this->ARC4($o['info']));
+          } else {
+            $res.=$this->filterText($o['info']);
+          }
+          $res.=")";
+          break;
+      }
+      $res.="\n>>\nendobj";
+      return $res;
+      break;
+  }
+}
+
+/**
+* an annotation object, this will add an annotation to the current page.
+* initially will support just link annotations 
+*/
+function o_annotation($id,$action,$options=''){
+  if ($action!='new'){
+    $o =& $this->objects[$id];
+  }
+  switch ($action){
+    case 'new':
+      // add the annotation to the current page
+      $pageId = $this->currentPage;
+      $this->o_page($pageId,'annot',$id);
+      // and add the action object which is going to be required
+      switch($options['type']){
+        case 'link':
+          $this->objects[$id]=array('t'=>'annotation','info'=>$options);
+          $this->numObj++;
+          $this->o_action($this->numObj,'new',$options['url']);
+          $this->objects[$id]['info']['actionId']=$this->numObj;
+          break;
+        case 'ilink':
+          // this is to a named internal link
+          $label = $options['label'];
+          $this->objects[$id]=array('t'=>'annotation','info'=>$options);
+          $this->numObj++;
+          $this->o_action($this->numObj,'new',array('type'=>'ilink','label'=>$label));
+          $this->objects[$id]['info']['actionId']=$this->numObj;
+          break;
+      }
+      break;
+    case 'out':
+      $res="\n".$id." 0 obj\n<< /Type /Annot";
+      switch($o['info']['type']){
+        case 'link':
+        case 'ilink':
+          $res.= "\n/Subtype /Link";
+          break;
+      }
+      $res.="\n/A ".$o['info']['actionId']." 0 R";
+      $res.="\n/Border [0 0 0]";
+      $res.="\n/H /I";
+      $res.="\n/Rect [ ";
+      foreach($o['info']['rect'] as $v){
+        $res.= sprintf("%.4f ",$v);
+      }
+      $res.="]";
+      $res.="\n>>\nendobj";
+      return $res;
+      break;
+  }
+}
+
+/**
+* a page object, it also creates a contents object to hold its contents
+*/
+function o_page($id,$action,$options=''){
+  if ($action!='new'){
+    $o =& $this->objects[$id];
+  }
+  switch ($action){
+    case 'new':
+      $this->numPages++;
+      $this->objects[$id]=array('t'=>'page','info'=>array('parent'=>$this->currentNode,'pageNum'=>$this->numPages));
+      if (is_array($options)){
+        // then this must be a page insertion, array shoudl contain 'rid','pos'=[before|after]
+        $options['id']=$id;
+        $this->o_pages($this->currentNode,'page',$options);
+      } else {
+        $this->o_pages($this->currentNode,'page',$id);
+      }
+      $this->currentPage=$id;
+      //make a contents object to go with this page
+      $this->numObj++;
+      $this->o_contents($this->numObj,'new',$id);
+      $this->currentContents=$this->numObj;
+      $this->objects[$id]['info']['contents']=array();
+      $this->objects[$id]['info']['contents'][]=$this->numObj;
+      $match = ($this->numPages%2 ? 'odd' : 'even');
+      foreach($this->addLooseObjects as $oId=>$target){
+        if ($target=='all' || $match==$target){
+          $this->objects[$id]['info']['contents'][]=$oId;
+        }
+      }
+      break;
+    case 'content':
+      $o['info']['contents'][]=$options;
+      break;
+    case 'annot':
+      // add an annotation to this page
+      if (!isset($o['info']['annot'])){
+        $o['info']['annot']=array();
+      }
+      // $options should contain the id of the annotation dictionary
+      $o['info']['annot'][]=$options;
+      break;
+    case 'out':
+      $res="\n".$id." 0 obj\n<< /Type /Page";
+      $res.="\n/Parent ".$o['info']['parent']." 0 R";
+      if (isset($o['info']['annot'])){
+        $res.="\n/Annots [";
+        foreach($o['info']['annot'] as $aId){
+          $res.=" ".$aId." 0 R";
+        }
+        $res.=" ]";
+      }
+      $count = count($o['info']['contents']);
+      if ($count==1){
+        $res.="\n/Contents ".$o['info']['contents'][0]." 0 R";
+      } else if ($count>1){
+        $res.="\n/Contents [\n";
+        foreach ($o['info']['contents'] as $cId){
+          $res.=$cId." 0 R\n";
+        }
+        $res.="]";
+      }
+      $res.="\n>>\nendobj";
+      return $res;
+      break;
+  }
+}
+
+/**
+* the contents objects hold all of the content which appears on pages
+*/
+function o_contents($id,$action,$options=''){
+  if ($action!='new'){
+    $o =& $this->objects[$id];
+  }
+  switch ($action){
+    case 'new':
+      $this->objects[$id]=array('t'=>'contents','c'=>'','info'=>array());
+      if (strlen($options) && intval($options)){
+        // then this contents is the primary for a page
+        $this->objects[$id]['onPage']=$options;
+      } else if ($options=='raw'){
+        // then this page contains some other type of system object
+        $this->objects[$id]['raw']=1;
+      }
+      break;
+    case 'add':
+      // add more options to the decleration
+      foreach ($options as $k=>$v){
+        $o['info'][$k]=$v;
+      }
+    case 'out':
+      $tmp=$o['c'];
+      $res= "\n".$id." 0 obj\n";
+      if (isset($this->objects[$id]['raw'])){
+        $res.=$tmp;
+      } else {
+        $res.= "<<";
+        if (function_exists('gzcompress') && $this->options['compression']){
+          // then implement ZLIB based compression on this content stream
+          $res.=" /Filter /FlateDecode";
+          $tmp = gzcompress($tmp);
+        }
+        if ($this->encrypted){
+          $this->encryptInit($id);
+          $tmp = $this->ARC4($tmp);
+        }
+        foreach($o['info'] as $k=>$v){
+          $res .= "\n/".$k.' '.$v;
+        }
+        $res.="\n/Length ".strlen($tmp)." >>\nstream\n".$tmp."\nendstream";
+      }
+      $res.="\nendobj\n";
+      return $res;
+      break;
+  }
+}
+
+/**
+* an image object, will be an XObject in the document, includes description and data
+*/
+function o_image($id,$action,$options=''){
+  if ($action!='new'){
+    $o =& $this->objects[$id];
+  }
+  switch($action){
+    case 'new':
+      // make the new object
+      $this->objects[$id]=array('t'=>'image','data'=>$options['data'],'info'=>array());
+      $this->objects[$id]['info']['Type']='/XObject';
+      $this->objects[$id]['info']['Subtype']='/Image';
+      $this->objects[$id]['info']['Width']=$options['iw'];
+      $this->objects[$id]['info']['Height']=$options['ih'];
+      if (!isset($options['type']) || $options['type']=='jpg'){
+        if (!isset($options['channels'])){
+          $options['channels']=3;
+        }
+        switch($options['channels']){
+          case 1:
+            $this->objects[$id]['info']['ColorSpace']='/DeviceGray';
+            break;
+          default:
+            $this->objects[$id]['info']['ColorSpace']='/DeviceRGB';
+            break;
+        }
+        $this->objects[$id]['info']['Filter']='/DCTDecode';
+        $this->objects[$id]['info']['BitsPerComponent']=8;
+      } else if ($options['type']=='png'){
+        $this->objects[$id]['info']['Filter']='/FlateDecode';
+        $this->objects[$id]['info']['DecodeParms']='<< /Predictor 15 /Colors '.$options['ncolor'].' /Columns '.$options['iw'].' /BitsPerComponent '.$options['bitsPerComponent'].'>>';
+        if (strlen($options['pdata'])){
+          $tmp = ' [ /Indexed /DeviceRGB '.(strlen($options['pdata'])/3-1).' ';
+          $this->numObj++;
+          $this->o_contents($this->numObj,'new');
+          $this->objects[$this->numObj]['c']=$options['pdata'];
+          $tmp.=$this->numObj.' 0 R';
+          $tmp .=' ]';
+          $this->objects[$id]['info']['ColorSpace'] = $tmp;
+          if (isset($options['transparency'])){
+            switch($options['transparency']['type']){
+              case 'indexed':
+                $tmp=' [ '.$options['transparency']['data'].' '.$options['transparency']['data'].'] ';
+                $this->objects[$id]['info']['Mask'] = $tmp;
+                break;
+            }
+          }
+        } else {
+          $this->objects[$id]['info']['ColorSpace']='/'.$options['color'];
+        }
+        $this->objects[$id]['info']['BitsPerComponent']=$options['bitsPerComponent'];
+      }
+      // assign it a place in the named resource dictionary as an external object, according to
+      // the label passed in with it.
+      $this->o_pages($this->currentNode,'xObject',array('label'=>$options['label'],'objNum'=>$id));
+      // also make sure that we have the right procset object for it.
+      $this->o_procset($this->procsetObjectId,'add','ImageC');
+      break;
+    case 'out':
+      $tmp=$o['data'];
+      $res= "\n".$id." 0 obj\n<<";
+      foreach($o['info'] as $k=>$v){
+        $res.="\n/".$k.' '.$v;
+      }
+      if ($this->encrypted){
+        $this->encryptInit($id);
+        $tmp = $this->ARC4($tmp);
+      }
+      $res.="\n/Length ".strlen($tmp)." >>\nstream\n".$tmp."\nendstream\nendobj\n";
+      return $res;
+      break;
+  }
+}
+
+/**
+* encryption object.
+*/
+function o_encryption($id,$action,$options=''){
+  if ($action!='new'){
+    $o =& $this->objects[$id];
+  }
+  switch($action){
+    case 'new':
+      // make the new object
+      $this->objects[$id]=array('t'=>'encryption','info'=>$options);
+      $this->arc4_objnum=$id;
+      // figure out the additional paramaters required
+      $pad = chr(0x28).chr(0xBF).chr(0x4E).chr(0x5E).chr(0x4E).chr(0x75).chr(0x8A).chr(0x41).chr(0x64).chr(0x00).chr(0x4E).chr(0x56).chr(0xFF).chr(0xFA).chr(0x01).chr(0x08).chr(0x2E).chr(0x2E).chr(0x00).chr(0xB6).chr(0xD0).chr(0x68).chr(0x3E).chr(0x80).chr(0x2F).chr(0x0C).chr(0xA9).chr(0xFE).chr(0x64).chr(0x53).chr(0x69).chr(0x7A);
+      $len = strlen($options['owner']);
+      if ($len>32){
+        $owner = substr($options['owner'],0,32);
+      } else if ($len<32){
+        $owner = $options['owner'].substr($pad,0,32-$len);
+      } else {
+        $owner = $options['owner'];
+      }
+      $len = strlen($options['user']);
+      if ($len>32){
+        $user = substr($options['user'],0,32);
+      } else if ($len<32){
+        $user = $options['user'].substr($pad,0,32-$len);
+      } else {
+        $user = $options['user'];
+      }
+      $tmp = $this->md5_16($owner);
+      $okey = substr($tmp,0,5);
+      $this->ARC4_init($okey);
+      $ovalue=$this->ARC4($user);
+      $this->objects[$id]['info']['O']=$ovalue;
+      // now make the u value, phew.
+      $tmp = $this->md5_16($user.$ovalue.chr($options['p']).chr(255).chr(255).chr(255).$this->fileIdentifier);
+      $ukey = substr($tmp,0,5);
+
+      $this->ARC4_init($ukey);
+      $this->encryptionKey = $ukey;
+      $this->encrypted=1;
+      $uvalue=$this->ARC4($pad);
+
+      $this->objects[$id]['info']['U']=$uvalue;
+      $this->encryptionKey=$ukey;
+     
+      // initialize the arc4 array
+      break;
+    case 'out':
+      $res= "\n".$id." 0 obj\n<<";
+      $res.="\n/Filter /Standard";
+      $res.="\n/V 1";
+      $res.="\n/R 2";
+      $res.="\n/O (".$this->filterText($o['info']['O']).')';
+      $res.="\n/U (".$this->filterText($o['info']['U']).')';
+      // and the p-value needs to be converted to account for the twos-complement approach
+      $o['info']['p'] = (($o['info']['p']^255)+1)*-1;
+      $res.="\n/P ".($o['info']['p']);
+      $res.="\n>>\nendobj\n";
+      
+      return $res;
+      break;
+  }
+}
+      
+/**
+* ARC4 functions
+* A series of function to implement ARC4 encoding in PHP
+*/
+
+/**
+* calculate the 16 byte version of the 128 bit md5 digest of the string
+*/
+function md5_16($string){
+  $tmp = md5($string);
+  $out='';
+  for ($i=0;$i<=30;$i=$i+2){
+    $out.=chr(hexdec(substr($tmp,$i,2)));
+  }
+  return $out;
+}
+
+/**
+* initialize the encryption for processing a particular object 
+*/
+function encryptInit($id){
+  $tmp = $this->encryptionKey;
+  $hex = dechex($id);
+  if (strlen($hex)<6){
+    $hex = substr('000000',0,6-strlen($hex)).$hex;
+  }
+  $tmp.= chr(hexdec(substr($hex,4,2))).chr(hexdec(substr($hex,2,2))).chr(hexdec(substr($hex,0,2))).chr(0).chr(0);
+  $key = $this->md5_16($tmp);
+  $this->ARC4_init(substr($key,0,10));
+}
+
+/**
+* initialize the ARC4 encryption
+*/
+function ARC4_init($key=''){
+  $this->arc4 = '';
+  // setup the control array
+  if (strlen($key)==0){
+    return;
+  }
+  $k = '';
+  while(strlen($k)<256){
+    $k.=$key;
+  }
+  $k=substr($k,0,256);
+  for ($i=0;$i<256;$i++){
+    $this->arc4 .= chr($i);
+  }
+  $j=0;
+  for ($i=0;$i<256;$i++){
+    $t = $this->arc4[$i];
+    $j = ($j + ord($t) + ord($k[$i]))%256;
+    $this->arc4[$i]=$this->arc4[$j];
+    $this->arc4[$j]=$t;
+  }    
+}
+
+/**
+* ARC4 encrypt a text string
+*/
+function ARC4($text){
+  $len=strlen($text);
+  $a=0;
+  $b=0;
+  $c = $this->arc4;
+  $out='';
+  for ($i=0;$i<$len;$i++){
+    $a = ($a+1)%256;
+    $t= $c[$a];
+    $b = ($b+ord($t))%256;
+    $c[$a]=$c[$b];
+    $c[$b]=$t;
+    $k = ord($c[(ord($c[$a])+ord($c[$b]))%256]);
+    $out.=chr(ord($text[$i]) ^ $k);
+  }
+  
+  return $out;
+}
+
+/**
+* functions which can be called to adjust or add to the document
+*/
+
+/**
+* add a link in the document to an external URL
+*/
+function addLink($url,$x0,$y0,$x1,$y1){
+  $this->numObj++;
+  $info = array('type'=>'link','url'=>$url,'rect'=>array($x0,$y0,$x1,$y1));
+  $this->o_annotation($this->numObj,'new',$info);
+}
+
+/**
+* add a link in the document to an internal destination (ie. within the document)
+*/
+function addInternalLink($label,$x0,$y0,$x1,$y1){
+  $this->numObj++;
+  $info = array('type'=>'ilink','label'=>$label,'rect'=>array($x0,$y0,$x1,$y1));
+  $this->o_annotation($this->numObj,'new',$info);
+}
+
+/**
+* set the encryption of the document
+* can be used to turn it on and/or set the passwords which it will have.
+* also the functions that the user will have are set here, such as print, modify, add
+*/
+function setEncryption($userPass='',$ownerPass='',$pc=array()){
+  $p=bindec(11000000);
+
+  $options = array(
+     'print'=>4
+    ,'modify'=>8
+    ,'copy'=>16
+    ,'add'=>32
+  );
+  foreach($pc as $k=>$v){
+    if ($v && isset($options[$k])){
+      $p+=$options[$k];
+    } else if (isset($options[$v])){
+      $p+=$options[$v];
+    }
+  }
+  // implement encryption on the document
+  if ($this->arc4_objnum == 0){
+    // then the block does not exist already, add it.
+    $this->numObj++;
+    if (strlen($ownerPass)==0){
+      $ownerPass=$userPass;
+    }
+    $this->o_encryption($this->numObj,'new',array('user'=>$userPass,'owner'=>$ownerPass,'p'=>$p));
+  }
+}
+
+/**
+* should be used for internal checks, not implemented as yet
+*/
+function checkAllHere(){
+}
+
+/**
+* return the pdf stream as a string returned from the function
+*/
+function output($debug=0){
+
+  if ($debug){
+    // turn compression off
+    $this->options['compression']=0;
+  }
+
+  if ($this->arc4_objnum){
+    $this->ARC4_init($this->encryptionKey);
+  }
+
+  $this->checkAllHere();
+
+  $xref=array();
+  $content="%PDF-1.3\n%âÓn";
+//  $content="%PDF-1.3\n";
+  $pos=strlen($content);
+  foreach($this->objects as $k=>$v){
+    $tmp='o_'.$v['t'];
+    $cont=$this->$tmp($k,'out');
+    $content.=$cont;
+    $xref[]=$pos;
+    $pos+=strlen($cont);
+  }
+  $content.="\nxref\n0 ".(count($xref)+1)."\n0000000000 65535 f \n";
+  foreach($xref as $p){
+    $content.=substr('0000000000',0,10-strlen($p)).$p." 00000 n \n";
+  }
+  $content.="\ntrailer\n  << /Size ".(count($xref)+1)."\n     /Root 1 0 R\n     /Info ".$this->infoObject." 0 R\n";
+  // if encryption has been applied to this document then add the marker for this dictionary
+  if ($this->arc4_objnum > 0){
+    $content .= "/Encrypt ".$this->arc4_objnum." 0 R\n";
+  }
+  if (strlen($this->fileIdentifier)){
+    $content .= "/ID[<".$this->fileIdentifier."><".$this->fileIdentifier.">]\n";
+  }
+  $content .= "  >>\nstartxref\n".$pos."\n%%EOF\n";
+  return $content;
+}
+
+/**
+* intialize a new document
+* if this is called on an existing document results may be unpredictable, but the existing document would be lost at minimum
+* this function is called automatically by the constructor function
+*
+* @access private
+*/
+function newDocument($pageSize=array(0,0,612,792)){
+  $this->numObj=0;
+  $this->objects = array();
+
+  $this->numObj++;
+  $this->o_catalog($this->numObj,'new');
+
+  $this->numObj++;
+  $this->o_outlines($this->numObj,'new');
+
+  $this->numObj++;
+  $this->o_pages($this->numObj,'new');
+
+  $this->o_pages($this->numObj,'mediaBox',$pageSize);
+  $this->currentNode = 3;
+
+  $this->numObj++;
+  $this->o_procset($this->numObj,'new');
+
+  $this->numObj++;
+  $this->o_info($this->numObj,'new');
+
+  $this->numObj++;
+  $this->o_page($this->numObj,'new');
+
+  // need to store the first page id as there is no way to get it to the user during 
+  // startup
+  $this->firstPageId = $this->currentContents;
+}
+
+/**
+* open the font file and return a php structure containing it.
+* first check if this one has been done before and saved in a form more suited to php
+* note that if a php serialized version does not exist it will try and make one, but will
+* require write access to the directory to do it... it is MUCH faster to have these serialized
+* files.
+*
+* @access private
+*/
+function openFont($font){
+  // assume that $font contains both the path and perhaps the extension to the file, split them
+  $pos=strrpos($font,'/');
+  if ($pos===false){
+    $dir = './';
+    $name = $font;
+  } else {
+    $dir=substr($font,0,$pos+1);
+    $name=substr($font,$pos+1);
+  }
+
+  if (substr($name,-4)=='.afm'){
+    $name=substr($name,0,strlen($name)-4);
+  }
+  $this->addMessage('openFont: '.$font.' - '.$name);
+  if (file_exists($dir.'php_'.$name.'.afm')){
+    $this->addMessage('openFont: php file exists '.$dir.'php_'.$name.'.afm');
+    $tmp = file($dir.'php_'.$name.'.afm');
+    $this->fonts[$font]=unserialize($tmp[0]);
+    if (!isset($this->fonts[$font]['_version_']) || $this->fonts[$font]['_version_']<1){
+      // if the font file is old, then clear it out and prepare for re-creation
+      $this->addMessage('openFont: clear out, make way for new version.');
+      unset($this->fonts[$font]);
+    }
+  }
+  if (!isset($this->fonts[$font]) && file_exists($dir.$name.'.afm')){
+    // then rebuild the php_<font>.afm file from the <font>.afm file
+    $this->addMessage('openFont: build php file from '.$dir.$name.'.afm');
+    $data = array();
+    $file = file($dir.$name.'.afm');
+    foreach ($file as $rowA){
+      $row=trim($rowA);
+      $pos=strpos($row,' ');
+      if ($pos){
+        // then there must be some keyword
+        $key = substr($row,0,$pos);
+        switch ($key){
+          case 'FontName':
+          case 'FullName':
+          case 'FamilyName':
+          case 'Weight':
+          case 'ItalicAngle':
+          case 'IsFixedPitch':
+          case 'CharacterSet':
+          case 'UnderlinePosition':
+          case 'UnderlineThickness':
+          case 'Version':
+          case 'EncodingScheme':
+          case 'CapHeight':
+          case 'XHeight':
+          case 'Ascender':
+          case 'Descender':
+          case 'StdHW':
+          case 'StdVW':
+          case 'StartCharMetrics':
+            $data[$key]=trim(substr($row,$pos));
+            break;
+          case 'FontBBox':
+            $data[$key]=explode(' ',trim(substr($row,$pos)));
+            break;
+          case 'C':
+            //C 39 ; WX 222 ; N quoteright ; B 53 463 157 718 ;
+            $bits=explode(';',trim($row));
+            $dtmp=array();
+            foreach($bits as $bit){
+              $bits2 = explode(' ',trim($bit));
+              if (strlen($bits2[0])){
+                if (count($bits2)>2){
+                  $dtmp[$bits2[0]]=array();
+                  for ($i=1;$i<count($bits2);$i++){
+                    $dtmp[$bits2[0]][]=$bits2[$i];
+                  }
+                } else if (count($bits2)==2){
+                  $dtmp[$bits2[0]]=$bits2[1];
+                }
+              }
+            }
+            if ($dtmp['C']>=0){
+              $data['C'][$dtmp['C']]=$dtmp;
+              $data['C'][$dtmp['N']]=$dtmp;
+            } else {
+              $data['C'][$dtmp['N']]=$dtmp;
+            }
+            break;
+          case 'KPX':
+            //KPX Adieresis yacute -40
+            $bits=explode(' ',trim($row));
+            $data['KPX'][$bits[1]][$bits[2]]=$bits[3];
+            break;
+        }
+      }
+    }
+    $data['_version_']=1;
+    $this->fonts[$font]=$data;
+    $fp = fopen($dir.'php_'.$name.'.afm','w');
+    fwrite($fp,serialize($data));
+    fclose($fp);
+  } else if (!isset($this->fonts[$font])){
+    $this->addMessage('openFont: no font file found');
+//    echo 'Font not Found '.$font;
+  }
+}
+
+/**
+* if the font is not loaded then load it and make the required object
+* else just make it the current font
+* the encoding array can contain 'encoding'=> 'none','WinAnsiEncoding','MacRomanEncoding' or 'MacExpertEncoding'
+* note that encoding='none' will need to be used for symbolic fonts
+* and 'differences' => an array of mappings between numbers 0->255 and character names.
+*
+*/
+function selectFont($fontName,$encoding='',$set=1){
+  if (!isset($this->fonts[$fontName])){
+    // load the file
+    $this->openFont($fontName);
+    if (isset($this->fonts[$fontName])){
+      $this->numObj++;
+      $this->numFonts++;
+      $pos=strrpos($fontName,'/');
+//      $dir=substr($fontName,0,$pos+1);
+      $name=substr($fontName,$pos+1);
+      if (substr($name,-4)=='.afm'){
+        $name=substr($name,0,strlen($name)-4);
+      }
+      $options=array('name'=>$name);
+      if (is_array($encoding)){
+        // then encoding and differences might be set
+        if (isset($encoding['encoding'])){
+          $options['encoding']=$encoding['encoding'];
+        }
+        if (isset($encoding['differences'])){
+          $options['differences']=$encoding['differences'];
+        }
+      } else if (strlen($encoding)){
+        // then perhaps only the encoding has been set
+        $options['encoding']=$encoding;
+      }
+      $fontObj = $this->numObj;
+      $this->o_font($this->numObj,'new',$options);
+      $this->fonts[$fontName]['fontNum']=$this->numFonts;
+      // if this is a '.afm' font, and there is a '.pfa' file to go with it ( as there
+      // should be for all non-basic fonts), then load it into an object and put the
+      // references into the font object
+      $basefile = substr($fontName,0,strlen($fontName)-4);
+      if (file_exists($basefile.'.pfb')){
+        $fbtype = 'pfb';
+      } else if (file_exists($basefile.'.ttf')){
+        $fbtype = 'ttf';
+      } else {
+        $fbtype='';
+      }
+      $fbfile = $basefile.'.'.$fbtype;
+      
+//      $pfbfile = substr($fontName,0,strlen($fontName)-4).'.pfb';
+//      $ttffile = substr($fontName,0,strlen($fontName)-4).'.ttf';
+      $this->addMessage('selectFont: checking for - '.$fbfile);
+      if (substr($fontName,-4)=='.afm' && strlen($fbtype) ){
+        $adobeFontName = $this->fonts[$fontName]['FontName'];
+//        $fontObj = $this->numObj;
+        $this->addMessage('selectFont: adding font file - '.$fbfile.' - '.$adobeFontName);
+        // find the array of fond widths, and put that into an object.
+        $firstChar = -1;
+        $lastChar = 0;
+        $widths = array();
+        foreach ($this->fonts[$fontName]['C'] as $num=>$d){
+          if (intval($num)>0 || $num=='0'){
+            if ($lastChar>0 && $num>$lastChar+1){
+              for($i=$lastChar+1;$i<$num;$i++){
+                $widths[] = 0;
+              }
+            }
+            $widths[] = $d['WX'];
+            if ($firstChar==-1){
+              $firstChar = $num;
+            }
+            $lastChar = $num;
+          }
+        }
+        // also need to adjust the widths for the differences array
+        if (isset($options['differences'])){
+          foreach($options['differences'] as $charNum=>$charName){
+            if ($charNum>$lastChar){
+              for($i=$lastChar+1;$i<=$charNum;$i++){
+                $widths[]=0;
+              }
+              $lastChar=$charNum;
+            }
+            if (isset($this->fonts[$fontName]['C'][$charName])){
+              $widths[$charNum-$firstChar]=$this->fonts[$fontName]['C'][$charName]['WX'];
+            }
+          }
+        }
+        $this->addMessage('selectFont: FirstChar='.$firstChar);
+        $this->addMessage('selectFont: LastChar='.$lastChar);
+        $this->numObj++;
+        $this->o_contents($this->numObj,'new','raw');
+        $this->objects[$this->numObj]['c'].='[';
+        foreach($widths as $width){
+          $this->objects[$this->numObj]['c'].=' '.$width;
+        }
+        $this->objects[$this->numObj]['c'].=' ]';
+        $widthid = $this->numObj;
+
+        // load the pfb file, and put that into an object too.
+        // note that pdf supports only binary format type 1 font files, though there is a 
+        // simple utility to convert them from pfa to pfb.
+        $fp = fopen($fbfile,'rb');
+        $tmp = get_magic_quotes_runtime();
+        set_magic_quotes_runtime(0);
+        $data = fread($fp,filesize($fbfile));
+        set_magic_quotes_runtime($tmp);
+        fclose($fp);
+
+        // create the font descriptor
+        $this->numObj++;
+        $fontDescriptorId = $this->numObj;
+        $this->numObj++;
+        $pfbid = $this->numObj;
+        // determine flags (more than a little flakey, hopefully will not matter much)
+        $flags=0;
+        if ($this->fonts[$fontName]['ItalicAngle']!=0){ $flags+=pow(2,6); }
+        if ($this->fonts[$fontName]['IsFixedPitch']=='true'){ $flags+=1; }
+        $flags+=pow(2,5); // assume non-sybolic
+
+        $list = array('Ascent'=>'Ascender','CapHeight'=>'CapHeight','Descent'=>'Descender','FontBBox'=>'FontBBox','ItalicAngle'=>'ItalicAngle');
+        $fdopt = array(
+         'Flags'=>$flags
+         ,'FontName'=>$adobeFontName
+         ,'StemV'=>100  // don't know what the value for this should be!
+        );
+        foreach($list as $k=>$v){
+          if (isset($this->fonts[$fontName][$v])){
+            $fdopt[$k]=$this->fonts[$fontName][$v];
+          }
+        }
+
+        if ($fbtype=='pfb'){
+          $fdopt['FontFile']=$pfbid;
+        } else if ($fbtype=='ttf'){
+          $fdopt['FontFile2']=$pfbid;
+        }
+        $this->o_fontDescriptor($fontDescriptorId,'new',$fdopt);        
+
+        // embed the font program
+        $this->o_contents($this->numObj,'new');
+        $this->objects[$pfbid]['c'].=$data;
+        // determine the cruicial lengths within this file
+        if ($fbtype=='pfb'){
+          $l1 = strpos($data,'eexec')+6;
+          $l2 = strpos($data,'00000000')-$l1;
+          $l3 = strlen($data)-$l2-$l1;
+          $this->o_contents($this->numObj,'add',array('Length1'=>$l1,'Length2'=>$l2,'Length3'=>$l3));
+        } else if ($fbtype=='ttf'){
+          $l1 = strlen($data);
+          $this->o_contents($this->numObj,'add',array('Length1'=>$l1));
+        }
+
+
+        // tell the font object about all this new stuff
+        $tmp = array('BaseFont'=>$adobeFontName,'Widths'=>$widthid
+                                      ,'FirstChar'=>$firstChar,'LastChar'=>$lastChar
+                                      ,'FontDescriptor'=>$fontDescriptorId);
+        if ($fbtype=='ttf'){
+          $tmp['SubType']='TrueType';
+        }
+        $this->addMessage('adding extra info to font.('.$fontObj.')');
+        foreach($tmp as $fk=>$fv){
+          $this->addMessage($fk." : ".$fv);
+        }
+        $this->o_font($fontObj,'add',$tmp);
+
+      } else {
+        $this->addMessage('selectFont: pfb or ttf file not found, ok if this is one of the 14 standard fonts');
+      }
+
+
+      // also set the differences here, note that this means that these will take effect only the 
+      //first time that a font is selected, else they are ignored
+      if (isset($options['differences'])){
+        $this->fonts[$fontName]['differences']=$options['differences'];
+      }
+    }
+  }
+  if ($set && isset($this->fonts[$fontName])){
+    // so if for some reason the font was not set in the last one then it will not be selected
+    $this->currentBaseFont=$fontName;
+    // the next line means that if a new font is selected, then the current text state will be
+    // applied to it as well.
+    $this->setCurrentFont();
+  }
+  return $this->currentFontNum;
+}
+
+/**
+* sets up the current font, based on the font families, and the current text state
+* note that this system is quite flexible, a <b><i> font can be completely different to a
+* <i><b> font, and even <b><b> will have to be defined within the family to have meaning
+* This function is to be called whenever the currentTextState is changed, it will update
+* the currentFont setting to whatever the appropriatte family one is.
+* If the user calls selectFont themselves then that will reset the currentBaseFont, and the currentFont
+* This function will change the currentFont to whatever it should be, but will not change the 
+* currentBaseFont.
+*
+* @access private
+*/
+function setCurrentFont(){
+  if (strlen($this->currentBaseFont)==0){
+    // then assume an initial font
+    $this->selectFont('./fonts/Helvetica.afm');
+  }
+  $cf = substr($this->currentBaseFont,strrpos($this->currentBaseFont,'/')+1);
+  if (strlen($this->currentTextState)
+    && isset($this->fontFamilies[$cf]) 
+      && isset($this->fontFamilies[$cf][$this->currentTextState])){
+    // then we are in some state or another
+    // and this font has a family, and the current setting exists within it
+    // select the font, then return it
+    $nf = substr($this->currentBaseFont,0,strrpos($this->currentBaseFont,'/')+1).$this->fontFamilies[$cf][$this->currentTextState];
+    $this->selectFont($nf,'',0);
+    $this->currentFont = $nf;
+    $this->currentFontNum = $this->fonts[$nf]['fontNum'];
+  } else {
+    // the this font must not have the right family member for the current state
+    // simply assume the base font
+    $this->currentFont = $this->currentBaseFont;
+    $this->currentFontNum = $this->fonts[$this->currentFont]['fontNum'];    
+  }
+}
+
+/**
+* function for the user to find out what the ID is of the first page that was created during
+* startup - useful if they wish to add something to it later.
+*/
+function getFirstPageId(){
+  return $this->firstPageId;
+}
+
+/**
+* add content to the currently active object
+*
+* @access private
+*/
+function addContent($content){
+  $this->objects[$this->currentContents]['c'].=$content;
+}
+
+/**
+* sets the colour for fill operations
+*/
+function setColor($r,$g,$b,$force=0){
+  if ($r>=0 && ($force || $r!=$this->currentColour['r'] || $g!=$this->currentColour['g'] || $b!=$this->currentColour['b'])){
+    $this->objects[$this->currentContents]['c'].="\n".sprintf('%.3f',$r).' '.sprintf('%.3f',$g).' '.sprintf('%.3f',$b).' rg';
+    $this->currentColour=array('r'=>$r,'g'=>$g,'b'=>$b);
+  }
+}
+
+/**
+* sets the colour for stroke operations
+*/
+function setStrokeColor($r,$g,$b,$force=0){
+  if ($r>=0 && ($force || $r!=$this->currentStrokeColour['r'] || $g!=$this->currentStrokeColour['g'] || $b!=$this->currentStrokeColour['b'])){
+    $this->objects[$this->currentContents]['c'].="\n".sprintf('%.3f',$r).' '.sprintf('%.3f',$g).' '.sprintf('%.3f',$b).' RG';
+    $this->currentStrokeColour=array('r'=>$r,'g'=>$g,'b'=>$b);
+  }
+}
+
+/**
+* draw a line from one set of coordinates to another
+*/
+function line($x1,$y1,$x2,$y2){
+  $this->objects[$this->currentContents]['c'].="\n".sprintf('%.3f',$x1).' '.sprintf('%.3f',$y1).' m '.sprintf('%.3f',$x2).' '.sprintf('%.3f',$y2).' l S';
+}
+
+/**
+* draw a bezier curve based on 4 control points
+*/
+function curve($x0,$y0,$x1,$y1,$x2,$y2,$x3,$y3){
+  // in the current line style, draw a bezier curve from (x0,y0) to (x3,y3) using the other two points
+  // as the control points for the curve.
+  $this->objects[$this->currentContents]['c'].="\n".sprintf('%.3f',$x0).' '.sprintf('%.3f',$y0).' m '.sprintf('%.3f',$x1).' '.sprintf('%.3f',$y1);
+  $this->objects[$this->currentContents]['c'].= ' '.sprintf('%.3f',$x2).' '.sprintf('%.3f',$y2).' '.sprintf('%.3f',$x3).' '.sprintf('%.3f',$y3).' c S';
+}
+
+/**
+* draw a part of an ellipse
+*/
+function partEllipse($x0,$y0,$astart,$afinish,$r1,$r2=0,$angle=0,$nSeg=8){
+  $this->ellipse($x0,$y0,$r1,$r2,$angle,$nSeg,$astart,$afinish,0);
+}
+
+/**
+* draw a filled ellipse
+*/
+function filledEllipse($x0,$y0,$r1,$r2=0,$angle=0,$nSeg=8,$astart=0,$afinish=360){
+  return $this->ellipse($x0,$y0,$r1,$r2=0,$angle,$nSeg,$astart,$afinish,1,1);
+}
+
+/**
+* draw an ellipse
+* note that the part and filled ellipse are just special cases of this function
+*
+* draws an ellipse in the current line style
+* centered at $x0,$y0, radii $r1,$r2
+* if $r2 is not set, then a circle is drawn
+* nSeg is not allowed to be less than 2, as this will simply draw a line (and will even draw a 
+* pretty crappy shape at 2, as we are approximating with bezier curves.
+*/
+function ellipse($x0,$y0,$r1,$r2=0,$angle=0,$nSeg=8,$astart=0,$afinish=360,$close=1,$fill=0){
+  if ($r1==0){
+    return;
+  }
+  if ($r2==0){
+    $r2=$r1;
+  }
+  if ($nSeg<2){
+    $nSeg=2;
+  }
+
+  $astart = deg2rad((float)$astart);
+  $afinish = deg2rad((float)$afinish);
+  $totalAngle =$afinish-$astart;
+
+  $dt = $totalAngle/$nSeg;
+  $dtm = $dt/3;
+
+  if ($angle != 0){
+    $a = -1*deg2rad((float)$angle);
+    $tmp = "\n q ";
+    $tmp .= sprintf('%.3f',cos($a)).' '.sprintf('%.3f',(-1.0*sin($a))).' '.sprintf('%.3f',sin($a)).' '.sprintf('%.3f',cos($a)).' ';
+    $tmp .= sprintf('%.3f',$x0).' '.sprintf('%.3f',$y0).' cm';
+    $this->objects[$this->currentContents]['c'].= $tmp;
+    $x0=0;
+    $y0=0;
+  }
+
+  $t1 = $astart;
+  $a0 = $x0+$r1*cos($t1);
+  $b0 = $y0+$r2*sin($t1);
+  $c0 = -$r1*sin($t1);
+  $d0 = $r2*cos($t1);
+
+  $this->objects[$this->currentContents]['c'].="\n".sprintf('%.3f',$a0).' '.sprintf('%.3f',$b0).' m ';
+  for ($i=1;$i<=$nSeg;$i++){
+    // draw this bit of the total curve
+    $t1 = $i*$dt+$astart;
+    $a1 = $x0+$r1*cos($t1);
+    $b1 = $y0+$r2*sin($t1);
+    $c1 = -$r1*sin($t1);
+    $d1 = $r2*cos($t1);
+    $this->objects[$this->currentContents]['c'].="\n".sprintf('%.3f',($a0+$c0*$dtm)).' '.sprintf('%.3f',($b0+$d0*$dtm));
+    $this->objects[$this->currentContents]['c'].= ' '.sprintf('%.3f',($a1-$c1*$dtm)).' '.sprintf('%.3f',($b1-$d1*$dtm)).' '.sprintf('%.3f',$a1).' '.sprintf('%.3f',$b1).' c';
+    $a0=$a1;
+    $b0=$b1;
+    $c0=$c1;
+    $d0=$d1;    
+  }
+  if ($fill){
+    $this->objects[$this->currentContents]['c'].=' f';
+  } else {
+    if ($close){
+      $this->objects[$this->currentContents]['c'].=' s'; // small 's' signifies closing the path as well
+    } else {
+      $this->objects[$this->currentContents]['c'].=' S';
+    }
+  }
+  if ($angle !=0){
+    $this->objects[$this->currentContents]['c'].=' Q';
+  }
+}
+
+/**
+* this sets the line drawing style.
+* width, is the thickness of the line in user units
+* cap is the type of cap to put on the line, values can be 'butt','round','square'
+*    where the diffference between 'square' and 'butt' is that 'square' projects a flat end past the
+*    end of the line.
+* join can be 'miter', 'round', 'bevel'
+* dash is an array which sets the dash pattern, is a series of length values, which are the lengths of the
+*   on and off dashes.
+*   (2) represents 2 on, 2 off, 2 on , 2 off ...
+*   (2,1) is 2 on, 1 off, 2 on, 1 off.. etc
+* phase is a modifier on the dash pattern which is used to shift the point at which the pattern starts. 
+*/
+function setLineStyle($width=1,$cap='',$join='',$dash='',$phase=0){
+
+  // this is quite inefficient in that it sets all the parameters whenever 1 is changed, but will fix another day
+  $string = '';
+  if ($width>0){
+    $string.= $width.' w';
+  }
+  $ca = array('butt'=>0,'round'=>1,'square'=>2);
+  if (isset($ca[$cap])){
+    $string.= ' '.$ca[$cap].' J';
+  }
+  $ja = array('miter'=>0,'round'=>1,'bevel'=>2);
+  if (isset($ja[$join])){
+    $string.= ' '.$ja[$join].' j';
+  }
+  if (is_array($dash)){
+    $string.= ' [';
+    foreach ($dash as $len){
+      $string.=' '.$len;
+    }
+    $string.= ' ] '.$phase.' d';
+  }
+  $this->currentLineStyle = $string;
+  $this->objects[$this->currentContents]['c'].="\n".$string;
+}
+
+/**
+* draw a polygon, the syntax for this is similar to the GD polygon command
+*/
+function polygon($p,$np,$f=0){
+  $this->objects[$this->currentContents]['c'].="\n";
+  $this->objects[$this->currentContents]['c'].=sprintf('%.3f',$p[0]).' '.sprintf('%.3f',$p[1]).' m ';
+  for ($i=2;$i<$np*2;$i=$i+2){
+    $this->objects[$this->currentContents]['c'].= sprintf('%.3f',$p[$i]).' '.sprintf('%.3f',$p[$i+1]).' l ';
+  }
+  if ($f==1){
+    $this->objects[$this->currentContents]['c'].=' f';
+  } else {
+    $this->objects[$this->currentContents]['c'].=' S';
+  }
+}
+
+/**
+* a filled rectangle, note that it is the width and height of the rectangle which are the secondary paramaters, not
+* the coordinates of the upper-right corner
+*/
+function filledRectangle($x1,$y1,$width,$height){
+  $this->objects[$this->currentContents]['c'].="\n".sprintf('%.3f',$x1).' '.sprintf('%.3f',$y1).' '.sprintf('%.3f',$width).' '.sprintf('%.3f',$height).' re f';
+}
+
+/**
+* draw a rectangle, note that it is the width and height of the rectangle which are the secondary paramaters, not
+* the coordinates of the upper-right corner
+*/
+function rectangle($x1,$y1,$width,$height){
+  $this->objects[$this->currentContents]['c'].="\n".sprintf('%.3f',$x1).' '.sprintf('%.3f',$y1).' '.sprintf('%.3f',$width).' '.sprintf('%.3f',$height).' re S';
+}
+
+/**
+* add a new page to the document
+* this also makes the new page the current active object
+*/
+function newPage($insert=0,$id=0,$pos='after'){
+
+  // if there is a state saved, then go up the stack closing them
+  // then on the new page, re-open them with the right setings
+  
+  if ($this->nStateStack){
+    for ($i=$this->nStateStack;$i>=1;$i--){
+      $this->restoreState($i);
+    }
+  }
+
+  $this->numObj++;
+  if ($insert){
+    // the id from the ezPdf class is the od of the contents of the page, not the page object itself
+    // query that object to find the parent
+    $rid = $this->objects[$id]['onPage'];
+    $opt= array('rid'=>$rid,'pos'=>$pos);
+    $this->o_page($this->numObj,'new',$opt);
+  } else {
+    $this->o_page($this->numObj,'new');
+  }
+  // if there is a stack saved, then put that onto the page
+  if ($this->nStateStack){
+    for ($i=1;$i<=$this->nStateStack;$i++){
+      $this->saveState($i);
+    }
+  }  
+  // and if there has been a stroke or fill colour set, then transfer them
+  if ($this->currentColour['r']>=0){
+    $this->setColor($this->currentColour['r'],$this->currentColour['g'],$this->currentColour['b'],1);
+  }
+  if ($this->currentStrokeColour['r']>=0){
+    $this->setStrokeColor($this->currentStrokeColour['r'],$this->currentStrokeColour['g'],$this->currentStrokeColour['b'],1);
+  }
+
+  // if there is a line style set, then put this in too
+  if (strlen($this->currentLineStyle)){
+    $this->objects[$this->currentContents]['c'].="\n".$this->currentLineStyle;
+  }
+
+  // the call to the o_page object set currentContents to the present page, so this can be returned as the page id
+  return $this->currentContents;
+}
+
+/**
+* output the pdf code, streaming it to the browser
+* the relevant headers are set so that hopefully the browser will recognise it
+*/
+function stream($options=''){
+  // setting the options allows the adjustment of the headers
+  // values at the moment are:
+  // 'Content-Disposition'=>'filename'  - sets the filename, though not too sure how well this will 
+  //        work as in my trial the browser seems to use the filename of the php file with .pdf on the end
+  // 'Accept-Ranges'=>1 or 0 - if this is not set to 1, then this header is not included, off by default
+  //    this header seems to have caused some problems despite tha fact that it is supposed to solve
+  //    them, so I am leaving it off by default.
+  // 'compress'=> 1 or 0 - apply content stream compression, this is on (1) by default
+  if (!is_array($options)){
+    $options=array();
+  }
+  if ( isset($options['compress']) && $options['compress']==0){
+    $tmp = $this->output(1);
+  } else {
+    $tmp = $this->output();
+  }
+  header("Content-type: application/pdf");
+  header("Content-Length: ".strlen(ltrim($tmp)));
+  $fileName = (isset($options['Content-Disposition'])?$options['Content-Disposition']:'file.pdf');
+  header("Content-Disposition: inline; filename=".$fileName);
+  if (isset($options['Accept-Ranges']) && $options['Accept-Ranges']==1){
+    header("Accept-Ranges: ".strlen(ltrim($tmp))); 
+  }
+  echo ltrim($tmp);
+}
+
+/**
+* return the height in units of the current font in the given size
+*/
+function getFontHeight($size){
+  if (!$this->numFonts){
+    $this->selectFont('./fonts/Helvetica');
+  }
+  // for the current font, and the given size, what is the height of the font in user units
+  $h = $this->fonts[$this->currentFont]['FontBBox'][3]-$this->fonts[$this->currentFont]['FontBBox'][1];
+  return $size*$h/1000;
+}
+
+/**
+* return the font decender, this will normally return a negative number
+* if you add this number to the baseline, you get the level of the bottom of the font
+* it is in the pdf user units
+*/
+function getFontDecender($size){
+  // note that this will most likely return a negative value
+  if (!$this->numFonts){
+    $this->selectFont('./fonts/Helvetica');
+  }
+  $h = $this->fonts[$this->currentFont]['FontBBox'][1];
+  return $size*$h/1000;
+}
+
+/**
+* filter the text, this is applied to all text just before being inserted into the pdf document
+* it escapes the various things that need to be escaped, and so on
+*
+* @access private
+*/
+function filterText($text){
+  $text = str_replace('\\','\\\\',$text);
+  $text = str_replace('(','\(',$text);
+  $text = str_replace(')','\)',$text);
+  $text = str_replace('&lt;','<',$text);
+  $text = str_replace('&gt;','>',$text);
+  $text = str_replace('&#039;','\'',$text);
+  $text = str_replace('&quot;','"',$text);
+  $text = str_replace('&amp;','&',$text);
+
+  return $text;
+}
+
+/**
+* given a start position and information about how text is to be laid out, calculate where 
+* on the page the text will end
+*
+* @access private
+*/
+function PRVTgetTextPosition($x,$y,$angle,$size,$wa,$text){
+  // given this information return an array containing x and y for the end position as elements 0 and 1
+  $w = $this->getTextWidth($size,$text);
+  // need to adjust for the number of spaces in this text
+  $words = explode(' ',$text);
+  $nspaces=count($words)-1;
+  $w += $wa*$nspaces;
+  $a = deg2rad((float)$angle);
+  return array(cos($a)*$w+$x,-sin($a)*$w+$y);
+}
+
+/**
+* wrapper function for PRVTcheckTextDirective1
+*
+* @access private
+*/
+function PRVTcheckTextDirective(&$text,$i,&$f){
+  $x=0;
+  $y=0;
+  return $this->PRVTcheckTextDirective1($text,$i,$f,0,$x,$y);
+}
+
+/**
+* checks if the text stream contains a control directive
+* if so then makes some changes and returns the number of characters involved in the directive
+* this has been re-worked to include everything neccesary to fins the current writing point, so that
+* the location can be sent to the callback function if required
+* if the directive does not require a font change, then $f should be set to 0
+*
+* @access private
+*/
+function PRVTcheckTextDirective1(&$text,$i,&$f,$final,&$x,&$y,$size=0,$angle=0,$wordSpaceAdjust=0){
+  $directive = 0;
+  $j=$i;
+  if ($text[$j]=='<'){
+    $j++;
+    switch($text[$j]){
+      case '/':
+        $j++;
+        if (strlen($text) <= $j){
+          return $directive;
+        }
+        switch($text[$j]){
+          case 'b':
+          case 'i':
+            $j++;
+            if ($text[$j]=='>'){
+              $p = strrpos($this->currentTextState,$text[$j-1]);
+              if ($p !== false){
+                // then there is one to remove
+                $this->currentTextState = substr($this->currentTextState,0,$p).substr($this->currentTextState,$p+1);
+              }
+              $directive=$j-$i+1;
+            }
+            break;
+          case 'c':
+            // this this might be a callback function
+            $j++;
+            $k = strpos($text,'>',$j);
+            if ($k!==false && $text[$j]==':'){
+              // then this will be treated as a callback directive
+              $directive = $k-$i+1;
+              $f=0;
+              // split the remainder on colons to get the function name and the paramater
+              $tmp = substr($text,$j+1,$k-$j-1);
+              $b1 = strpos($tmp,':');
+              if ($b1!==false){
+                $func = substr($tmp,0,$b1);
+                $parm = substr($tmp,$b1+1);
+              } else {
+                $func=$tmp;
+                $parm='';
+              }
+              if (!isset($func) || !strlen(trim($func))){
+                $directive=0;
+              } else {
+                // only call the function if this is the final call
+                if ($final){
+                  // need to assess the text position, calculate the text width to this point
+                  // can use getTextWidth to find the text width I think
+                  $tmp = $this->PRVTgetTextPosition($x,$y,$angle,$size,$wordSpaceAdjust,substr($text,0,$i));
+                  $info = array('x'=>$tmp[0],'y'=>$tmp[1],'angle'=>$angle,'status'=>'end','p'=>$parm,'nCallback'=>$this->nCallback);
+                  $x=$tmp[0];
+                  $y=$tmp[1];
+                  $ret = $this->$func($info);
+                  if (is_array($ret)){
+                    // then the return from the callback function could set the position, to start with, later will do font colour, and font
+                    foreach($ret as $rk=>$rv){
+                      switch($rk){
+                        case 'x':
+                        case 'y':
+                          $$rk=$rv;
+                          break;
+                      }
+                    }
+                  }
+                  // also remove from to the stack
+                  // for simplicity, just take from the end, fix this another day
+                  $this->nCallback--;
+                  if ($this->nCallback<0){
+                    $this->nCallBack=0;
+                  }
+                }
+              }
+            }
+            break;
+        }
+        break;
+      case 'b':
+      case 'i':
+        $j++;
+        if ($text[$j]=='>'){
+          $this->currentTextState.=$text[$j-1];
+          $directive=$j-$i+1;
+        }
+        break;
+      case 'C':
+        $noClose=1;
+      case 'c':
+        // this this might be a callback function
+        $j++;
+        $k = strpos($text,'>',$j);
+        if ($k!==false && $text[$j]==':'){
+          // then this will be treated as a callback directive
+          $directive = $k-$i+1;
+          $f=0;
+          // split the remainder on colons to get the function name and the paramater
+//          $bits = explode(':',substr($text,$j+1,$k-$j-1));
+          $tmp = substr($text,$j+1,$k-$j-1);
+          $b1 = strpos($tmp,':');
+          if ($b1!==false){
+            $func = substr($tmp,0,$b1);
+            $parm = substr($tmp,$b1+1);
+          } else {
+            $func=$tmp;
+            $parm='';
+          }
+          if (!isset($func) || !strlen(trim($func))){
+            $directive=0;
+          } else {
+            // only call the function if this is the final call, ie, the one actually doing printing, not measurement
+            if ($final){
+              // need to assess the text position, calculate the text width to this point
+              // can use getTextWidth to find the text width I think
+              // also add the text height and decender
+              $tmp = $this->PRVTgetTextPosition($x,$y,$angle,$size,$wordSpaceAdjust,substr($text,0,$i));
+              $info = array('x'=>$tmp[0],'y'=>$tmp[1],'angle'=>$angle,'status'=>'start','p'=>$parm,'f'=>$func,'height'=>$this->getFontHeight($size),'decender'=>$this->getFontDecender($size));
+              $x=$tmp[0];
+              $y=$tmp[1];
+              if (!isset($noClose) || !$noClose){
+                // only add to the stack if this is a small 'c', therefore is a start-stop pair
+                $this->nCallback++;
+                $info['nCallback']=$this->nCallback;
+                $this->callback[$this->nCallback]=$info;
+              }
+              $ret = $this->$func($info);
+              if (is_array($ret)){
+                // then the return from the callback function could set the position, to start with, later will do font colour, and font
+                foreach($ret as $rk=>$rv){
+                  switch($rk){
+                    case 'x':
+                    case 'y':
+                      $$rk=$rv;
+                      break;
+                  }
+                }
+              }
+            }
+          }
+        }
+        break;
+    }
+  } 
+  return $directive;
+}
+
+/**
+* add text to the document, at a specified location, size and angle on the page
+*/
+function addText($x,$y,$size,$text,$angle=0,$wordSpaceAdjust=0){
+  if (!$this->numFonts){$this->selectFont('./fonts/Helvetica');}
+
+  // if there are any open callbacks, then they should be called, to show the start of the line
+  if ($this->nCallback>0){
+    for ($i=$this->nCallback;$i>0;$i--){
+      // call each function
+      $info = array('x'=>$x,'y'=>$y,'angle'=>$angle,'status'=>'sol','p'=>$this->callback[$i]['p'],'nCallback'=>$this->callback[$i]['nCallback'],'height'=>$this->callback[$i]['height'],'decender'=>$this->callback[$i]['decender']);
+      $func = $this->callback[$i]['f'];
+      $this->$func($info);
+    }
+  }
+  if ($angle==0){
+    $this->objects[$this->currentContents]['c'].="\n".'BT '.sprintf('%.3f',$x).' '.sprintf('%.3f',$y).' Td';
+  } else {
+    $a = deg2rad((float)$angle);
+    $tmp = "\n".'BT ';
+    $tmp .= sprintf('%.3f',cos($a)).' '.sprintf('%.3f',(-1.0*sin($a))).' '.sprintf('%.3f',sin($a)).' '.sprintf('%.3f',cos($a)).' ';
+    $tmp .= sprintf('%.3f',$x).' '.sprintf('%.3f',$y).' Tm';
+    $this->objects[$this->currentContents]['c'] .= $tmp;
+  }
+  if ($wordSpaceAdjust!=0 || $wordSpaceAdjust != $this->wordSpaceAdjust){
+    $this->wordSpaceAdjust=$wordSpaceAdjust;
+    $this->objects[$this->currentContents]['c'].=' '.sprintf('%.3f',$wordSpaceAdjust).' Tw';
+  }
+  $len=strlen($text);
+  $start=0;
+  for ($i=0;$i<$len;$i++){
+    $f=1;
+    $directive = $this->PRVTcheckTextDirective($text,$i,$f);
+    if ($directive){
+      // then we should write what we need to
+      if ($i>$start){
+        $part = substr($text,$start,$i-$start);
+        $this->objects[$this->currentContents]['c'].=' /F'.$this->currentFontNum.' '.sprintf('%.1f',$size).' Tf ';
+        $this->objects[$this->currentContents]['c'].=' ('.$this->filterText($part).') Tj';
+      }
+      if ($f){
+        // then there was nothing drastic done here, restore the contents
+        $this->setCurrentFont();
+      } else {
+        $this->objects[$this->currentContents]['c'] .= ' ET';
+        $f=1;
+        $xp=$x;
+        $yp=$y;
+        $directive = $this->PRVTcheckTextDirective1($text,$i,$f,1,$xp,$yp,$size,$angle,$wordSpaceAdjust);
+        
+        // restart the text object
+          if ($angle==0){
+            $this->objects[$this->currentContents]['c'].="\n".'BT '.sprintf('%.3f',$xp).' '.sprintf('%.3f',$yp).' Td';
+          } else {
+            $a = deg2rad((float)$angle);
+            $tmp = "\n".'BT ';
+            $tmp .= sprintf('%.3f',cos($a)).' '.sprintf('%.3f',(-1.0*sin($a))).' '.sprintf('%.3f',sin($a)).' '.sprintf('%.3f',cos($a)).' ';
+            $tmp .= sprintf('%.3f',$xp).' '.sprintf('%.3f',$yp).' Tm';
+            $this->objects[$this->currentContents]['c'] .= $tmp;
+          }
+          if ($wordSpaceAdjust!=0 || $wordSpaceAdjust != $this->wordSpaceAdjust){
+            $this->wordSpaceAdjust=$wordSpaceAdjust;
+            $this->objects[$this->currentContents]['c'].=' '.sprintf('%.3f',$wordSpaceAdjust).' Tw';
+          }
+      }
+      // and move the writing point to the next piece of text
+      $i=$i+$directive-1;
+      $start=$i+1;
+    }
+    
+  }
+  if ($start<$len){
+    $part = substr($text,$start);
+    $this->objects[$this->currentContents]['c'].=' /F'.$this->currentFontNum.' '.sprintf('%.1f',$size).' Tf ';
+    $this->objects[$this->currentContents]['c'].=' ('.$this->filterText($part).') Tj';
+  }
+  $this->objects[$this->currentContents]['c'].=' ET';
+
+  // if there are any open callbacks, then they should be called, to show the end of the line
+  if ($this->nCallback>0){
+    for ($i=$this->nCallback;$i>0;$i--){
+      // call each function
+      $tmp = $this->PRVTgetTextPosition($x,$y,$angle,$size,$wordSpaceAdjust,$text);
+      $info = array('x'=>$tmp[0],'y'=>$tmp[1],'angle'=>$angle,'status'=>'eol','p'=>$this->callback[$i]['p'],'nCallback'=>$this->callback[$i]['nCallback'],'height'=>$this->callback[$i]['height'],'decender'=>$this->callback[$i]['decender']);
+      $func = $this->callback[$i]['f'];
+      $this->$func($info);
+    }
+  }
+
+}
+
+/**
+* calculate how wide a given text string will be on a page, at a given size.
+* this can be called externally, but is alse used by the other class functions
+*/
+function getTextWidth($size,$text){
+  // this function should not change any of the settings, though it will need to
+  // track any directives which change during calculation, so copy them at the start
+  // and put them back at the end.
+  $store_currentTextState = $this->currentTextState;
+
+  if (!$this->numFonts){
+    $this->selectFont('./fonts/Helvetica');
+  }
+
+  // converts a number or a float to a string so it can get the width
+  $text = "$text";
+
+  // hmm, this is where it all starts to get tricky - use the font information to
+  // calculate the width of each character, add them up and convert to user units
+  $w=0;
+  $len=strlen($text);
+  $cf = $this->currentFont;
+  for ($i=0;$i<$len;$i++){
+    $f=1;
+    $directive = $this->PRVTcheckTextDirective($text,$i,$f);
+    if ($directive){
+      if ($f){
+        $this->setCurrentFont();
+        $cf = $this->currentFont;
+      }
+      $i=$i+$directive-1;
+    } else {
+      $char=ord($text[$i]);
+      if (isset($this->fonts[$cf]['differences'][$char])){
+        // then this character is being replaced by another
+        $name = $this->fonts[$cf]['differences'][$char];
+        if (isset($this->fonts[$cf]['C'][$name]['WX'])){
+          $w+=$this->fonts[$cf]['C'][$name]['WX'];
+        }
+      } else if (isset($this->fonts[$cf]['C'][$char]['WX'])){
+        $w+=$this->fonts[$cf]['C'][$char]['WX'];
+      }
+    }
+  }
+  
+  $this->currentTextState = $store_currentTextState;
+  $this->setCurrentFont();
+
+  return $w*$size/1000;
+}
+
+/**
+* do a part of the calculation for sorting out the justification of the text
+*
+* @access private
+*/
+function PRVTadjustWrapText($text,$actual,$width,&$x,&$adjust,$justification){
+  switch ($justification){
+    case 'left':
+      return;
+      break;
+    case 'right':
+      $x+=$width-$actual;
+      break;
+    case 'center':
+    case 'centre':
+      $x+=($width-$actual)/2;
+      break;
+    case 'full':
+      // count the number of words
+      $words = explode(' ',$text);
+      $nspaces=count($words)-1;
+      if ($nspaces>0){
+        $adjust = ($width-$actual)/$nspaces;
+      } else {
+        $adjust=0;
+      }
+      break;
+  }
+}
+
+/**
+* add text to the page, but ensure that it fits within a certain width
+* if it does not fit then put in as much as possible, splitting at word boundaries
+* and return the remainder.
+* justification and angle can also be specified for the text
+*/
+function addTextWrap($x,$y,$width,$size,$text,$justification='left',$angle=0,$test=0){
+  // this will display the text, and if it goes beyond the width $width, will backtrack to the 
+  // previous space or hyphen, and return the remainder of the text.
+
+  // $justification can be set to 'left','right','center','centre','full'
+
+  // need to store the initial text state, as this will change during the width calculation
+  // but will need to be re-set before printing, so that the chars work out right
+  $store_currentTextState = $this->currentTextState;
+
+  if (!$this->numFonts){$this->selectFont('./fonts/Helvetica');}
+  if ($width<=0){
+    // error, pretend it printed ok, otherwise risking a loop
+    return '';
+  }
+  $w=0;
+  $break=0;
+  $breakWidth=0;
+  $len=strlen($text);
+  $cf = $this->currentFont;
+  $tw = $width/$size*1000;
+  for ($i=0;$i<$len;$i++){
+    $f=1;
+    $directive = $this->PRVTcheckTextDirective($text,$i,$f);
+    if ($directive){
+      if ($f){
+        $this->setCurrentFont();
+        $cf = $this->currentFont;
+      }
+      $i=$i+$directive-1;
+    } else {
+      $cOrd = ord($text[$i]);
+      if (isset($this->fonts[$cf]['differences'][$cOrd])){
+        // then this character is being replaced by another
+        $cOrd2 = $this->fonts[$cf]['differences'][$cOrd];
+      } else {
+        $cOrd2 = $cOrd;
+      }
+  
+      if (isset($this->fonts[$cf]['C'][$cOrd2]['WX'])){
+        $w+=$this->fonts[$cf]['C'][$cOrd2]['WX'];
+      }
+      if ($w>$tw){
+        // then we need to truncate this line
+        if ($break>0){
+          // then we have somewhere that we can split :)
+          if ($text[$break]==' '){
+            $tmp = substr($text,0,$break);
+          } else {
+            $tmp = substr($text,0,$break+1);
+          }
+          $adjust=0;
+          $this->PRVTadjustWrapText($tmp,$breakWidth,$width,$x,$adjust,$justification);
+
+          // reset the text state
+          $this->currentTextState = $store_currentTextState;
+          $this->setCurrentFont();
+          if (!$test){
+            $this->addText($x,$y,$size,$tmp,$angle,$adjust);
+          }
+          return substr($text,$break+1);
+        } else {
+          // just split before the current character
+          $tmp = substr($text,0,$i);
+          $adjust=0;
+          $ctmp=ord($text[$i]);
+          if (isset($this->fonts[$cf]['differences'][$ctmp])){
+            $ctmp=$this->fonts[$cf]['differences'][$ctmp];
+          }
+          $tmpw=($w-$this->fonts[$cf]['C'][$ctmp]['WX'])*$size/1000;
+          $this->PRVTadjustWrapText($tmp,$tmpw,$width,$x,$adjust,$justification);
+          // reset the text state
+          $this->currentTextState = $store_currentTextState;
+          $this->setCurrentFont();
+          if (!$test){
+            $this->addText($x,$y,$size,$tmp,$angle,$adjust);
+          }
+          return substr($text,$i);
+        }
+      }
+      if ($text[$i]=='-'){
+        $break=$i;
+        $breakWidth = $w*$size/1000;
+      }
+      if ($text[$i]==' '){
+        $break=$i;
+        $ctmp=ord($text[$i]);
+        if (isset($this->fonts[$cf]['differences'][$ctmp])){
+          $ctmp=$this->fonts[$cf]['differences'][$ctmp];
+        }
+        $breakWidth = ($w-$this->fonts[$cf]['C'][$ctmp]['WX'])*$size/1000;
+      }
+    }
+  }
+  // then there was no need to break this line
+  if ($justification=='full'){
+    $justification='left';
+  }
+  $adjust=0;
+  $tmpw=$w*$size/1000;
+  $this->PRVTadjustWrapText($text,$tmpw,$width,$x,$adjust,$justification);
+  // reset the text state
+  $this->currentTextState = $store_currentTextState;
+  $this->setCurrentFont();
+  if (!$test){
+    $this->addText($x,$y,$size,$text,$angle,$adjust,$angle);
+  }
+  return '';
+}
+
+/**
+* this will be called at a new page to return the state to what it was on the 
+* end of the previous page, before the stack was closed down
+* This is to get around not being able to have open 'q' across pages
+*
+*/
+function saveState($pageEnd=0){
+  if ($pageEnd){
+    // this will be called at a new page to return the state to what it was on the 
+    // end of the previous page, before the stack was closed down
+    // This is to get around not being able to have open 'q' across pages
+    $opt = $this->stateStack[$pageEnd]; // ok to use this as stack starts numbering at 1
+    $this->setColor($opt['col']['r'],$opt['col']['g'],$opt['col']['b'],1);
+    $this->setStrokeColor($opt['str']['r'],$opt['str']['g'],$opt['str']['b'],1);
+    $this->objects[$this->currentContents]['c'].="\n".$opt['lin'];
+//    $this->currentLineStyle = $opt['lin'];
+  } else {
+    $this->nStateStack++;
+    $this->stateStack[$this->nStateStack]=array(
+      'col'=>$this->currentColour
+     ,'str'=>$this->currentStrokeColour
+     ,'lin'=>$this->currentLineStyle
+    );
+  }
+  $this->objects[$this->currentContents]['c'].="\nq";
+}
+
+/**
+* restore a previously saved state
+*/
+function restoreState($pageEnd=0){
+  if (!$pageEnd){
+    $n = $this->nStateStack;
+    $this->currentColour = $this->stateStack[$n]['col'];
+    $this->currentStrokeColour = $this->stateStack[$n]['str'];
+    $this->objects[$this->currentContents]['c'].="\n".$this->stateStack[$n]['lin'];
+    $this->currentLineStyle = $this->stateStack[$n]['lin'];
+    unset($this->stateStack[$n]);
+    $this->nStateStack--;
+  }
+  $this->objects[$this->currentContents]['c'].="\nQ";
+}
+
+/**
+* make a loose object, the output will go into this object, until it is closed, then will revert to
+* the current one.
+* this object will not appear until it is included within a page.
+* the function will return the object number
+*/
+function openObject(){
+  $this->nStack++;
+  $this->stack[$this->nStack]=array('c'=>$this->currentContents,'p'=>$this->currentPage);
+  // add a new object of the content type, to hold the data flow
+  $this->numObj++;
+  $this->o_contents($this->numObj,'new');
+  $this->currentContents=$this->numObj;
+  $this->looseObjects[$this->numObj]=1;
+  
+  return $this->numObj;
+}
+
+/**
+* open an existing object for editing
+*/
+function reopenObject($id){
+   $this->nStack++;
+   $this->stack[$this->nStack]=array('c'=>$this->currentContents,'p'=>$this->currentPage);
+   $this->currentContents=$id;
+   // also if this object is the primary contents for a page, then set the current page to its parent
+   if (isset($this->objects[$id]['onPage'])){
+     $this->currentPage = $this->objects[$id]['onPage'];
+   }
+}
+
+/**
+* close an object
+*/
+function closeObject(){
+  // close the object, as long as there was one open in the first place, which will be indicated by
+  // an objectId on the stack.
+  if ($this->nStack>0){
+    $this->currentContents=$this->stack[$this->nStack]['c'];
+    $this->currentPage=$this->stack[$this->nStack]['p'];
+    $this->nStack--;
+    // easier to probably not worry about removing the old entries, they will be overwritten
+    // if there are new ones.
+  }
+}
+
+/**
+* stop an object from appearing on pages from this point on
+*/
+function stopObject($id){
+  // if an object has been appearing on pages up to now, then stop it, this page will
+  // be the last one that could contian it.
+  if (isset($this->addLooseObjects[$id])){
+    $this->addLooseObjects[$id]='';
+  }
+}
+
+/**
+* after an object has been created, it wil only show if it has been added, using this function.
+*/
+function addObject($id,$options='add'){
+  // add the specified object to the page
+  if (isset($this->looseObjects[$id]) && $this->currentContents!=$id){
+    // then it is a valid object, and it is not being added to itself
+    switch($options){
+      case 'all':
+        // then this object is to be added to this page (done in the next block) and 
+        // all future new pages. 
+        $this->addLooseObjects[$id]='all';
+      case 'add':
+        if (isset($this->objects[$this->currentContents]['onPage'])){
+          // then the destination contents is the primary for the page
+          // (though this object is actually added to that page)
+          $this->o_page($this->objects[$this->currentContents]['onPage'],'content',$id);
+        }
+        break;
+      case 'even':
+        $this->addLooseObjects[$id]='even';
+        $pageObjectId=$this->objects[$this->currentContents]['onPage'];
+        if ($this->objects[$pageObjectId]['info']['pageNum']%2==0){
+          $this->addObject($id); // hacky huh :)
+        }
+        break;
+      case 'odd':
+        $this->addLooseObjects[$id]='odd';
+        $pageObjectId=$this->objects[$this->currentContents]['onPage'];
+        if ($this->objects[$pageObjectId]['info']['pageNum']%2==1){
+          $this->addObject($id); // hacky huh :)
+        }
+        break;
+      case 'next':
+        $this->addLooseObjects[$id]='all';
+        break;
+      case 'nexteven':
+        $this->addLooseObjects[$id]='even';
+        break;
+      case 'nextodd':
+        $this->addLooseObjects[$id]='odd';
+        break;
+    }
+  }
+}
+
+/**
+* add content to the documents info object
+*/
+function addInfo($label,$value=0){
+  // this will only work if the label is one of the valid ones.
+  // modify this so that arrays can be passed as well.
+  // if $label is an array then assume that it is key=>value pairs
+  // else assume that they are both scalar, anything else will probably error
+  if (is_array($label)){
+    foreach ($label as $l=>$v){
+      $this->o_info($this->infoObject,$l,$v);
+    }
+  } else {
+    $this->o_info($this->infoObject,$label,$value);
+  }
+}
+
+/**
+* set the viewer preferences of the document, it is up to the browser to obey these.
+*/
+function setPreferences($label,$value=0){
+  // this will only work if the label is one of the valid ones.
+  if (is_array($label)){
+    foreach ($label as $l=>$v){
+      $this->o_catalog($this->catalogId,'viewerPreferences',array($l=>$v));
+    }
+  } else {
+    $this->o_catalog($this->catalogId,'viewerPreferences',array($label=>$value));
+  }
+}
+
+/**
+* extract an integer from a position in a byte stream
+*
+* @access private
+*/
+function PRVT_getBytes(&$data,$pos,$num){
+  // return the integer represented by $num bytes from $pos within $data
+  $ret=0;
+  for ($i=0;$i<$num;$i++){
+    $ret=$ret*256;
+    $ret+=ord($data[$pos+$i]);
+  }
+  return $ret;
+}
+
+/**
+* add a PNG image into the document, from a file
+* this should work with remote files
+*/
+function addPngFromFile($file,$x,$y,$w=0,$h=0){
+  // read in a png file, interpret it, then add to the system
+  $error=0;
+  $tmp = get_magic_quotes_runtime();
+  set_magic_quotes_runtime(0);
+  $fp = @fopen($file,'rb');
+  if ($fp){
+    $data='';
+    while(!feof($fp)){
+      $data .= fread($fp,1024);
+    }
+    fclose($fp);
+  } else {
+    $error = 1;
+    $errormsg = 'trouble opening file: '.$file;
+  }
+  set_magic_quotes_runtime($tmp);
+  
+  if (!$error){
+    $header = chr(137).chr(80).chr(78).chr(71).chr(13).chr(10).chr(26).chr(10);
+    if (substr($data,0,8)!=$header){
+      $error=1;
+      $errormsg = 'this file does not have a valid header';
+    }
+  }
+
+  if (!$error){
+    // set pointer
+    $p = 8;
+    $len = strlen($data);
+    // cycle through the file, identifying chunks
+    $haveHeader=0;
+    $info=array();
+    $idata='';
+    $pdata='';
+    while ($p<$len){
+      $chunkLen = $this->PRVT_getBytes($data,$p,4);
+      $chunkType = substr($data,$p+4,4);
+//      echo $chunkType.' - '.$chunkLen.'<br>';
+    
+      switch($chunkType){
+        case 'IHDR':
+          // this is where all the file information comes from
+          $info['width']=$this->PRVT_getBytes($data,$p+8,4);
+          $info['height']=$this->PRVT_getBytes($data,$p+12,4);
+          $info['bitDepth']=ord($data[$p+16]);
+          $info['colorType']=ord($data[$p+17]);
+          $info['compressionMethod']=ord($data[$p+18]);
+          $info['filterMethod']=ord($data[$p+19]);
+          $info['interlaceMethod']=ord($data[$p+20]);
+//print_r($info);
+          $haveHeader=1;
+          if ($info['compressionMethod']!=0){
+            $error=1;
+            $errormsg = 'unsupported compression method';
+          }
+          if ($info['filterMethod']!=0){
+            $error=1;
+            $errormsg = 'unsupported filter method';
+          }
+          break;
+        case 'PLTE':
+          $pdata.=substr($data,$p+8,$chunkLen);
+          break;
+        case 'IDAT':
+          $idata.=substr($data,$p+8,$chunkLen);
+          break;
+        case 'tRNS': 
+          //this chunk can only occur once and it must occur after the PLTE chunk and before IDAT chunk 
+          //print "tRNS found, color type = ".$info['colorType']."<BR>"; 
+          $transparency = array();
+          if ($info['colorType'] == 3) { // indexed color, rbg 
+          /* corresponding to entries in the plte chunk 
+          Alpha for palette index 0: 1 byte 
+          Alpha for palette index 1: 1 byte 
+          ...etc... 
+          */ 
+            // there will be one entry for each palette entry. up until the last non-opaque entry.
+            // set up an array, stretching over all palette entries which will be o (opaque) or 1 (transparent)
+            $transparency['type']='indexed';
+            $numPalette = strlen($pdata)/3;
+            $trans=0;
+            for ($i=$chunkLen;$i>=0;$i--){
+              if (ord($data[$p+8+$i])==0){
+                $trans=$i;
+              }
+            }
+            $transparency['data'] = $trans;
+            
+          } elseif($info['colorType'] == 0) { // grayscale 
+          /* corresponding to entries in the plte chunk 
+          Gray: 2 bytes, range 0 .. (2^bitdepth)-1 
+          */ 
+//            $transparency['grayscale']=$this->PRVT_getBytes($data,$p+8,2); // g = grayscale 
+            $transparency['type']='indexed';
+            $transparency['data'] = ord($data[$p+8+1]);
+          
+          } elseif($info['colorType'] == 2) { // truecolor 
+          /* corresponding to entries in the plte chunk 
+          Red: 2 bytes, range 0 .. (2^bitdepth)-1 
+          Green: 2 bytes, range 0 .. (2^bitdepth)-1 
+          Blue: 2 bytes, range 0 .. (2^bitdepth)-1 
+          */ 
+            $transparency['r']=$this->PRVT_getBytes($data,$p+8,2); // r from truecolor 
+            $transparency['g']=$this->PRVT_getBytes($data,$p+10,2); // g from truecolor 
+            $transparency['b']=$this->PRVT_getBytes($data,$p+12,2); // b from truecolor 
+          
+          } else { 
+          //unsupported transparency type 
+          } 
+          // KS End new code 
+          break; 
+        default:
+          break;
+      }
+    
+      $p += $chunkLen+12;
+    }
+    
+    if(!$haveHeader){
+      $error = 1;
+      $errormsg = 'information header is missing';
+    }
+    if (isset($info['interlaceMethod']) && $info['interlaceMethod']){
+      $error = 1;
+      $errormsg = 'There appears to be no support for interlaced images in pdf.';
+    }
+  }
+
+  if (!$error && $info['bitDepth'] > 8){
+    $error = 1;
+    $errormsg = 'only bit depth of 8 or less is supported';
+  }
+
+  if (!$error){
+    if ($info['colorType']!=2 && $info['colorType']!=0 && $info['colorType']!=3){
+      $error = 1;
+      $errormsg = 'transparancey alpha channel not supported, transparency only supported for palette images.';
+    } else {
+      switch ($info['colorType']){
+        case 3:
+          $color = 'DeviceRGB';
+          $ncolor=1;
+          break;
+        case 2:
+          $color = 'DeviceRGB';
+          $ncolor=3;
+          break;
+        case 0:
+          $color = 'DeviceGray';
+          $ncolor=1;
+          break;
+      }
+    }
+  }
+  if ($error){
+    $this->addMessage('PNG error - ('.$file.') '.$errormsg);
+    return;
+  }
+  if ($w==0){
+    $w=$h/$info['height']*$info['width'];
+  }
+  if ($h==0){
+    $h=$w*$info['height']/$info['width'];
+  }
+//print_r($info);
+  // so this image is ok... add it in.
+  $this->numImages++;
+  $im=$this->numImages;
+  $label='I'.$im;
+  $this->numObj++;
+//  $this->o_image($this->numObj,'new',array('label'=>$label,'data'=>$idata,'iw'=>$w,'ih'=>$h,'type'=>'png','ic'=>$info['width']));
+  $options = array('label'=>$label,'data'=>$idata,'bitsPerComponent'=>$info['bitDepth'],'pdata'=>$pdata
+                                      ,'iw'=>$info['width'],'ih'=>$info['height'],'type'=>'png','color'=>$color,'ncolor'=>$ncolor);
+  if (isset($transparency)){
+    $options['transparency']=$transparency;
+  }
+  $this->o_image($this->numObj,'new',$options);
+
+  $this->objects[$this->currentContents]['c'].="\nq";
+  $this->objects[$this->currentContents]['c'].="\n".sprintf('%.3f',$w)." 0 0 ".sprintf('%.3f',$h)." ".sprintf('%.3f',$x)." ".sprintf('%.3f',$y)." cm";
+  $this->objects[$this->currentContents]['c'].="\n/".$label.' Do';
+  $this->objects[$this->currentContents]['c'].="\nQ";
+}
+
+/**
+* add a JPEG image into the document, from a file
+*/
+function addJpegFromFile($img,$x,$y,$w=0,$h=0){
+  // attempt to add a jpeg image straight from a file, using no GD commands
+  // note that this function is unable to operate on a remote file.
+
+  if (!file_exists($img)){
+    return;
+  }
+
+  $tmp=getimagesize($img);
+  $imageWidth=$tmp[0];
+  $imageHeight=$tmp[1];
+
+  if (isset($tmp['channels'])){
+    $channels = $tmp['channels'];
+  } else {
+    $channels = 3;
+  }
+
+  if ($w<=0 && $h<=0){
+    $w=$imageWidth;
+  }
+  if ($w==0){
+    $w=$h/$imageHeight*$imageWidth;
+  }
+  if ($h==0){
+    $h=$w*$imageHeight/$imageWidth;
+  }
+
+  $fp=fopen($img,'rb');
+
+  $tmp = get_magic_quotes_runtime();
+  set_magic_quotes_runtime(0);
+  $data = fread($fp,filesize($img));
+  set_magic_quotes_runtime($tmp);
+  
+  fclose($fp);
+
+  $this->addJpegImage_common($data,$x,$y,$w,$h,$imageWidth,$imageHeight,$channels);
+}
+
+/**
+* add an image into the document, from a GD object
+* this function is not all that reliable, and I would probably encourage people to use 
+* the file based functions
+*/
+function addImage(&$img,$x,$y,$w=0,$h=0,$quality=75){
+  // add a new image into the current location, as an external object
+  // add the image at $x,$y, and with width and height as defined by $w & $h
+  
+  // note that this will only work with full colour images and makes them jpg images for display
+  // later versions could present lossless image formats if there is interest.
+  
+  // there seems to be some problem here in that images that have quality set above 75 do not appear
+  // not too sure why this is, but in the meantime I have restricted this to 75.  
+  if ($quality>75){
+    $quality=75;
+  }
+
+  // if the width or height are set to zero, then set the other one based on keeping the image
+  // height/width ratio the same, if they are both zero, then give up :)
+  $imageWidth=imagesx($img);
+  $imageHeight=imagesy($img);
+  
+  if ($w<=0 && $h<=0){
+    return;
+  }
+  if ($w==0){
+    $w=$h/$imageHeight*$imageWidth;
+  }
+  if ($h==0){
+    $h=$w*$imageHeight/$imageWidth;
+  }
+  
+  // gotta get the data out of the img..
+
+  // so I write to a temp file, and then read it back.. soo ugly, my apologies.
+  $tmpDir='/tmp';
+  $tmpName=tempnam($tmpDir,'img');
+  imagejpeg($img,$tmpName,$quality);
+  $fp=fopen($tmpName,'rb');
+
+  $tmp = get_magic_quotes_runtime();
+  set_magic_quotes_runtime(0);
+  $fp = @fopen($tmpName,'rb');
+  if ($fp){
+    $data='';
+    while(!feof($fp)){
+      $data .= fread($fp,1024);
+    }
+    fclose($fp);
+  } else {
+    $error = 1;
+    $errormsg = 'trouble opening file';
+  }
+//  $data = fread($fp,filesize($tmpName));
+  set_magic_quotes_runtime($tmp);
+//  fclose($fp);
+  unlink($tmpName);
+  $this->addJpegImage_common($data,$x,$y,$w,$h,$imageWidth,$imageHeight);
+}
+
+/**
+* common code used by the two JPEG adding functions
+*
+* @access private
+*/
+function addJpegImage_common(&$data,$x,$y,$w=0,$h=0,$imageWidth,$imageHeight,$channels=3){
+  // note that this function is not to be called externally
+  // it is just the common code between the GD and the file options
+  $this->numImages++;
+  $im=$this->numImages;
+  $label='I'.$im;
+  $this->numObj++;
+  $this->o_image($this->numObj,'new',array('label'=>$label,'data'=>$data,'iw'=>$imageWidth,'ih'=>$imageHeight,'channels'=>$channels));
+
+  $this->objects[$this->currentContents]['c'].="\nq";
+  $this->objects[$this->currentContents]['c'].="\n".sprintf('%.3f',$w)." 0 0 ".sprintf('%.3f',$h)." ".sprintf('%.3f',$x)." ".sprintf('%.3f',$y)." cm";
+  $this->objects[$this->currentContents]['c'].="\n/".$label.' Do';
+  $this->objects[$this->currentContents]['c'].="\nQ";
+}
+
+/**
+* specify where the document should open when it first starts
+*/
+function openHere($style,$a=0,$b=0,$c=0){
+  // this function will open the document at a specified page, in a specified style
+  // the values for style, and the required paramters are:
+  // 'XYZ'  left, top, zoom
+  // 'Fit'
+  // 'FitH' top
+  // 'FitV' left
+  // 'FitR' left,bottom,right
+  // 'FitB'
+  // 'FitBH' top
+  // 'FitBV' left
+  $this->numObj++;
+  $this->o_destination($this->numObj,'new',array('page'=>$this->currentPage,'type'=>$style,'p1'=>$a,'p2'=>$b,'p3'=>$c));
+  $id = $this->catalogId;
+  $this->o_catalog($id,'openHere',$this->numObj);
+}
+
+/**
+* create a labelled destination within the document
+*/
+function addDestination($label,$style,$a=0,$b=0,$c=0){
+  // associates the given label with the destination, it is done this way so that a destination can be specified after
+  // it has been linked to
+  // styles are the same as the 'openHere' function
+  $this->numObj++;
+  $this->o_destination($this->numObj,'new',array('page'=>$this->currentPage,'type'=>$style,'p1'=>$a,'p2'=>$b,'p3'=>$c));
+  $id = $this->numObj;
+  // store the label->idf relationship, note that this means that labels can be used only once
+  $this->destinations["$label"]=$id;
+}
+
+/**
+* define font families, this is used to initialize the font families for the default fonts
+* and for the user to add new ones for their fonts. The default bahavious can be overridden should
+* that be desired.
+*/
+function setFontFamily($family,$options=''){
+  if (!is_array($options)){
+    if ($family=='init'){
+      // set the known family groups
+      // these font families will be used to enable bold and italic markers to be included
+      // within text streams. html forms will be used... <b></b> <i></i>
+      $this->fontFamilies['Helvetica.afm']=array(
+         'b'=>'Helvetica-Bold.afm'
+        ,'i'=>'Helvetica-Oblique.afm'
+        ,'bi'=>'Helvetica-BoldOblique.afm'
+        ,'ib'=>'Helvetica-BoldOblique.afm'
+      );
+      $this->fontFamilies['Courier.afm']=array(
+         'b'=>'Courier-Bold.afm'
+        ,'i'=>'Courier-Oblique.afm'
+        ,'bi'=>'Courier-BoldOblique.afm'
+        ,'ib'=>'Courier-BoldOblique.afm'
+      );
+      $this->fontFamilies['Times-Roman.afm']=array(
+         'b'=>'Times-Bold.afm'
+        ,'i'=>'Times-Italic.afm'
+        ,'bi'=>'Times-BoldItalic.afm'
+        ,'ib'=>'Times-BoldItalic.afm'
+      );
+    }
+  } else {
+    // the user is trying to set a font family
+    // note that this can also be used to set the base ones to something else
+    if (strlen($family)){
+      $this->fontFamilies[$family] = $options;
+    }
+  }
+}
+
+/**
+* used to add messages for use in debugging
+*/
+function addMessage($message){
+  $this->messages.=$message."\n";
+}
+
+/**
+* a few functions which should allow the document to be treated transactionally.
+*/
+function transaction($action){
+  switch ($action){
+    case 'start':
+      // store all the data away into the checkpoint variable
+      $data = get_object_vars($this);
+      $this->checkpoint = $data;
+      unset($data);
+      break;
+    case 'commit':
+      if (is_array($this->checkpoint) && isset($this->checkpoint['checkpoint'])){
+        $tmp = $this->checkpoint['checkpoint'];
+        $this->checkpoint = $tmp;
+        unset($tmp);
+      } else {
+        $this->checkpoint='';
+      }
+      break;
+    case 'rewind':
+      // do not destroy the current checkpoint, but move us back to the state then, so that we can try again
+      if (is_array($this->checkpoint)){
+        // can only abort if were inside a checkpoint
+        $tmp = $this->checkpoint;
+        foreach ($tmp as $k=>$v){
+          if ($k != 'checkpoint'){
+            $this->$k=$v;
+          }
+        }
+        unset($tmp);
+      }
+      break;
+    case 'abort':
+      if (is_array($this->checkpoint)){
+        // can only abort if were inside a checkpoint
+        $tmp = $this->checkpoint;
+        foreach ($tmp as $k=>$v){
+          $this->$k=$v;
+        }
+        unset($tmp);
+      }
+      break;
+  }
+
+}
+
+} // end of class
+
+?>
diff --git a/public_html/judge/cronScript.php b/public_html/judge/cronScript.php
new file mode 100755
index 0000000..f67a607
--- /dev/null
+++ b/public_html/judge/cronScript.php
@@ -0,0 +1,572 @@
+<?
+#
+# Copyright (C) 2005 Steve Overton
+# Copyright (C) 2005 David Crim
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/judge.php
+#
+    include_once("lib/judge.inc");
+#
+# Set up default directories
+$problem_handle['queue_dir'] = "$base_dir/queue/";
+$problem_handle['judged_dir'] = "$base_dir/judged/";
+$problem_handle['data_dir'] = "$base_dir/data/";
+
+#make sure that concurent cron jobs do not run
+$script = $base_dir . "/lockFile.lock";
+//echo "\n$script\n\n";
+$fp = fopen($script, "w+");
+
+if (flock($fp, LOCK_EX+LOCK_NB)){
+
+
+#This needs to be moved to the database - added to contest_config
+#or some other appropriate table, then added to the dbcreate.sql
+#as well as the judge.inc files
+$USE_CHROOT = 1;
+
+# Look for a new submission
+$sql  = "SELECT * ";
+$sql .= "FROM QUEUED_SUBMISSIONS, CONTEST_CONFIG WHERE TS < (START_TS + CONTEST_END_DELAY) ORDER BY TS";
+$submits_result = mysql_query($sql);
+if(!$submits_result){
+    sql_error($sql);
+}
+# If there is a new submission, judge it
+while($submits = mysql_fetch_assoc($submits_result)) {
+    # Set variables from the submission
+    $id = $submits['QUEUE_ID'];
+    $team_id = $submits['TEAM_ID'];
+    $problem_id = $submits['PROBLEM_ID'];
+    $ts = $submits['TS'];
+    $attempt = $submits['ATTEMPT'];
+    $source_file = $submits['SOURCE_FILE'];
+    $submitted_source = $problem_handle['queue_dir'] . $source_file;
+    # Move submission from queue to judged table
+    $judged_id = new_submission($id,$team_id, $problem_id,$ts,$attempt,$source_file);
+
+    # Read in the submitted file and save it to the judged dir
+    $original_source_content = read_entire_file($submitted_source);
+    $judged_source = $problem_handle['judged_dir'] . $source_file;
+    save_file($judged_source,$original_source_content);
+	#unlink($submitted_source);
+
+    $auto_response_number = 0;
+
+    # Get the base and extension of the file name
+    $tmp = explode(".", $source_file);
+    $file_name = $tmp[0];
+    $file_extension = mysql_escape_string($tmp[1]);
+
+    $sql  = "SELECT * ";
+    $sql .= "FROM FILE_EXTENSIONS, LANGUAGE_FILE_EXTENSIONS ";
+    $sql .= "WHERE EXT = '$file_extension' AND FILE_EXTENSIONS.EXT_ID = LANGUAGE_FILE_EXTENSIONS.EXT_ID";
+    $sql_result = mysql_query($sql);
+    if(!$sql_result){
+		sql_error($sql);
+	}
+    # Invalid submission file type
+    if(mysql_num_rows($sql_result) == 0) {
+		$auto_response_number = EFILETYPE;
+		$submission_output = "File name: $source_file";
+		update_submission($judged_id, $auto_response_number, $source_file);
+    }
+    else {
+		$row = mysql_fetch_assoc($sql_result);
+		$lang_id = $row['LANGUAGE_ID'];
+
+		$sql  = "SELECT * ";
+		$sql .= "FROM LANGUAGE ";
+		$sql .= "WHERE LANGUAGE_ID = $lang_id ";
+		$sql_result = mysql_query($sql);
+		$row = mysql_fetch_assoc($sql_result);
+	
+		$lang_name = $row['LANGUAGE_NAME'];
+		$max_cpu_time = $row['MAX_CPU_TIME'];
+		$safe_max_cpu_time = intval(1.1 * $max_cpu_time);
+		$chroot_directory = $row['CHROOT_DIRECTORY'];
+		#make the chroot_directory fully qualified
+		$chroot_directory = $base_dir . "/" . $chroot_directory;
+		$replace_headers = $row['REPLACE_HEADERS'];
+		$check_bad_words = $row['CHECK_BAD_WORDS'];
+		
+		echo "\nlang_id: $lang_id\nlang_name: $lang_name\n";	
+		# The contents of the file in the judged directory
+		$problem_handle['judged_source'] = 
+			read_entire_file($judged_source);
+		$problem_handle['file_name'] = $file_name;
+		$problem_handle['file_extension'] = $file_extension;
+	
+		$submission_output = "";
+
+		# Include the specific language file
+		echo "\nright before lang include: $lang_name\n";
+		echo "\ninclude_once('Lang/$lang_name.inc');\n";
+		include_once("Lang/$lang_name.inc");
+		$init_name = $lang_name . "_init";
+		$init_name(&$problem_handle);
+
+		$use_proc_fs = $problem_handle['use_proc_fs'];
+		# Replace headers
+		if($auto_response_number == ENONE && $replace_headers) {
+			$sql  = "SELECT HEADER ";
+			$sql .= "FROM HEADERS ";
+			$sql .= "WHERE LANGUAGE_ID = $lang_id ";
+			$sql_result = mysql_query($sql);
+			if(!$sql_result){
+				sql_error($sql);
+			}
+			$headers = array();
+			while($row = mysql_fetch_row($sql_result)) {
+				array_push($headers, $row[0]);
+			}
+			$problem_handle['preprocess']($headers);
+			save_file($judged_source, $problem_handle['judged_source']);
+		}
+		
+		# Check for forbidden words
+		if($auto_response_number == ENONE && $check_bad_words) {
+			$pre_proc_array = $problem_handle['check_forbidden']();
+
+			if (sizeof($pre_proc_array) > 0) {
+			    $sql  = "SELECT WORD ";
+			    $sql .= "FROM FORBIDDEN_WORDS ";
+			    $sql .= "WHERE LANGUAGE_ID = $lang_id ";
+			    $sql_result = mysql_query($sql);
+			    if(!$sql_result) {
+				    sql_error($sql);
+			    }
+
+			    while($row = mysql_fetch_row($sql_result)) {
+				    if(preg_match("/(.*$row[0].*)/",
+					    $pre_proc_array[sizeof($pre_proc_array)-1], 
+					    $context)) {
+					    $auto_response_number = EFORBIDDEN;
+					    $submission_output .= "Found word: $row[0]    ";
+					    $submission_output .= "($context[0])\n";
+				    }
+			    }
+			}
+
+			if($auto_response_number == EFORBIDDEN){
+				update_submission($judged_id, $auto_response_number, $submission_output);
+			}
+		}
+	
+		# Compile
+		if($auto_response_number == ENONE) {
+			$sys_command = $problem_handle['compile']();
+			echo "\n sys 179: $sys_command\n";
+			$tmp = system($sys_command,$result);
+			if($result == 127) {
+				$auto_response_number = EUNKNOWN;
+			}
+			else if($result) {
+				$auto_response_number = ECOMPILE;
+				$submission_output .= 
+					read_entire_file($problem_handle['judged_dir'] . 
+					$problem_handle['file_name'] . ".err");
+				update_submission($judged_id, $auto_response_number, $problem_handle['file_name'] . ".err");
+    			}
+		}
+	
+		# Post_process
+		if($auto_response_number == ENONE) {
+			$sys_command = $problem_handle['post_process']();
+			$tmp = system($sys_command,$result);
+			echo "\n\nsys 197: $sys_command\n\n";
+			if($result == 127) {
+				$auto_response_number = EUNKNOWN;
+			}
+			else if($result) {
+			$auto_response_number = ECOMPILE;
+			$submission_output = "Contents of: " . 
+			$problem_handle['judged_dir'] . 
+			$problem_handle['file_name'] . ".err\n";
+			$submission_output = 
+					read_entire_file($problem_handle['judged_dir'] . 
+					$problem_handle['file_name'] . ".err");
+			}
+		}
+		if($auto_response_number == ENONE) {
+
+		
+			$infiles = glob($problem_handle['data_dir'] . 
+					$problem_id . "*.in");
+			#echo "<br>Number of input files: " . count($infiles);
+			# Execute
+			foreach($infiles as $cur_input) {
+//BUG
+//need to include [-\w] to allow fot hyphens in the input / output files
+				preg_match("/(\w*)\.in/", $cur_input, $tmp);
+				$cur_input = $tmp[0];
+				$problem_name = $tmp[1];
+				echo "\ncur_input: $cur_input\n";
+				$auto_response_number = ENONE;
+			//      the program now runs through all data sets regardless of results
+			//	if($auto_response_number == ENONE 
+			//			|| $auto_response_number == EFORMAT
+			//			|| $auto_response_number == ECORRECT) 
+		
+
+					$problem_handle['output']  = $problem_handle['judged_dir'];
+					$problem_handle['output'] .= $problem_handle['file_name'];
+					$problem_handle['output'] .= "_";
+					$problem_handle['output'] .= $problem_name;
+					$problem_handle['output'] .= ".out";
+										
+					$sys_command = $problem_handle['execute']();
+					$start_times = posix_times();
+					# Fork and exec
+					$pid = pcntl_fork();
+					if($pid != 0) {
+						#parent
+						$start_time = time();
+					} else {
+						$child_log = fopen("$base_dir/child.log", "w");
+						# Child
+						if($USE_CHROOT){
+							#prepend the chroot directory where necessary
+							#this necissitates a mirroring of the contest
+							#structure inside of the chroot environment
+							$arg_cmd = "$base_dir/chroot_wrapper.exe" . 
+								" " .
+								$use_proc_fs . " " . 
+								$chroot_directory . " " .
+								$sys_command . " " . 
+								$problem_handle['data_dir'] . $cur_input . " " .
+								$problem_handle['output'];
+#make use of bash'es built in ulimit capabilities
+							$args = array("-c","ulimit -t $safe_max_cpu_time;$arg_cmd");
+							#before we execute, 
+							#we have to move the executable
+							$tmp_cmd = $problem_handle['copy_cmd']();
+							system($tmp_cmd, $result);
+							echo "\n\nsys 265: $tmp_cmd\n\n";
+							if(!result)
+							{
+								print "Something went wrong with copying the executable to the chroot jail<br>";
+								print "Cmd: $tmp_cmd<br>";
+								print "Result: $result<br>";
+							}
+							#copy the data files
+							$tmp_cmd = "cp ";
+							$tmp_cmd .= $problem_handle['data_dir'];
+							$tmp_cmd .= $cur_input;
+							$tmp_cmd .= " ";
+							$tmp_cmd .= $chroot_directory;
+							$tmp_cmd .= $problem_handle['data_dir'];
+							$tmp_cmd .= $cur_input;
+							system($tmp_cmd, $result);
+							echo "\n\nsys 281: $tmp_cmd\n\n";
+							fwrite($child_log,
+									"result of cp sys call: $result");
+							fwrite($child_log, 
+									"tmp_cmd: $tmp_cmd\n");
+							fwrite($child_log, 
+									"proc_fs: $use_proc_fs\n");
+							fwrite($child_log, 
+									"chroot dir: $chroot_directory\n");
+							fwrite($child_log, 
+									"sys_command: $sys_command\n");
+							foreach($args as $arg){
+								fwrite($child_log, "Args: $arg\n");
+							}
+							fclose($child_log);
+							umask(0);
+							pcntl_exec("/bin/sh", $args);
+						}
+						else{
+							#
+							# JGG
+							#
+							# This needs to be able to ignore stderr
+							#
+							$sys_command .= " < ";
+							$sys_command .= $problem_handle['data_dir'];
+							$sys_command .= "$input &> ";
+							$sys_command .= $problem_handle['output'];
+										
+							$args = array("-c", $sys_command);
+							pcntl_exec("/bin/sh", $args);
+							fwrite($child_log,
+									"not using chroot environment");
+							fclose($child_log);
+						}
+					}
+		
+					# Wait for child process toexit
+					# Kill it if it takes too long
+					$result = 0;
+					#$child_run_time = $child_start_ts;
+					#while((($child_run_time - $child_start_ts) < $max_cpu_time) &&
+#				while($start_time + $max_cpu_time >= time() && 
+					while(!$result) {
+						sleep(1);
+						$result = pcntl_waitpid($pid, 
+								$child_status, 
+								WNOHANG);
+					}
+					$times = posix_times();
+
+					echo "start time: $start_times[cutime]\n";
+					echo "end time: $times[cutime]\n";
+					echo "time taken: " . ($times['cutime'] - $start_times['cutime']) . "/" . $max_cpu_time*100 . "\n";
+					if(($times['cutime'] - $start_times['cutime']) >= $max_cpu_time *100) {
+						$submission_output = read_entire_file(
+						$problem_handle['judged_dir'] . 
+						$problem_handle['file_name'] . 
+								"_" . $problem_name . ".out");
+						$auto_response_number = ERUNLENGTH;
+						
+					}
+
+					if (pcntl_wifexited($child_status)) {
+						echo "child exited with status: $child_status\n";
+						$run_time_errorno = pcntl_wexitstatus($child_status);
+					} else if (pcntl_wifsignaled($child_status)) {
+						echo "child signaled with status: $child_status\n";
+						$run_time_errorno = 1000 + pcntl_wtermsig($child_status);
+					} else {
+						echo "child ended weirdly with status: $child_status\n";
+						$run_time_errorno = 2000;
+					}
+
+					if($run_time_errorno && $auto_response_number != ERUNLENGTH) {
+						$submission_output = read_entire_file(
+						$problem_handle['judged_dir'] . 
+						$problem_handle['file_name'] . 
+								"_" . $problem_name . ".out");
+						$auto_response_number = ERUNTIME;
+					}
+					elseif (!pcntl_waitpid($pid, $child_status, WNOHANG)){
+						posix_kill($pid+1, SIGKILL);
+						posix_kill($pid,  SIGKILL);
+						pcntl_waitpid($pid, $child_status, WNOHANG);
+						$auto_response_number = ERUNLENGTH;
+						break;
+					}
+				
+					#move the executable back out
+#					$tmp_cmd = "mv ";
+					$tmp_cmd = "rm -f ";
+					$tmp_cmd .= $chroot_directory;
+					$tmp_cmd .= $problem_handle['judged_dir'];
+					$tmp_cmd .= $problem_handle['file_name'];
+#					$tmp_cmd .= " ";
+#					$tmp_cmd .= $problem_handle['judged_dir'];
+#					$tmp_cmd .= $problem_handle['file_name'];
+#					system($tmp_cmd, $result);
+					#move the output files back
+					$tmp_cmd = "mv ";
+					$tmp_cmd .= $chroot_directory;
+					$tmp_cmd .= $problem_handle['judged_dir'];
+					$tmp_cmd .= "*.out";
+					$tmp_cmd .= " ";
+					$tmp_cmd .= $problem_handle['judged_dir'];
+#					system($tmp_cmd, $result);
+					#not all data sets are run regardless of results
+					//if($auto_response_number == ENONE 
+					//		|| $auto_response_number == EFORMAT
+					//		|| $auto_response_number == ECORRECT)
+						
+						#ok, now we need to move the outfile back
+						$chroot_filename = $chroot_directory;
+						$chroot_filename .= $problem_handle['judged_dir'];
+						$chroot_filename .= $problem_handle['file_name'];
+						$chroot_filename .= "_$problem_name.out";
+						$tmp_cmd = "cp -f $chroot_filename";
+						$tmp_cmd .= " ";
+						$tmp_cmd .= $problem_handle['judged_dir'];
+						$tmp_cmd .= $problem_handle['file_name'];
+						$tmp_cmd .= "_$problem_name.out";
+						#this is somewhat of a hack to get around
+						#umask issues - the default seems to be 144
+						#which leave the judging user unable to read
+						#the file
+						chmod($chroot_filename, 0600);
+						system($tmp_cmd, $result);
+						echo "\n\nsys 395: $tmp_cmd\n\n";
+						#Perform the diffs
+						$tmp = explode(".", $cur_input);
+						$outfile = $tmp[0] . ".out";
+						$judge_out_file = $problem_handle['data_dir'];
+						$judge_out_file .= $outfile;
+						$team_out_file = $problem_handle['judged_dir'];
+						$team_out_file .= $problem_handle['file_name'];
+						$team_out_file .= "_$outfile";
+						$diff_out_file = $problem_handle['judged_dir'];
+						$diff_out_file .= $problem_handle['file_name'];
+						$diff_out_file .= "_$outfile.diff";
+						$cur_error_eformat = false;
+						system("diff -u $judge_out_file $team_out_file > $diff_out_file", $result);
+						echo "\n\nsys 409: ";
+						echo "diff -u $judge_out_file $team_out_file > $diff_out_file\n\n\n";
+					  	if($auto_response_number != ERUNTIME && $auto_response_number != ERUNLENGTH){ 	
+							if(filesize($diff_out_file) != 0 || $result != 0){
+							
+								#we need to do a non-white space diff now
+								$diff_no_ws_out_file = 
+									$diff_out_file . ".no_ws";
+								system("diff -b -B $judge_out_file $team_out_file > $diff_no_ws_out_file", $result);
+								if(filesize($diff_no_ws_out_file)!= 0 || 
+										$result != 0){
+									$auto_response_number = EINCORRECT;
+									$submission_output = 
+									read_entire_file($diff_out_file);
+								}
+								else if($auto_response_number == ENONE
+										|| $auto_response_number == EFORMAT
+										|| $auto_response_number == ECORRECT) {
+									$auto_response_number = EFORMAT;
+								#this var holds weather we got an EFORMAT error on this paticular test.  Since this is non-fatal, we go on with any future problem sets
+								#however, we want to be able to see if we have had an eformat error in the past, or was it this time around when we print out correct / incorrect solutions statements
+									$cur_error_eformat = true;
+								}
+
+							}
+						}
+                                                if($auto_response_number == ENONE
+                                                                || $auto_response_number == ECORRECT
+                                                                || ($auto_response_number == EFORMAT
+                                                                        && $cur_error_eformat == false)){
+                                                        //correct solution
+                                                        if($auto_response_number != EFORMAT){
+                                                                $auto_response_number = ECORRECT;
+                                                        }
+                                                }
+                                                else {
+                                                        $cur_error_eformat = false;
+                                                }
+
+                                                $sub_source =
+                                                        $problem_handle['file_name'] . "_" . $outfile;
+				echo "\nauto_resopnse_number: $auto_response_number\n";	        
+    				if($auto_response_number != RUNTIME){
+					echo "\nerror: $run_time_errorno\n";
+					update_submission($judged_id,$auto_response_number, $cur_input, $run_time_errorno);
+				}
+				else{
+					update_submission($judged_id,$auto_response_number, $cur_input);
+				}
+						
+			}
+		}
+		
+    }
+ 
+    # Unknown error has occured
+    if($auto_response_number == ENONE){
+	    $auto_response_number = EUNKNOWN;
+	    $submission_output = read_entire_file($diff_out_file);
+	    update_submission($judged_id, $auto_response_number, $cur_input);
+    }
+}
+
+flock($fp, LOCK_UN);
+}
+fclose($fp);
+# A new submission was found
+# Input: $id - queue id
+#        $team_id - team id number
+#        $problem_id - problem id number
+#        $ts - time stamp
+#        $attempt - the attempt for the team and problem 
+#        $source_file - the filename of the submission
+function new_submission($id,
+		$team_id,
+		$problem_id,
+		$ts,
+		$attempt,
+		$source_file) {
+    ### Stalking the elusive bug. Put in some parameter validation. -sb 2006-10-05
+    if( !($id>0) || !($team_id>0) || !($problem_id>0) ){
+	echo "new_submission WARNING: id=$id, team_id=$team_id, problem_id=$problem_id<br />\n";
+    }
+
+    # Copy the row from QUEUED_SUBMISSIONS into JUDGED_SUBMISSIONS
+    $sql  = "INSERT ";
+    $sql .= "INTO JUDGED_SUBMISSIONS ";
+    $sql .= "    (TEAM_ID,PROBLEM_ID,TS,ATTEMPT,SOURCE_FILE) ";
+    $sql .= "VALUES ";
+    $sql .= "    ('$team_id','$problem_id'";
+    $sql .= ",'$ts','$attempt','$source_file') ";
+    $result = mysql_query($sql);
+    if(!$result){
+	sql_error($sql);
+    }
+
+    $new_id = mysql_insert_id();
+
+    # Delete the row from QUEUED_SUBMISSIONS
+    $sql  = "DELETE ";
+    $sql .= "FROM QUEUED_SUBMISSIONS ";
+    $sql .= "WHERE QUEUE_ID = '$id' ";
+    $result = mysql_query($sql);
+    if(!$result){
+	sql_error($sql);
+    }
+
+    return $new_id;
+}
+
+# Read the entire file into a string
+# Input: $filename - file path to read
+function read_entire_file($filename) {
+    if(file_exists($filename)){
+		return file_get_contents($filename);
+	}
+	else{
+		return "";
+	}
+}
+
+# Write the submission file to the judged directory
+# Input: $filename - file path to write to
+#        $file - string to write to the file
+function save_file($filename,$file) {
+    if($handle = fopen($filename,"w+")) {
+		if($file && !fwrite($handle,$file)){
+			echo "Error: Unable to write to the file!";
+			fclose($handle);
+		}
+	}
+    else{
+		echo "Error: Unable to open the file!";
+	}
+}
+
+# Update the judged submission
+# Input: $judged_id - submission id from the judged table
+#        $auto_response_number - response number
+function update_submission($judged_id,$auto_response_number,$in_file, $error_no = NULL) {
+    if($error_no){
+	    echo "\nerrorno: $errorno\n";
+	    $sql = "INSERT INTO AUTO_RESPONSES (JUDGED_ID, IN_FILE, AUTO_RESPONSE, ERROR_NO) ";
+	    $sql .= "VALUES ($judged_id, '$in_file', $auto_response_number, $error_no)";
+    }
+    else{
+    	$sql = "INSERT INTO AUTO_RESPONSES (JUDGED_ID, IN_FILE, AUTO_RESPONSE) ";
+    	$sql .= "VALUES ($judged_id, '$in_file', $auto_response_number)";
+    }
+    $result = mysql_query($sql);
+    if(!$result)
+	sql_error($sql);
+}
+
+# SQL ERROR
+# Input: $sql - the query with the error
+function sql_error($sql) {
+    echo "<br>Error in SQL command: $sql";
+    $fp = fopen("errorLog.txt", "a");
+    fwrite($fp, "Error in SQL command: \"$sql\" on " . date('D, F j, Y -- G:i:s') . "\n");
+    fclose($fp);
+    die;
+}
+
+
+
+?>
diff --git a/public_html/judge/errorLog.txt b/public_html/judge/errorLog.txt
new file mode 100644
index 0000000..929395f
--- /dev/null
+++ b/public_html/judge/errorLog.txt
@@ -0,0 +1,2 @@
+Error in SQL command: "INSERT INTO RUNTIME_ERRORS (JUDGED_ID, RUNTIME_ERROR, IN_FILE) VALUES (5, -1, '1_10000000_100.in')" on Tue, January 16, 2007 -- 0:06:48
+Error in SQL command: "INSERT INTO AUTO_RESPONSES (JUDGED_ID, IN_FILE, AUTO_RESPONSE, ERROR_NO) VALUES (2, '16_1_10_100.in', 5, -117)" on Fri, January 19, 2007 -- 11:40:45
diff --git a/public_html/judge/export_pdf.php b/public_html/judge/export_pdf.php
new file mode 100755
index 0000000..854764f
--- /dev/null
+++ b/public_html/judge/export_pdf.php
@@ -0,0 +1,273 @@
+<?php
+#
+# Copyright (C) 2002 David Whittington
+# Copyright (C) 2005 Jonathan Geisler
+# Copyright (C) 2005 Victor Replogle
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: judge/standings.php
+#
+#    include_once("lib/config.inc");
+#    include_once("lib/judge.inc");
+    include_once("lib/session.inc");
+    include_once('class.ezpdf.php');
+#    include_once("lib/header.inc");
+#
+
+
+if (!isset($HTTP_GET_VARS['selected_category'])) {
+    $selected_category = "Overall";
+} else {
+    $selected_category = $HTTP_GET_VARS['selected_category'];
+}
+
+#echo "<center>Categories: \n";
+if ($selected_category=="Overall") {
+#    echo "Overall";
+} else {
+#    echo "<a href=\"standings.php?selected_category=Overall\">Overall</a>";
+}
+
+foreach ($categories as $category) {
+    if ($selected_category == $category['name']) {
+#        echo " | $category[name]";
+    }
+    else {
+#        echo " | <a href=\"standings.php?selected_category=$category[name]\">";
+#        echo "$category[name]</a>";
+    }
+}
+#echo "</center>\n";
+
+if ($selected_category == "Overall") {
+    $i=0;
+    foreach ($teams as $team) {
+        $standings[$i]['team_id'] = $team['id'];
+        $standings[$i]['team_name'] = $team['name'];
+        if(!isset($standings[$i]['penalty'])){
+            $standings[$i]['penalty'] = 0;
+        }
+        if(!isset($standings[$i]['problems_completed'])){
+            $standings[$i]['problems_completed'] = 0;
+        }
+        $i++;
+    }
+}
+else {
+    $i=0;
+    foreach ($categories[$selected_category]['team_ids']
+        as $category_team_id) {
+        $standings[$i]['team_id'] = $category_team_id;
+        $standings[$i]['team_name']
+            = $teams[$category_team_id]['name'];
+        if(!isset($standings[$i]['penalty'])){
+            $standings[$i]['penalty'] = 0;
+        }
+        if(!isset($standings[$i]['problems_completed'])){
+            $standings[$i]['problems_completed'] = 0;
+        }
+        $i++;
+    }
+}
+
+for ($i = 0; $i < count($standings); $i++) {
+    $sql  = "SELECT PROBLEM_ID, TS, ATTEMPT, RESPONSE_ID ";
+    $sql .= "FROM JUDGED_SUBMISSIONS ";
+    $sql .= "WHERE ";
+    $sql .= "    TEAM_ID='" . $standings[$i]['team_id'] . "' ";
+    $sql .= "ORDER BY PROBLEM_ID ASC ";
+    $result = mysql_query($sql);
+
+    while($row = mysql_fetch_assoc($result)) {
+        if($row['RESPONSE_ID'] == 1) {
+            // each incorrect submission counts as 20 penalty points
+            $incorrect_submission_penalty = ($row['ATTEMPT'] - 1) * 20;
+            // each minute counts as one penalty point
+            $time_penalty = (int) ((($row['TS'] - $contest_start_ts) / 60) + 0.5);
+            $standings[$i]['problems'][$row['PROBLEM_ID']]['ts'] = $row['TS'];
+            $standings[$i]['problems'][$row['PROBLEM_ID']]['penalty'] = $time_penalty + $incorrect_submission_penalty;
+            if(!isset($standings[$i]['problems_completed'])){
+                $standings[$i]['problems_completed'] = 0;
+            }
+            $standings[$i]['problems_completed']++;
+        }
+        $standings[$i]['problems'][$row['PROBLEM_ID']]['attempt'] = $row['ATTEMPT'];
+        $standings[$i]['problems'][$row['PROBLEM_ID']]['response_id'] = $row['RESPONSE_ID'];
+    }
+}
+
+// total up the penalty points
+for($i=0; $i < count($standings); $i++) {
+    if(isset($problems)) {
+        foreach ($problems as $problem) {
+            if(!isset($standings[$i]['problems'])){
+                $standings[$i]['problems'] = 0;
+            }
+            $standings[$i]['penalty']
+                += $standings[$i]['problems'][$problem['id']]['penalty'];
+        }
+    }
+}
+
+function cmp ($a, $b) {
+    if ($a['problems_completed'] > $b['problems_completed']) {
+        return -1;
+    }
+    elseif ($a['problems_completed'] < $b['problems_completed']) {
+        return 1;
+    }
+    else {
+        if ($a['penalty'] < $b['penalty']) {
+            return -1;
+        }
+        elseif ($a['penalty'] > $b['penalty']) {
+            return 1;
+        }
+    }
+    return 0;
+}
+
+usort($standings, "cmp");
+
+//find the first team that is not exhibition
+$x = 0;
+while(checkexhib($standings[$x]['team_id']) == 1) {
+        $standings[$x]['rank'] = '-';
+        $x++;
+}
+$standings[$x]['rank'] = 1;
+$current_rank = 1;
+    for($i=$x+1; $i < count($standings); $i++) {
+
+        //check to see if the team is exhibition, if it is, don't rank them
+        $excheck = checkexhib($standings[$i]['team_id']);
+
+        //echo $standings[$i]['team_id'] ." - " . $excheck . "<br>";
+        if($excheck == 1)
+        {
+                $standings[$i]['rank'] = '-';
+        }
+        else
+        {
+                if($standings[$i]['problems_completed'] == $standings[$i-1]['problems_completed'] &&
+                     $standings[$i]['penalty'] == $standings[$i-1]['penalty'])
+                {
+                        #if the problems completed and the penalty seconds are the same then they are the same rank
+                }
+                else
+                {
+                        $current_rank++;
+                }
+                $standings[$i]['rank'] = $current_rank;
+        }
+    }
+
+#for($i=1; $i < count($standings); $i++) {
+#    if($standings[$i]['problems_completed'] != $standings[$i-1]['problems_completed'] && $standings[$i]['penalty'] == $standings[$i-1]['penalty'])
+#    {
+#       #if the problems completed and the penalty seconds are the same, then they are the same rank
+#    }
+#    else
+#    {
+#       $current_rank++;
+#    }
+#    $standings[$i]['rank'] = $current_rank;
+#}
+
+#echo "<br><table align=center bgcolor=#000000 width=90% cellpadding=0 cellspacing=0 border=0><tr><td>\n";
+#echo "<table align=center width=100% cellpadding=5 cellspacing=1 border=0>\n";
+#echo "<tr><td colspan=99 align=center bgcolor=";
+#    if($contest_freeze_ts < time()) {
+#        echo "red>";
+#    }
+#    else {
+#        echo "$hd_bg_color1>";
+#    }
+#echo "<font color=$hd_txt_color1><b>Standings</b></font></td></tr>\n";
+#echo "<tr bgcolor=$hd_bg_color2>\n";
+#echo "<td>&nbsp</td>\n";
+#echo "<td align=center><font color=$hd_txt_color2><b>Team Name</b></font></td>\n";
+#for($i=1; $i<=$num_problems; $i++) { // changes this later
+#    echo "<td align=center><font color=$hd_txt_color2>";
+#    echo "<b>Prob #$i</b></font></td>";
+#}
+#echo "<td align=center><font color=$hd_txt_color2><b>Completed</b></font></td>";
+#echo "</tr>\n";
+
+$pdf = new Cezpdf();
+$pdf =& new Cezpdf();
+$pdf->selectFont('./fonts/Helvetica.afm');
+$dat = array(
+array('num'=>1,'name'=>'gandalf','type'=>'wizard')
+,array('num'=>2,'name'=>'bilbo','type'=>'hobbit','url'=>'http://www.ros.co.
+nz/pdf/')
+,array('num'=>3,'name'=>'frodo','type'=>'hobbit')
+,array('num'=>4,'name'=>'saruman','type'=>'bad
+dude','url'=>'http://sourceforge.net/projects/pdf-php')
+,array('num'=>5,'name'=>'sauron','type'=>'really bad dude')
+);
+$pdf->ezTable($dat);
+$pdf->ezStream();
+
+for($i=0; $i<count($standings); $i++) {
+$data[$i]['Rank'] = trim($standings[$i]['rank']);
+$data[$i]['Team'] = $standings[$i]['team_name'];
+#array('Rank'=>trim($standings[$i]['rank']), 'Team'=>$standings[$i]['team_name']), 
+    for($j=1; $j<=$num_problems; $j++) { // change this later
+        if(isset($standings[$i]['problems'][$j]['penalty'])) {
+	$data[$i][$j] = $standings[$i]['problems'][$j]['penalty'];	
+        }
+        else {
+	$data[$i][$j] = "--";
+        }
+        $data[$i][$j] += "/";
+        if(isset($standings[$i]['problems'][$j]['attempt'])) {
+            $data[$i][$j] += $standings[$i]['problems'][$j]['attempt'];
+        }
+        else {
+            $data[$i][$j] += "--";
+        }
+    }
+
+    if(!isset($standings[$i]['problems_completed']) || $standings[$i]['problems_completed']==0) {
+       $data[$i]['Completed'] = "0"; 
+    }
+    else {
+        $data[$i]['Completed'] = $standings[$i]['problems_completed'];
+    }
+#    echo " ";
+    if(!isset($standings[$i]['penalty']) || $standings[$i]['penalty']==0) {
+        $data[$i]['Completed'] += "(0)";
+    }
+    else {
+        $data[$i]['Completed'] += "(".$standings[$i]['penalty'].")";
+    }
+
+#    echo "</td>\n";
+#    echo "</tr>\n";
+}
+#echo "</table>\n";
+#echo "</table>\n";
+#echo "<br>\n";
+#include("lib/footer.inc");
+#$pdf->ezTable($data);
+#$pdf->ezStream();
+function checkexhib($team)
+{
+        global $selected_category;
+        if($selected_category != 'Exhibition') {
+                $sql  = "SELECT * FROM CATEGORIES AS C, CATEGORY_TEAM AS T WHERE C.CATEGORY_ID = T.CATEGORY_ID AND C.CATEGORY_NAME = 'Exhibition'";
+                $sql .= " AND T.TEAM_ID = $team";
+                $ex = mysql_query($sql);
+                $num_rows = mysql_num_rows($ex);
+                return $num_rows;
+        }
+        else {
+                #allows teams to be ranked if they are exhibition if the page is exhibition
+                return 0;
+        }
+}
+?>
+
diff --git a/public_html/judge/index.php b/public_html/judge/index.php
new file mode 100755
index 0000000..2877d2e
--- /dev/null
+++ b/public_html/judge/index.php
@@ -0,0 +1,84 @@
+<?
+#
+# Copyright (C) 2002 David Whittington
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: judge/index.php
+#
+    include_once("lib/config.inc");
+    include_once("lib/judge.inc");
+
+session_name("TOUCHE-$db_name");
+session_start();
+$_SESSION = array();
+
+if($_SERVER['REQUEST_METHOD'] == 'GET'){
+
+?>
+<!DOCTYPE HTML PUBLIC "-//W3C/DTD HTML 4.0 Transitional//EN">
+<html>
+<head>
+<script language="javascript">
+    function set_focus() {
+	if (document.f.user.value) {
+	    document.f.password.focus();
+	} else {
+	    document.f.user.focus();
+	}
+    }
+</script>
+</head>
+<body bgcolor=<?=$page_bg_color?> onLoad="set_focus()">
+
+<form name="f" method="post" action="index.php">
+<table align="center" height="100%" border="0"><tr><td>
+<table cellpadding="1" cellspacing="0" border="0" bgcolor="#000000"><tr><td>
+<table cellpadding="5" cellspacing="0" border="0" bgcolor="<?=$title_bg_color?>"><tr><td>
+<font color="#ffffff">
+<b><?php echo $contest_name ?></b><br>
+<small><?php echo $contest_host ?></small>
+</font>
+</td></tr><tr><td bgcolor="#ffffff">
+
+<?
+    if (isset($state) && $state == 1) {
+	echo "<center><font color=#cc0000><b>";
+	echo "Login or Password Invalid</b></font></center>\n";
+    }
+    else if (isset($state) && $state == 2) {
+	echo "<center><font color=#cc0000><b>";
+	echo "You are not yet logged in</b></font></center>\n";
+    }
+?>
+
+<table cellpadding="5" cellspacing="0" border="0">
+<tr><td>Login:</td><td><input type="text" name="user" size="20">
+</td></tr>
+<tr><td>Password:</td><td><input type="password" name="password" size="20"></td></tr>
+<tr><td>&nbsp;</td><td><input type="submit" name="submit" value="  OK  ">
+<input type="reset" name="submit" value=" Cancel "></td></tr>
+</table>
+</td></tr></table>
+</td></tr></table>
+</td></tr></table>
+</form>
+</body>
+</html>
+<?
+}
+else if($_SERVER['REQUEST_METHOD'] == 'POST'){
+    $user = $_POST['user'];
+    $password = $_POST['password'];
+    
+    if($user == $judge_user && $password == $judge_pass) {
+	$_SESSION['judge_username'] = $user;
+	$_SESSION['judge_password'] = $password;
+	header ("Location: main.php");
+    }
+    else {
+	header ("Location: index.php?state=1");
+    }
+}
+?>
diff --git a/public_html/judge/judge.php b/public_html/judge/judge.php
new file mode 100755
index 0000000..1ee4183
--- /dev/null
+++ b/public_html/judge/judge.php
@@ -0,0 +1,25 @@
+<?
+#
+# Copyright (C) 2005 Steve Overton
+# Copyright (C) 2005 David Crim
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/judge.php
+#
+    include_once("lib/config.inc");
+    include_once("lib/judge.inc");
+    include_once("lib/header.inc");
+#
+
+judge_header(10);
+# Set up default directories
+$problem_handle['queue_dir'] = "$base_dir/queue/";
+$problem_handle['judged_dir'] = "$base_dir/judged/";
+$problem_handle['data_dir'] = "$base_dir/data/";
+
+$page = "judge.php";
+include_once("lib/submissions.inc")
+
+?>
diff --git a/public_html/judge/judge_output.php b/public_html/judge/judge_output.php
new file mode 100755
index 0000000..34e8b07
--- /dev/null
+++ b/public_html/judge/judge_output.php
@@ -0,0 +1,114 @@
+<?
+#
+# Copyright (C) 2005 Steve Overton
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: judge/judge_output.php
+#
+    include_once("lib/config.inc");
+    include_once("lib/judge.inc");
+    include_once("lib/session.inc");
+#
+?>
+<!DOCTYPE HTML PUBLIC "-//W3C/DTD HTML 4.0 Transitional//EN">
+<html>
+<body bgcolor="<?=$page_bg_color?>" link="0000cc" alink="000066" vlink="0000cc">
+<table width="90%" align="center" cellpadding="1" cellspacing="0" border="0" bgcolor="#000000">
+    <tr><td>
+    	<table width="100%" cellpadding="5" cellspacing="0" border="0">
+	    <tr bgcolor="<?=$title_bg_color?>">
+		<td>
+		    <font color="#ffffff">
+		    <b><?=$contest_name?></b> - <small><?=$contest_host?></small>
+		    </font>
+		</td>
+		<td align="right">
+		    <font color="#ffffff">
+		    <b>JUDGE</b>
+		    </font>
+		</td>
+	    </tr>
+	    <tr>
+		<td bgcolor="#dcdcdc" align="left"><b>
+		</td>
+		<td align="right" bgcolor="#dcdcdc">
+		    <b>Official Time: <?=date("H:i:s")?></b>
+		</td>
+	    </tr>
+	    <tr>
+	    <td bgcolor="#ffffff" colspan="2">
+	    <table align=center bgcolor=#ffffff cellpadding=0
+		cellspacing=0 border=0><tr><td>
+	    <table width=100% cellpadding=5
+	            cellspacing=1 border=0>
+	    <tr><td colspan=2 bgcolor="<?=$hd_bg_color1?>">
+	    <center><b><font color="<?=$hd_txt_color1?>">
+	    Comparing Output Files for Problem <?=$_GET['problem']?>
+	    </font></center></td></tr>
+	    <?
+	    $format = $_GET['format'];
+	    
+	    if($format == 2 || $format == 3) {
+	    ?>
+                <td bgcolor="<?=$hd_bg_color2?>"><center><b>
+                <font color="<?=$hd_txt_color2?>">Submitted Source 
+                </font></b></center></td></tr>
+                <tr><td bgcolor="<?=$data_bg_color1?>">
+                <?
+		if($format == 2) {
+		    $dir = $base_dir . "/judged/" . $_GET['sub_source'];
+		}
+		else {
+		    $dir = $_GET['sub_source'];
+		}
+		$out = file($dir);
+		if(count($out) == 0) {
+		    $out[0] = "The diff file is empty";
+		}
+		echo "<center><textarea rows=30 cols=75 readonly>";
+		foreach($out as $line){
+		    echo $line;
+		}
+                echo "</textarea></center></td>";
+	    }
+	    else {
+	    ?>
+		<tr><td bgcolor="<?=$hd_bg_color2?>"><center><b>
+		<font color="<?=$hd_txt_color2?>">Judge's Output
+		</font></b></center></td>
+		<td bgcolor="<?=$hd_bg_color2?>"><center><b>
+		<font color="<?=$hd_txt_color2?>">Submitted Output
+		</font></b></center></td></tr>
+		<tr><td bgcolor="<?=$data_bg_color1?>">
+		<?
+		$dir = $base_dir . "/data/" . $_GET['judge_source'];
+                    $out = file($dir);
+                    $dir = $base_dir . "/judged/" . $_GET['sub_source'];
+                    $out2 = file($dir);
+                    echo "<div style=\"overflow:scroll; height:500px; width:390px; color:black; border:thin solid;\">\n";
+                    echo "<font face=\"Courier\" size=\"2\">";
+                    $x = 1;
+                    foreach($out as $line){
+                        $line = preg_replace("/ /", "<font color=\"red\">~</font>", $line);
+                        $line = preg_replace("/\t/", "<font color=\"red\">________</font>", $line);
+                        echo "$x: $line";
+                        $x++;
+                    }
+                    echo "</font></div></td>";
+                    echo "<td bgcolor=$data_bg_color1>";
+                    echo "<div style=\"overflow:scroll; height:500px; width:390px; color:black; border:thin solid;\">\n";
+                    echo "<font face=\"Courier\" size=\"2\">";
+                    $x = 1;
+                    foreach($out2 as $line){
+                        $line = preg_replace("/ /", "<font color=\"red\">~</font>", $line);
+                        $line = preg_replace("/\t/", "<font color=\"red\">________</font>", $line);
+                        echo "$x: $line";
+                        $x++;
+                    }
+                    echo "</font></div></td></tr>";
+                }
+	    ?>
+	    </table></tr></table></tr></table></tr></table></tr></table>
+	    </html>
diff --git a/public_html/judge/judge_response.php b/public_html/judge/judge_response.php
new file mode 100755
index 0000000..18068ac
--- /dev/null
+++ b/public_html/judge/judge_response.php
@@ -0,0 +1,297 @@
+<?
+include_once("lib/config.inc");
+include_once("lib/judge.inc");
+include_once("lib/header.inc");
+include_once("lib/database.inc");
+judge_header(0);
+$problem_handle['queue_dir'] = "$base_dir/queue/";
+$problem_handle['judged_dir'] = "$base_dir/judged/";
+$problem_handle['data_dir'] = "$base_dir/data/";
+
+#
+#
+if($_GET){
+   
+    $sql = "SELECT * ";
+    $sql .= "FROM JUDGED_SUBMISSIONS ";
+    $sql .= "WHERE JUDGED_ID = " . $_GET['judged_id'];
+
+    $sql_result = mysql_query($sql);
+
+    if(!$sql_result)
+    	sql_error($sql);
+
+    $row = mysql_fetch_assoc($sql_result);
+    $source_file = $row['SOURCE_FILE'];
+    $viewed = $row['VIEWED'];
+    $viewed++;
+    
+    $sql  = "UPDATE JUDGED_SUBMISSIONS ";
+    $sql .= "SET VIEWED = $viewed ";
+    $sql .= "WHERE JUDGED_ID = $_GET[judged_id] ";
+    $result = mysql_query($sql);
+    if(!$result) {
+        sql_error($sql);
+    }
+
+
+
+    $sql = "SELECT * ";
+    $sql .= "FROM PROBLEMS ";
+    $sql .= "WHERE PROBLEM_ID = '" . $_GET['problem'] . "'";
+
+    $sql_result = mysql_query($sql);
+    
+    if(!$sql_result)
+    	sql_error($sql);
+
+    $row = mysql_fetch_assoc($sql_result);
+
+    $problem_name = $row['PROBLEM_NAME'];
+    $problem_id = $row['PROBLEM_ID'];
+
+    if(!$sql_result)
+        sql_error($sql);
+
+    $row = mysql_fetch_assoc($sql_result);
+
+    $auto_response = $row['RESPONSE'];
+    
+    echo "<table align=center bgcolor=#ffffff cellpadding=0
+                        cellspacing=0 border=0><tr><td>\n";
+    echo "<table width=100% cellpadding=5
+                        cellspacing=1 border=0>\n";
+    echo "<tr><td bgcolor=$hd_bg_color1 align=center colspan=2>\n";
+    echo "<font color=$hd_txt_color1><b>\n";
+    echo "Judging Submission\n";
+    echo "</b></td></tr></table>\n";
+    echo "<table width=100% border=0>\n";
+    echo "<tr><td bgcolor=$data_bg_color1>Submission ID:</td>\n";
+    echo "<td bgcolor=$data_bg_color1>" . $_GET['judged_id'] . "</td></tr>\n";
+    echo "<tr><td bgcolor=$data_bg_color1>Team:</td>\n";
+    echo "<td bgcolor=$data_bg_color1>" . $_GET['team_id'] . "</td></tr>\n";
+    echo "<tr><td bgcolor=$data_bg_color1>Problem:</td>\n";
+    echo "<td bgcolor=$data_bg_color1>$problem_name</td></tr>\n";
+    echo "<tr><td bgcolor=$data_bg_color1>Attempt:</td>\n";
+    echo "<td bgcolor=$data_bg_color1>" . $_GET['attempt'] . "</td></tr>\n";
+    echo "<tr><td bgcolor=$data_bg_color1>Source:</td>\n";
+    echo "<td  bgcolor=$data_bg_color1><a href='judge_output.php?problem=$problem_id&sub_source=$source_file&format=2' target='blank'> $source_file </a></td></tr>";
+    echo "<table width = 100% border=0 cellpadding=5><tr>";
+    echo "<td bgcolor=$hd_bg_color2><center><b>";
+    echo "<font color=$hd_txt_color2>Problem Notes:</font>";
+    echo "</b></center></td></tr></table>\n";
+    echo "<table><tr><td><textarea rows=4 cols=62 readonly>";
+    echo $row['PROBLEM_NOTE'] . "</textarea></table>";
+    
+    $sql = "SELECT * ";
+    $sql .= "FROM AUTO_RESPONSES AR INNER JOIN RESPONSES R ON R.RESPONSE_ID = AR.AUTO_RESPONSE ";
+    $sql .= "WHERE AR.JUDGED_ID = $_GET[judged_id]";
+
+    $sql_result = mysql_query($sql);
+    if(!$sql_result)
+        sql_error($sql);
+
+    $auto_response_id = 10;
+
+    while($row = mysql_fetch_assoc($sql_result)){
+	if($auto_response_id > $row['AUTO_RESPONSE'])
+		$auto_response_id = $row['AUTO_RESPONSE'];
+	switch($row['AUTO_RESPONSE']){
+		case EFORBIDDEN:
+			echo "<table border=0 width=100% cellpadding=5>\n";
+                	echo "<tr cellpadding=5 bgcolor=$hd_bg_color2>\n";
+                	echo "<td align=center colspan=2>\n";
+	                echo "<font color=$hd_txt_color2>\n";
+	                echo "<b>Forbidden Word in Source</b>";
+	                echo "</td></tr>\n";
+			echo "<tr><td><textarea rows=15 cols=62 readonly>$row[IN_FILE]</textarea>";
+			echo "</td></tr></table>\n";
+			break;
+		 
+		case ECOMPILE:
+                        echo "<table border=0 width=100% cellpadding=5>\n";
+                        echo "<tr cellpadding=5 bgcolor=$hd_bg_color2>\n";
+                        echo "<td align=center colspan=2>\n";
+                        echo "<font color=$hd_txt_color2>\n";
+                        echo "<b>Compile Error</b>";
+                        echo "</td></tr>\n";
+                        echo "<tr><td><textarea rows=15 cols=62 readonly>" . read_entire_file($problem_handle['judged_dir'] . $row['IN_FILE']);
+                        echo "</textarea></td></tr></table>\n";
+                        break;
+		
+		case EFILETYPE:
+			echo "<table border=0 width=100% cellpadding=5>\n";
+                	echo "<tr cellpadding=5 bgcolor=$hd_bg_color2>\n";
+                	echo "<td align=center colspan=2>\n";
+	                echo "<font color=$hd_txt_color2>\n";
+	                echo "<b>Undefined File Type</b>";
+	                echo "</td></tr></table>\n";
+			echo "<table border=0 width=100%>\n";
+                        echo "<tr><td bgcolor=$data_bg_color1>";
+			echo "<font color=$data_txt_color4>";
+                        echo "File Name: $row[IN_FILE]</font></td></tr></table>\n";
+			break;
+		case ERUNTIME:
+			$know_output = preg_replace("/\.in/", ".out", $row['IN_FILE']);
+			echo "<table border=0 width=100% cellpadding=5>\n";
+                        echo "<tr cellpadding=5 bgcolor=$hd_bg_color2>\n";
+                        echo "<td align=center colspan=2>\n";
+                        echo "<font color=$hd_txt_color2>\n";
+                        echo "<b>Data Set: $know_output</b>";
+                        echo "</td></tr></table>\n";
+                        echo "<table border=0 width=100%>\n";
+                        echo "<tr><td bgcolor=$data_bg_color1>";
+			echo "<font color=$data_txt_color4>";
+                        echo "Runtime Error Number: $row[ERROR_NO]</font></td></tr></table>\n";
+			break;
+	
+		case ERUNLENGTH:
+			$know_output = preg_replace("/\.in/", ".out", $row['IN_FILE']);
+                        echo "<table border=0 width=100% cellpadding=5>\n";
+                        echo "<tr cellpadding=5 bgcolor=$hd_bg_color2>\n";
+                        echo "<td align=center colspan=2>\n";
+                        echo "<font color=$hd_txt_color2>\n";
+                        echo "<b>Data Set: $know_output</b>";
+                        echo "</td></tr></table>\n";
+                        echo "<table border=0 width=100%>\n";
+                        echo "<tr><td bgcolor=$data_bg_color1>";
+			echo "<font color=$data_txt_color4>";
+                        echo "The time limit was exceeded</font></td></tr></table>\n";
+			break;
+	
+		default:
+			$know_output = preg_replace("/\.in/", ".out", $row['IN_FILE']);
+			$source_file = preg_replace("/\.(cc|cpp|c|java)/", "", $source_file);	
+			$program_output = $problem_handle['judged_dir']	.  $source_file . "_" . $know_output;
+			$diff_out_file = $program_output . ".diff";
+			$diff_no_ws_out_file = $diff_out_file . ".no_ws";
+	
+			echo "<table border=0 width=100% cellpadding=5>\n";
+		        echo "<tr cellpadding=5 bgcolor=$hd_bg_color2>\n";
+		        echo "<td align=center colspan=2>\n";
+		        echo "<font color=$hd_txt_color2>\n";
+		        echo "<b>Comparing Data Set: $know_output</b>";
+		        echo "</td></tr></table>\n";
+	
+			echo "<table border=0 width=100%>\n";
+	
+			if(filesize($diff_out_file) != 0){
+				echo "<tr><td bgcolor=$data_bg_color1>";
+		                echo "<font color=$data_txt_color4>";
+		                if(file_exists($diff_no_ws_out_file)){ 
+					echo "Standard diff failed</font></td></tr>\n";
+					echo "<tr><td><textarea rows=15 cols=62 readonly>";
+					echo read_entire_file($diff_out_file);
+					echo "</textarea></td></tr>";
+			
+					if(filesize($diff_no_ws_out_file)!= 0){
+		 			 	 echo "<tr><td bgcolor=$data_bg_color1>";
+			                         echo "<font color=$data_txt_color4>";
+			                         echo "White space diff failed";
+		        	                 echo "</font></td></tr>";
+						 echo "<tr><td bgcolor=$data_bg_color1>";
+                                                 echo "<font color=$data_txt_color4>";
+                                                 echo "<b>Incorrect Output</b>";
+                                                 echo "</font></td></tr>";
+
+					}
+					else{
+						echo "<tr><td bgcolor=$data_bg_color1>";
+			                        echo "<font color=$data_txt_color3>";
+		        	                echo "White space diff succedded";
+		                	        echo "</font></td></tr>";
+						echo "<tr><td bgcolor=$data_bg_color1>";
+						echo "<font color=$data_txt_color4>";
+		        	                echo "<b>Format Error</b>";
+		                	        echo "</font></td></tr>";
+						$auto_response_id = EFORMAT;		
+					}
+				}
+			}
+			else{
+				echo "<tr><td bgcolor=$data_bg_color1>\n";
+		                echo "<b><font color=$data_txt_color3>";
+		                echo "Correct Solution</font></b></td></tr>\n";
+			}
+			echo "<tr><td bgcolor=$data_bg_color1>";
+		        echo "<a href='judge_output.php?problem=$problem_name&judge_source=$know_output&sub_source=$source_file" . "_" . "$know_output&format=1'target='blank'>Output Files</a>";
+		        echo "</td></tr></table>";
+	}	
+    }
+    echo "<table width=100% cellpadding=5 border=0>\n";
+    echo "<tr><td align=center bgcolor=$hd_bg_color2>\n";
+    echo "<font color=$hd_txt_color2><b>";
+    echo "Overall Result of the Attempt</b></font></td></tr>\n";
+    echo "</table><table border=0 width=100%>\n";
+    echo "<tr><td bgcolor=$data_bg_color1>Suggested Result: ";
+
+    if($auto_response_id == 1)
+	echo "<font color=$data_txt_color3><b>";
+    else
+	echo "<font color=$data_txt_color4><b>";
+
+    echo $auto_response;
+    echo "</b></font></td></tr>";
+    echo "</b></font></td></tr>";
+    echo "<form method='POST' name='testing' action='$_GET[page]'>\n";
+    echo "<tr><td bgcolor=$data_bg_color1>Final Result: ";
+    echo "<select name='result'>";
+
+    $sql = "SELECT * ";
+    $sql .= "FROM RESPONSES ";
+
+    $sql_result = mysql_query($sql);
+
+    if(!$sql_result)
+        sql_error($sql);
+ 
+    while($row = mysql_fetch_assoc($sql_result)){
+	echo "<option value=" . $row['RESPONSE_ID'];
+        if($auto_response_id == $row['RESPONSE_ID']) {
+        	echo " selected ";
+        }
+        echo ">" . $row['RESPONSE'] . "</option>";
+    }
+    echo "</select>";
+    echo "</td></tr></table>";
+    //this now goes after each data set
+    /*if($auto_response_id != 1){
+	echo "<table><tr><td><textarea rows=15 cols=62 readonly>";
+        echo $error_output;
+        if($auto_response_id == 8) {
+        	echo "Runtime errorno: put number in db";
+        }
+        echo "</textarea></td></tr></table>\n";
+    }*/
+   
+    echo "<table border=0 width=100%>\n";
+    echo "<tr><td><center>";
+    echo "<input type='hidden' name='judged_id' value=" . $_GET['judged_id'] . ">";
+    echo "<input type='submit' name='submit' value='Submit Results'>";
+    echo "</td></tr></center></form></table>\n";
+
+					    
+
+}
+else
+	echo "No submission was selected";
+
+# Read the entire file into a string
+# Input: $filename - file path to read
+function read_entire_file($filename) {
+    if(file_exists($filename)){
+          return file_get_contents($filename);
+    }
+    else{
+          return "";
+    }
+}
+
+							    
+# SQL ERROR
+# Input: $sql - the query with the error
+function sql_error($sql) {
+    echo "<br>Error in SQL command: $sql";
+    die;
+}
+?>
diff --git a/public_html/judge/lib/config.inc b/public_html/judge/lib/config.inc
new file mode 100755
index 0000000..c3223df
--- /dev/null
+++ b/public_html/judge/lib/config.inc
@@ -0,0 +1,40 @@
+<?php
+#
+# Copyright (C) 2002 David Whittington
+# Copyright (C) 2004 Jonathan Geisler
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/lib/config.inc
+#
+	include_once("database.inc");
+
+	$page_bg_color  = "#cccccc";
+	$body_bg_color  = "#ffffff";
+	$title_bg_color = "#3480ba";
+	$hd_bg_color1   = "#3480ba";
+	$hd_bg_color2   = "#cccc99";
+	$data_bg_color1 = "#dddddd";
+	$data_bg_color2 = "#cccc99";
+
+	$page_txt_color  = "#000000";
+	$body_txt_color  = "#ffffff";
+	$title_txt_color = "#ffffff";
+	$hd_txt_color1   = "#ffffff";
+	$hd_txt_color2   = "#000000";
+	$data_txt_color1 = "#000000";
+	$data_txt_color2 = "#000000";
+	$data_txt_color3 = "#32cd32";
+	$data_txt_color4 = "#ff0000";
+	
+	$judge_user = "judge";
+	$judge_pass = "tdz7q7rj";
+
+#
+# $base_dir must be updated for the machine it is installed on.
+# Intentionally commenting it out in "official" sources to force
+# others to put in the right location for their archive.
+#
+#	$base_dir = "/home/jgeisler/ProgContest/judge/contest";
+?>
diff --git a/public_html/judge/lib/database.inc b/public_html/judge/lib/database.inc
new file mode 120000
index 0000000..dacdb43
--- /dev/null
+++ b/public_html/judge/lib/database.inc
@@ -0,0 +1 @@
+../../lib/database.inc
\ No newline at end of file
diff --git a/public_html/judge/lib/footer.inc b/public_html/judge/lib/footer.inc
new file mode 100755
index 0000000..3f6c167
--- /dev/null
+++ b/public_html/judge/lib/footer.inc
@@ -0,0 +1,13 @@
+<!--
+    Copyright (C) 2002 David Whittington
+
+	See the file "COPYING" for further information about the copyright
+	and warranty status of this work.
+
+    arch-tag: admin/lib/footer.inc
+!-->
+
+</td></tr></table>
+</td></tr></table>
+</body>
+</html>
diff --git a/public_html/judge/lib/header.inc b/public_html/judge/lib/header.inc
new file mode 100755
index 0000000..540085f
--- /dev/null
+++ b/public_html/judge/lib/header.inc
@@ -0,0 +1,120 @@
+<?
+#
+# Copyright (C) 2002 David Whittington
+# Copyright (C) 2003, 2004 Jonathan Geisler
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: judge/lib/header.inc
+#
+	include_once ("session.inc");
+	include_once ("config.inc");
+	include_once ("judge.inc");
+
+function judge_header($refresh_time){
+global $contest_name, $contest_host, $page_bg_color, $title_bg_color, 
+$contest_freeze_ts, $site_start_offset, $contest_end_ts, $num_queued, $num_clarifications;
+	#some sql stuff we'll use a bit later
+	$sql = "select count(*) from QUEUED_SUBMISSIONS";
+	$result = mysql_query($sql);
+	## Checking added. -sb 2006-10-05
+	if( !$result )  {
+	    print "Sorry.  Database request ($sql) failed with " . mysql_error();
+	    exit;
+	}
+
+	$row = mysql_fetch_row($result);
+	$num_queued = $row[0];
+?>
+
+
+<!DOCTYPE HTML PUBLIC "-//W3C/DTD HTML 4.0 Transitional//EN">
+<html>
+<head>
+	<title>Judging</title>
+<?
+	if($refresh_time != 0)
+	{
+		echo "<meta http-equiv='refresh' content='$refresh_time'>";	
+	}
+?>
+</head>
+<body bgcolor="<?=$page_bg_color?>" link="0000cc" alink="000066" vlink="0000cc">
+<table width="90%" align="center" cellpadding="1" cellspacing="0" border="0" bgcolor="#000000">
+	<tr><td>
+		<table width="100%" cellpadding="5" cellspacing="0" border="0">
+			<tr bgcolor="<?=$title_bg_color?>">	
+				<td>
+                                <!-- Beautification hack. 2006-09-25 -sb -->
+                                <img src="../images/favicon.ico">
+  				<font color="#ffffff">
+				<?
+				if (!$contest_name)
+				{?>
+  				<b>No contest exists yet<!-- <?=$contest_name?></b> - <small><?=$contest_host?></small> -->
+				<?}
+				else { ?>
+  				<b><?=$contest_name?></b> - <small><?=$contest_host?></small>
+				<?}?>
+  				</font>
+				</td>
+				<td align="right">
+ 					 <font color="#ffffff">
+ 					 <b>JUDGE</b>
+ 					 </font>
+				</td>
+			</tr>
+			<tr>	
+				<td bgcolor="#dcdcdc" align="left"><b>
+				<a href="start.php">Start Contest</a> &nbsp;
+				<a href="judge.php">Judge Submissions</a> &nbsp;
+				<a href="review.php">Review Judgements</a> &nbsp;
+				<a href="problems.php">Problems</a> &nbsp;
+				<a href="clarifications.php">Clarifications</a> &nbsp;
+				<a href="standings.php">Standings</a> &nbsp;
+<?
+    				    $sql  = "SELECT * ";
+				    $sql .= "FROM CLARIFICATION_REQUESTS ";
+				    $sql .= "WHERE ";
+				    $sql .= "    RESPONSE='' ";
+				    $result = mysql_query($sql);
+					$num_clarifications = mysql_num_rows($result);
+				    if($row = mysql_fetch_row($result)) {
+					echo "<font color='#ff0000'><b>";
+					echo "Clarification Requested";
+					echo "</b></font>";
+				    }
+?>
+				    
+				</td>
+				<td align="right" bgcolor="#dcdcdc">
+				<b>Official Time: <?=date("H:i:s")?></b><br/>
+<?
+				$freeze_diff = $contest_freeze_ts + $site_start_offset - time();
+				$time_till_freeze_starts = gmdate('H:i:s', $freeze_diff);
+
+				if ($freeze_diff > 0) {
+                                        print "Time left until freeze begins: ";
+                                        print $time_till_freeze_starts;
+                                        print "<br />";
+                                }
+				else {
+					print"Standings Frozen<br>";
+				}
+?>
+				Time Till Contest End: <?=gmdate("H:i:s", $contest_end_ts - time())?><br>
+				</td>
+			</tr>
+			<tr>
+				<td bgcolor="#dcdcdc"/>
+				<td align="right" bgcolor="#dcdcdc">
+				Queued Submissions: <?=$num_queued?><br>
+				Unanswered Clarifications: <?=$num_clarifications?>
+				</td>
+			</tr>
+			<tr>
+				<td bgcolor="#ffffff" colspan="2">
+<?
+	}
+?>
diff --git a/public_html/judge/lib/images/ReadMe.txt b/public_html/judge/lib/images/ReadMe.txt
new file mode 100644
index 0000000..9e3a5d2
--- /dev/null
+++ b/public_html/judge/lib/images/ReadMe.txt
@@ -0,0 +1,41 @@
+
+* The favicon
+
+  favicon.ico  --  The favicon file (supports both 16*16 and 32*32 dimensions).
+
+    You can add a favicon to your web page by uploading favicon.ico to your
+    website and inserting the following HTML tag inside the <head> ... </head>
+    section of your web page.
+
+      <link rel="shortcut icon" href="favicon.ico" >
+
+    Optional: if you would like to display the animated favicon, upload
+    animated_favicon1.gif as well and insert the following HTML tags.
+
+      <link rel="shortcut icon" href="favicon.ico" >
+      <link rel="icon" href="animated_favicon1.gif" type="image/gif" >
+
+    If you would like to test the favicon after updating your web page, the
+    Favicon Validator can check the favicon files and tags on your website.
+
+      http://www.htmlkit.com/go/favicon/validator/
+
+
+* Other extra files in this package
+
+  The following files are included for your convenience. You don't have to
+  upload or do anything else with these optional files.
+
+    preview_16x16.png  --  16*16 PNG image file of the favicon.
+    animated_favicon1.gif  --  Animated version of the favicon.
+    ReadMe.txt  --  This quick reference.
+
+
+* More information
+
+  If you have any questions, more information and tech support is available at:
+
+    http://www.htmlkit.com/go/favicon/help/
+
+
+  Thank you for using FavIcon from Pics.
diff --git a/public_html/judge/lib/images/Thumbs.db b/public_html/judge/lib/images/Thumbs.db
new file mode 100644
index 0000000..119efb9
Binary files /dev/null and b/public_html/judge/lib/images/Thumbs.db differ
diff --git a/public_html/judge/lib/images/animated_favicon1.gif b/public_html/judge/lib/images/animated_favicon1.gif
new file mode 100644
index 0000000..f7d8ada
Binary files /dev/null and b/public_html/judge/lib/images/animated_favicon1.gif differ
diff --git a/public_html/judge/lib/images/bg.png b/public_html/judge/lib/images/bg.png
new file mode 100644
index 0000000..07fab56
Binary files /dev/null and b/public_html/judge/lib/images/bg.png differ
diff --git a/public_html/judge/lib/images/favicon.ico b/public_html/judge/lib/images/favicon.ico
new file mode 100644
index 0000000..7fa19a6
Binary files /dev/null and b/public_html/judge/lib/images/favicon.ico differ
diff --git a/public_html/judge/lib/images/preview_16x16.png b/public_html/judge/lib/images/preview_16x16.png
new file mode 100644
index 0000000..c11c8c9
Binary files /dev/null and b/public_html/judge/lib/images/preview_16x16.png differ
diff --git a/public_html/judge/lib/judge.inc b/public_html/judge/lib/judge.inc
new file mode 100755
index 0000000..ba943aa
--- /dev/null
+++ b/public_html/judge/lib/judge.inc
@@ -0,0 +1,148 @@
+<?
+#
+# Copyright (C) 2002, 2003 David Whittington
+# Copyright (C) 2003, 2005, 2013 Jonathan Geisler
+# Copyright (C) 2005 Victor Replogle
+# Copyright (C) 2005 Steve Overton
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: judge/lib/judge.inc
+#
+
+include_once('database.inc');
+include_once('responses.inc');
+
+$link = mysql_connect($db_host, $db_user, $db_pass);
+if (!$link) {
+    print "Sorry.  Database connect failed.  Retrying...";
+    exit;
+}
+
+$connect_good = mysql_select_db($db_name);
+if (!$connect_good) {
+    print "Sorry.  Database selection failed.  Retrying...";
+    exit;
+}
+
+$contest_info = mysql_query("SELECT * FROM CONTEST_CONFIG");
+if (!$contest_info) {
+    print "Sorry.  Database request (CONTEST_CONFIG) failed.  Retrying...";
+    exit;
+}
+
+$row = mysql_fetch_assoc($contest_info);
+    if (mysql_num_rows($contest_info) < 1) {
+	print "Sorry.  No contest configuration information exists.<br /> ";
+	print "Please contact a system administrator.";
+	exit;
+    }
+
+    $contest_host = $row['HOST'];
+    $contest_name = $row['CONTEST_NAME'];
+    $contest_date = $row['CONTEST_DATE'];
+    list ($contest_year, $contest_month, $contest_day)
+	= split('-', $contest_date);
+
+    $contest_start_time = $row['START_TIME'];
+    list ($contest_start_hour, $contest_start_minute)
+	= split(':', $contest_start_time);
+    $contest_freeze_time = $row['FREEZE_DELAY'];
+    $contest_end_time = $row['CONTEST_END_DELAY'];
+    $base_dir = $row['BASE_DIRECTORY'];
+
+    $judge_user = $row['JUDGE_USER'];
+    $judge_pass = $row['JUDGE_PASS'];
+
+#    $contest_start_ts = mktime($contest_start_hour,
+#			       $contest_start_minute,
+#			       0,
+#			       $contest_month,
+#			       $contest_day,
+#			       $contest_year);
+	$contest_start_ts = $row['START_TS'];
+    $contest_freeze_ts = $contest_start_ts + $contest_freeze_time;
+    $contest_end_ts = $contest_start_ts + $contest_end_time;
+    if(time() > $contest_end_ts) {
+#	system("crontab $base_dir/stop_contest.crontab", $result);
+	system("rm -f $base_dir/../active-contests/$contest_name", $result);
+        if ($result != 0){
+                echo "<p><font color=$hd_txt_color2>Warning! Crontab Failed to start, please contact the system administrator</font></p>";
+        }
+    }
+	$contest_started = $row['HAS_STARTED'];
+
+$teams_query = mysql_query("SELECT * FROM TEAMS");
+if (!$teams_query) {
+    # Added the "mysql_error() part. -sb 2006-10-05
+    print "Sorry.  Database request (TEAMS) failed with " . mysql_error() . " Retrying...";
+    exit;
+}
+$num_teams = mysql_num_rows($teams_query);
+while ($row = mysql_fetch_assoc($teams_query)) {
+    $team_id = $row['TEAM_ID'];
+    $team_user = $row['USERNAME'];
+    $teams[$team_id]['user'] = $team_user;
+
+    $teams[$team_id]['id'] = $team_id;
+    $users[$team_user]['team_id'] = $team_id;
+
+    $team_name = $row['TEAM_NAME'];
+    $teams[$team_id]['name'] = $team_name;
+    $users[$team_user]['team_name'] = $team_name;
+
+    $teams[$team_id]['school'] = $row['ORGANIZATION'];
+
+    $team_password = $row['PASSWORD'];
+    $teams[$team_id]['password'] = $team_password;
+    $users[$team_user]['password'] = $team_password;
+}
+
+$sql = "SELECT ct.TEAM_ID, c.CATEGORY_NAME";
+$sql .= " FROM CATEGORY_TEAM ct, CATEGORIES c";
+$sql .= " WHERE ct.CATEGORY_ID = c.CATEGORY_ID";
+$categories_query = mysql_query($sql);
+if (!$categories_query) {
+    print "Sorry.  Database request (CATEGORIES) failed.  Retrying...";
+    exit;
+}
+while ($row = mysql_fetch_assoc($categories_query)) {
+    $cat_name = $row['CATEGORY_NAME'];
+    if ($cat_name) {
+	$categories[$cat_name]['name'] = $cat_name;
+	if (!isset($categories[$cat_name]['team_ids']) || 
+	    !is_array($categories[$cat_name]['team_ids'])) {
+	    $categories[$cat_name]['team_ids'] = array();
+	}
+	array_push($categories[$cat_name]['team_ids'], $row['TEAM_ID']);
+	//print $categories[$cat_name]['team_ids'].$row['TEAM_ID']."<br />";
+    }
+}
+
+$problems_query = mysql_query("SELECT * FROM PROBLEMS ORDER BY PROBLEM_ID");
+if (!$problems_query) {
+    print "Sorry.  Database request (PROBLEMS) failed.  Retrying...";
+    exit;
+}
+$num_problems = mysql_num_rows($problems_query);
+while ($row = mysql_fetch_assoc($problems_query)) {
+    $problem_id = $row['PROBLEM_ID'];
+    $problems[$problem_id]['id'] = $row['PROBLEM_ID'];
+    $problems[$problem_id]['name'] = $row['PROBLEM_NAME'];
+    $problems[$problem_id]['loc'] = $row['PROBLEM_LOC'];
+    $problems[$problem_id]['note'] = $row['PROBLEM_NOTE'];
+}
+
+$responses_query = mysql_query("SELECT * FROM RESPONSES");
+if (!$responses_query) {
+    print "Sorry.  Database request (RESPONSES) failed.  Retrying...";
+    exit;
+}
+while ($row = mysql_fetch_assoc($responses_query)) {
+    $response_id = $row['RESPONSE_ID'];
+    $responses[$response_id]['id'] = $response_id;
+    $responses[$response_id]['response'] = $row['RESPONSE'];
+    $responses[$response_id]['color'] = $row['RESPONSE_COLOR'];
+}
+?>
diff --git a/public_html/judge/lib/responses.inc b/public_html/judge/lib/responses.inc
new file mode 100755
index 0000000..fa9af92
--- /dev/null
+++ b/public_html/judge/lib/responses.inc
@@ -0,0 +1,12 @@
+<?php
+define("ENONE",0);
+define("EFILETYPE",1);
+define("EFORBIDDEN",2);
+define("ECOMPILE",3);
+define("ERUNLENGTH",4);
+define("ERUNTIME",5);
+define("EINCORRECT",6);
+define("EFORMAT",7);
+define("EUNKNOWN",8);
+define("ECORRECT",9);
+?>
diff --git a/public_html/judge/lib/session.inc b/public_html/judge/lib/session.inc
new file mode 100755
index 0000000..421ac26
--- /dev/null
+++ b/public_html/judge/lib/session.inc
@@ -0,0 +1,22 @@
+<?
+#
+# Copyright (C) 2002 David Whittington
+# Copyright (C) 2005 Steve Overton
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: judge/lib/session.inc
+#
+    include_once("judge.inc");
+#
+    session_name("TOUCHE-$db_name");
+    session_start();
+	header ("expires:Tuesday, 25 Apr 1995 09:30:00 -0700");
+	if(   $_SESSION['judge_username'] != $judge_user 
+	   || $_SESSION['judge_password'] != $judge_pass)
+	{
+	    header ("Location: index.php?state=2");
+	    exit(0);
+	}
+?>
diff --git a/public_html/judge/lib/submissions.inc b/public_html/judge/lib/submissions.inc
new file mode 100755
index 0000000..412ada3
--- /dev/null
+++ b/public_html/judge/lib/submissions.inc
@@ -0,0 +1,284 @@
+<?
+#
+# Copyright (C) 2005 Steve Overton
+# Copyright (C) 2005 David Crim
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/judge.php
+#
+# Set up default directories
+
+if($_SERVER['REQUEST_METHOD'] == 'POST' && !$_POST['team']) {
+    if ($page == "judge.php"){
+	$set = "SET RESPONSE_ID = $_POST[result], JUDGED = 1 ";
+    }	
+    else{
+	$sql = "SELECT JUDGED ";
+	$sql .= "FROM JUDGED_SUBMISSIONS ";
+	$sql .= "WHERE JUDGED_ID = $_POST[judged_id] ";
+
+	$sql_result = mysql_query($sql);
+        if(!$sql_result) {
+        	sql_error($sql);
+        }
+        $row = mysql_fetch_assoc($sql_result);
+	$judged = $row['JUDGED'] + 1;
+
+	$set = "SET RESPONSE_ID = $_POST[result], JUDGED = $judged ";
+
+    }
+    
+    $sql  = "UPDATE JUDGED_SUBMISSIONS ";
+    $sql .= $set;
+    $sql .= "WHERE JUDGED_ID = $_POST[judged_id] ";
+
+    $result = mysql_query($sql);
+    if(!$result) {
+        sql_error($sql);
+    }
+    ob_flush();
+    sleep(2);
+}
+if ($_POST['team']){
+	$_SESSION['team'] = $_POST['team'];
+}
+
+$team_filter = $_SESSION['team'];
+
+$sql = "SELECT * ";
+$sql .= "FROM PROBLEMS";
+$sql_result = mysql_query($sql);
+if (!$sql_result){
+	sql_error($sql);
+}
+echo "<center>";
+
+# Checks to make sure that there are problems to judge
+if($row = mysql_fetch_assoc($sql_result)){
+	echo "Problems: ";
+	
+	if(!$_GET){
+		echo "All ";
+		echo "| <a href='$page?problem=" . $row['PROBLEM_NAME'] . "'>" . $row['PROBLEM_NAME'] . "</a> ";
+		while ($row = mysql_fetch_assoc($sql_result)){
+			echo "| <a href='$page?problem=" . $row['PROBLEM_NAME'] . "'>" . $row['PROBLEM_NAME'] . "</a> ";
+		}
+		$problem_name = "ALL";
+	}
+	else{
+		echo "<a href='$page'>All</a> ";
+		$problem_name = $_GET['problem'];
+		if ($row['PROBLEM_NAME'] == $problem_name){
+			echo "| $problem_name ";
+			$problem_id = $row['PROBLEM_ID'];
+		}
+		else{
+			echo "| <a href='$page?problem=" . $row['PROBLEM_NAME'] . "'>" . $row['PROBLEM_NAME'] . "</a> ";
+		}
+
+		while ($row = mysql_fetch_assoc($sql_result)){
+			if ($row['PROBLEM_NAME'] == $problem_name){
+		        	echo "| $problem_name ";
+				$problem_id = $row['PROBLEM_ID'];				
+			}
+			else{
+			       echo "| <a href='$page?problem=" . $row['PROBLEM_NAME'] . "'>" . $row['PROBLEM_NAME'] . "</a> ";
+			}
+		}
+	}
+	echo "</center>\n";
+
+	$sql = "SELECT * ";
+	$sql .= "FROM CONTEST_CONFIG ";
+
+	$sql_result = mysql_query($sql);
+
+	if(!$sql_result){
+		sql_error($sql);
+	}
+	
+	$row = mysql_fetch_assoc($sql_result);
+	$start_ts = $row['START_TS'];
+	$team_show = $row['TEAM_SHOW'];
+
+	#get the teams for the drop down box
+	if ($team_show == 1)
+		$select = "TEAM_NAME";
+	else
+		$select = "TEAM_ID"; 
+	$sql = "SELECT $select FROM TEAMS ORDER BY $select";
+	$sql_result = mysql_query($sql);
+        if(!$sql_result){
+                sql_error($sql);
+        }
+	#enter the teams into a drop down box
+	echo "<center><form action='" . $_SERVER['PHP_SELF'] . "?" . $_SERVER['QUERY_STRING'] . "' method=POST name='teamFilter'>\n";
+	echo "Filter By Team: <select name='team' onChange='teamFilter.submit()'>\n";
+	if ($team_filter == "all")
+		echo "<option value='all' selected>All</option>\n";
+	else
+		echo "<option value='all'>All</option>\n";
+
+	while($row = mysql_fetch_assoc($sql_result)){
+		echo "<option value='$row[$select]'";
+		if($row[$select] == $team_filter)
+			echo" selected";
+		echo">$row[$select]</option>\n";
+	}
+	echo "</select></form></center>";
+	
+	#get all problems ordered by their time stape
+	if ($page == "judge.php"){
+		$sql = "SELECT * ";
+		$sql .= "FROM JUDGED_SUBMISSIONS JS ";
+		$sql .= "INNER JOIN TEAMS T ON JS.TEAM_ID = T.TEAM_ID ";
+		$sql .= "INNER JOIN PROBLEMS P ON P.PROBLEM_ID = JS.PROBLEM_ID ";
+		$sql .= "WHERE JS.JUDGED = 0 ";
+	}
+	else{
+		$sql = "SELECT * ";
+        	$sql .= "FROM JUDGED_SUBMISSIONS JS INNER JOIN TEAMS  T ON JS.TEAM_ID = T.TEAM_ID
+                	INNER JOIN PROBLEMS P ON P.PROBLEM_ID = JS.PROBLEM_ID
+                	INNER JOIN RESPONSES R ON R.RESPONSE_ID = JS.RESPONSE_ID ";
+        	$sql .= "WHERE NOT JUDGED = 0 ";
+
+	}
+	#if there is a team filter specified
+	if (isset($_SESSION['team'])){
+		if ($team_filter != "all"){
+			if ($select == "TEAM_NAME")
+				$team_filter = "'$team_filter'";
+	        		
+			$sql .= "AND T.$select = " . $team_filter . " ";
+		}
+	}
+
+	#if the judge has selected a specific problem limit to that problem
+	if($problem_name != "ALL"){
+		$sql .= "AND JS.PROBLEM_ID = $problem_id ";
+	}
+	$sql .= "ORDER BY JS.TS";
+	
+	$sql_result = mysql_query($sql);
+
+	if(!$sql_result){
+		sql_error($sql);
+	}
+	if (mysql_num_rows($sql_result) == 0)
+		$end_string = "there are no submissions for this problem";	
+	if ($team_show == 0)
+        	$team_id = "Team ID";
+        else
+                $team_id = "Team Name";
+
+	# display appropreate queued submissions
+	echo "<br><table align=center bgcolor=#000000 width=50%
+	cellpadding=0 cellspacing=0 border=0><tr><td>\n";
+	echo "<table align=center width=100% cellpadding=5 cellspacing=1 border=0>\n";
+	echo "<tr><td colspan=6 align=center bgcolor=$hd_bg_color1>\n";
+	echo "<font color=$hd_txt_color1><b>Submissions Queued for Judging</b></font></td></tr>\n";
+	echo "<tr><td bgcolor=$hd_bg_color2>Submission Time</td>\n";
+	echo "<td bgcolor=$hd_bg_color2 align=center>Problem</td>\n";
+	echo "<td bgcolor=$hd_bg_color2 align=center>$team_id</td>\n";
+	echo "<td bgcolor=$hd_bg_color2 align=center>Attempt</td>\n";
+	if ($page == "judge.php"){
+		echo "<td bgcolor=$hd_bg_color2 align=center>Auto Response</td>\n";
+        }
+        else{
+		echo "<td bgcolor=$hd_bg_color2 align=center>Current Response</td>\n";
+        }
+	echo "<td bgcolor=$hd_bg_color2 align=center>Go to judging page</td></tr>\n";
+	    
+	while($row = mysql_fetch_assoc($sql_result)){
+		#calculate time sence start of contest
+		$submit_ts = $row['TS'];
+		// turns out we only want to display min
+		//$hours = intval(($submit_ts - $start_ts)/3600);
+		//$min = intval((($submit_ts - $start_ts)%3600)/60);
+		//$sec = (($submit_ts - $start_ts)%3600)%60;
+		$min = intval(($submit_ts - $start_ts)/60);
+		
+		#check to see if the submission has already been viewed or not so that other judges won't look at submissions already being viewed
+		///html doesn't work this way
+		if ($page == "judge.php"){
+			$viewed = $row['VIEWED'];
+			$sql = "SELECT * ";
+			$sql .= "FROM AUTO_RESPONSES AR INNER JOIN RESPONSES R ON R.RESPONSE_ID = AR.AUTO_RESPONSE ";
+			$sql .= "WHERE AR.JUDGED_ID = " . $row['JUDGED_ID']. " ";
+		
+			$response_result = mysql_query($sql);
+        		if(!$response_result){
+                		sql_error($sql);
+        		}
+			
+			if (mysql_num_rows($response_result) == 0){
+				$response = "pending";
+			}
+			else{
+				$response_row = mysql_fetch_assoc($response_result);
+				$response = $response_row['RESPONSE'];
+				$response_id = $response_row['RESPONSE_ID'];
+				while($response_row = mysql_fetch_assoc($response_result)){
+					if($response_id != ECORRECT){
+						if($response_id != $response_row['RESPONSE_ID'] && $response_row['RESPONSE_ID'] != ECORRECT){
+							$response = "Multiple Responses";
+						}
+					}
+					elseif ($response_row['RESPONSE_ID'] != ECORRECT){
+						$response = $response_row['RESPONSE'];
+						$response_id = $response_row['RESPONSE_ID'];
+					}
+							
+				}
+			}
+		}
+		else{
+			$viewed = $row['JUDGED'] - 1;
+			$response = $row['RESPONSE'];
+		}
+
+		$color_preserve = $data_bg_color1;
+		
+		if($viewed != 0)
+			$data_bg_color1 = $data_bg_color2;
+
+
+
+		if ($team_show == 0)
+			$team_id = $row['TEAM_ID'];
+		else
+			$team_id = $row['TEAM_NAME'];
+		
+		echo "<tr><td bgcolor=$data_bg_color1>$min</td>\n";
+		echo "<td bgcolor=$data_bg_color1 align=center>" . $row['PROBLEM_NAME'] . "</td>\n";
+		echo "<td bgcolor=$data_bg_color1 align=center>" . $team_id . "</td>\n";
+		echo "<td bgcolor=$data_bg_color1 align=center>" . $row['ATTEMPT'] . "</td>\n";
+		echo "<td bgcolor=$data_bg_color1 align=center>$response</td>\n";
+		echo "<td bgcolor=$data_bg_color1 align=center><a href='judge_response.php?judged_id=" . 
+			$row['JUDGED_ID'] . "&team_id=" . $team_id . 
+			"&problem=" . $row['PROBLEM_ID'] . "&attempt=" . $row['ATTEMPT'] . "&page=$page'>judge submission</a></td>\n";
+		echo "</tr>\n";					    
+		
+		$data_bg_color1 = $color_preserve;
+
+	}
+	echo "</table></table>\n";
+	echo "<center>$end_string</center>\n";
+	
+	
+}
+else{
+	echo "there are curently no problems in this contest";
+	echo "</center>\n";
+}
+echo "</body></html>";
+
+# SQL ERROR
+# Input: $sql - the query with the error
+function sql_error($sql) {
+    echo "<br>Error in SQL command: $sql";
+    die;
+}
+?>
diff --git a/public_html/judge/main.php b/public_html/judge/main.php
new file mode 100755
index 0000000..8650fa5
--- /dev/null
+++ b/public_html/judge/main.php
@@ -0,0 +1,19 @@
+<?
+#
+# Copyright (C) 2005 Steve Overton
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: judge/main.php
+#
+    include_once("lib/config.inc");
+    include_once("lib/judge.inc");
+    include_once("lib/header.inc");
+#
+judge_header(0);
+echo "<center>Please select an option.</center>";
+
+
+
+include_once("lib/footer.inc");
diff --git a/public_html/judge/problems.php b/public_html/judge/problems.php
new file mode 100755
index 0000000..83e181d
--- /dev/null
+++ b/public_html/judge/problems.php
@@ -0,0 +1,55 @@
+<?
+#
+# Copyright (C) 2003 David Whittington
+# Copyright (C) 2003 Jonathan Geisler
+# Copyright (C) 2005 Steve Overton
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: judge/problems.php
+#
+    include_once("lib/config.inc");
+    include_once("lib/judge.inc");
+    include_once("lib/header.inc");
+    include_once("lib/database.inc");
+    include_once("lib/session.inc");
+    include_once("../lib/data.inc");
+
+judge_header(0);
+echo "<br><table align=center bgcolor=#000000 width=50%
+    cellpadding=0 cellspacing=0 border=0><tr><td>\n";
+echo "<table align=center width=100% cellpadding=5 cellspacing=1 border=0>\n";
+echo "<tr><td colspan=5 align=center bgcolor=$hd_bg_color1>\n";
+echo "<font color=$hd_txt_color1><b>Problems Listing</b></font></td></tr>\n";
+
+
+#echo "<table width=400 align=center>\n";
+echo "<tr><td bgcolor=$hd_bg_color2>Problem Name</td>";
+echo "<td bgcolor=$hd_bg_color2 align=center>HTML</td>";
+#echo "<td bgcolor=$hd_bg_color2 align=center>PS</td>";
+echo "<td bgcolor=$hd_bg_color2 align=center>PDF</td></tr>";
+#echo "<tr><td bgcolor=$data_bg_color1>All problems</td>";
+#echo "<td bgcolor=$data_bg_color1 align=center>";
+#echo "<a href='../$problem_url/problems.html'>HTML</td>";
+//echo "<td bgcolor=$data_bg_color1 align=center>";
+//echo "<a href='$problem_url/problems.ps'>PS</td>";
+#echo "<td bgcolor=$data_bg_color1 align=center>";
+#echo "<a href='../$problem_url/problems.pdf'>PDF</td>";
+#echo "</tr>";
+
+foreach ($problems as $problem) {
+    echo "<tr><td bgcolor=$data_bg_color1>$problem[id] - $problem[name]</td>";
+    echo "<td bgcolor=$data_bg_color1 align=center>";
+    echo "<a href='../$problem_url/$problem[loc]/$problem[name].html'>HTML</a></td>";
+  //  echo "<td bgcolor=$data_bg_color1 align=center>";
+  //  echo "<a href='$problem_url/$problem[loc]/problem.ps'>PS</a></td>";
+    echo "<td bgcolor=$data_bg_color1 align=center>";
+    echo "<a href='../$problem_url/$problem[loc]/$problem[name].pdf'>PDF</a></td>";
+    echo "</tr>";
+}
+echo "</table>\n";
+
+    include("lib/footer.inc");
+?>
+
diff --git a/public_html/judge/respond_to_clarification.php b/public_html/judge/respond_to_clarification.php
new file mode 100755
index 0000000..1039816
--- /dev/null
+++ b/public_html/judge/respond_to_clarification.php
@@ -0,0 +1,36 @@
+<?php
+#
+# Copyright (C) 2002 David Whittington
+# Copyright (C) 2005 Steve Overton
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/respond_to_clarification.php
+#
+	include_once("lib/config.inc");
+	include_once("lib/judge.inc");
+	include_once("lib/session.inc");
+
+	$clarification_id = $_POST['clarification_id'];
+	$response = $_POST['response'];
+	$broadcast = $_POST['broadcast'];
+	$problem = $_POST['problem'];
+
+	if($clarification_id != 0) {
+		$sql  = "UPDATE CLARIFICATION_REQUESTS ";
+		$sql .= "SET RESPONSE='".mysql_real_escape_string($response)."', ";
+		$sql .= "    REPLY_TS='".time()."', ";
+		$sql .= "    BROADCAST='$broadcast' ";
+		$sql .= "WHERE CLARIFICATION_ID='$clarification_id' ";
+	}
+	else {
+		$sql = "INSERT INTO CLARIFICATION_REQUESTS ";
+		$sql .= "(CLARIFICATION_ID, TEAM_ID, PROBLEM_ID, SUBMIT_TS, QUESTION, REPLY_TS, RESPONSE, BROADCAST)";
+		$sql .= "VALUES ('', '0', '$problem', '".time()."', 'Clarification initiated by judge', '".time();
+		$sql .= "', '".mysql_real_escape_string($response)."', '$broadcast');";
+	}
+	mysql_query($sql);
+	header("location: clarifications.php");
+	exit(0);
+?>
diff --git a/public_html/judge/review.php b/public_html/judge/review.php
new file mode 100755
index 0000000..e368184
--- /dev/null
+++ b/public_html/judge/review.php
@@ -0,0 +1,25 @@
+<?
+#
+# Copyright (C) 2005 Steve Overton
+# Copyright (C) 2005 David Crim
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: admin/judge.php
+#
+    include_once("lib/config.inc");
+    include_once("lib/judge.inc");
+    include_once("lib/header.inc");
+#
+
+judge_header(60);
+# Set up default directories
+$problem_handle['queue_dir'] = "$base_dir/queue/";
+$problem_handle['judged_dir'] = "$base_dir/judged/";
+$problem_handle['data_dir'] = "$base_dir/data/";
+
+$page = "review.php";
+include_once("lib/submissions.inc")
+
+?>
diff --git a/public_html/judge/standings.php b/public_html/judge/standings.php
new file mode 100755
index 0000000..2e06660
--- /dev/null
+++ b/public_html/judge/standings.php
@@ -0,0 +1,279 @@
+<?php
+#
+# Copyright (C) 2002 David Whittington
+# Copyright (C) 2005 Jonathan Geisler
+# Copyright (C) 2005 Victor Replogle
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: judge/standings.php
+#
+    include_once("lib/config.inc");
+    include_once("lib/judge.inc");
+    include_once("lib/session.inc");
+    include_once("lib/header.inc");
+#
+judge_header(60);
+
+if (!isset($HTTP_GET_VARS['selected_category'])) {
+    $selected_category = "Overall";
+} else {
+    $selected_category = $HTTP_GET_VARS['selected_category'];
+}
+
+echo "<center>Categories: \n";
+if ($selected_category=="Overall") {
+    echo "Overall";
+} else {
+    echo "<a href=\"standings.php?selected_category=Overall\">Overall</a>";
+}
+
+foreach ($categories as $category) {
+    if ($selected_category == $category['name']) {
+	echo " | $category[name]";
+    }
+    else {
+    	echo " | <a href=\"standings.php?selected_category=$category[name]\">";
+	echo "$category[name]</a>";
+    }
+}
+echo "</center>\n";
+
+if ($selected_category == "Overall") {
+    $i=0;
+    foreach ($teams as $team) {
+	$standings[$i]['team_id'] = $team['id'];
+	$standings[$i]['team_name'] = $team['name'];
+	if(!isset($standings[$i]['penalty'])){
+	    $standings[$i]['penalty'] = 0;
+	}
+	if(!isset($standings[$i]['problems_completed'])){
+	    $standings[$i]['problems_completed'] = 0;
+	}
+	$i++;
+    }
+}
+else {
+    $i=0;
+    foreach ($categories[$selected_category]['team_ids'] 
+	as $category_team_id) {
+	$standings[$i]['team_id'] = $category_team_id;
+	$standings[$i]['team_name'] 
+    	    = $teams[$category_team_id]['name'];
+	if(!isset($standings[$i]['penalty'])){
+	    $standings[$i]['penalty'] = 0;
+	}
+	if(!isset($standings[$i]['problems_completed'])){
+	    $standings[$i]['problems_completed'] = 0;
+	}
+	$i++;
+    }
+}
+
+for ($i = 0; $i < count($standings); $i++) {
+    $sql  = "SELECT PROBLEM_ID, TS, ATTEMPT, RESPONSE_ID ";
+    $sql .= "FROM JUDGED_SUBMISSIONS ";
+    $sql .= "WHERE ";
+    $sql .= "    TEAM_ID='" . $standings[$i]['team_id'] . "' ";
+    $sql .= "ORDER BY PROBLEM_ID, ATTEMPT ASC ";
+    $result = mysql_query($sql);
+
+    while($row = mysql_fetch_assoc($result)) {
+	if($row['RESPONSE_ID'] == 9) {
+	    // each incorrect submission counts as 20 penalty points
+	    $incorrect_submission_penalty = ($row['ATTEMPT'] - 1) * 20;
+	    // each minute counts as one penalty point
+	    $time_penalty = (int) ((($row['TS'] - $contest_start_ts) / 60)/* + 0.5*/);
+	    $standings[$i]['problems'][$row['PROBLEM_ID']]['ts'] = $row['TS'];
+	    $standings[$i]['problems'][$row['PROBLEM_ID']]['penalty'] = $time_penalty + $incorrect_submission_penalty;
+	    if(!isset($standings[$i]['problems_completed'])){
+		$standings[$i]['problems_completed'] = 0;
+	    }
+	    $standings[$i]['problems_completed']++;
+	} 
+	$standings[$i]['problems'][$row['PROBLEM_ID']]['attempt'] = $row['ATTEMPT'];
+	$standings[$i]['problems'][$row['PROBLEM_ID']]['response_id'] = $row['RESPONSE_ID'];
+    }
+}
+
+// total up the penalty points
+for($i=0; $i < count($standings); $i++) {
+    if(isset($problems)) {
+	foreach ($problems as $problem) {
+	    if(!isset($standings[$i]['problems'])){
+		$standings[$i]['problems'] = 0;
+	    }
+	    $standings[$i]['penalty'] 
+		+= $standings[$i]['problems'][$problem['id']]['penalty'];
+	}
+    }
+}
+
+function cmp ($a, $b) {
+    if ($a['problems_completed'] > $b['problems_completed']) {
+	return -1;
+    }
+    elseif ($a['problems_completed'] < $b['problems_completed']) {
+    	return 1;
+    }
+    else {
+	if ($a['penalty'] < $b['penalty']) {
+    	    return -1;
+	}
+	elseif ($a['penalty'] > $b['penalty']) {
+	    return 1;
+	}
+    }
+    return 0;
+}
+	
+usort($standings, "cmp");
+
+//find the first team that is not exhibition
+$x = 0;
+while(checkexhib($standings[$x]['team_id']) == 1) {
+	$standings[$x]['rank'] = '-';
+	$x++;
+}
+$standings[$x]['rank'] = 1;
+$current_rank = 1;
+    for($i=$x+1; $i < count($standings); $i++) {
+        
+	//check to see if the team is exhibition, if it is, don't rank them
+	$excheck = checkexhib($standings[$i]['team_id']);
+
+	//echo $standings[$i]['team_id'] ." - " . $excheck . "<br>";
+	if($excheck == 1)
+	{
+		$standings[$i]['rank'] = '-';
+	}
+	else
+	{
+		if($standings[$i]['problems_completed'] == $standings[$i-1]['problems_completed'] &&
+	       	     $standings[$i]['penalty'] == $standings[$i-1]['penalty'])
+	        {
+	                #if the problems completed and the penalty seconds are the same then they are the same rank
+	        }
+	        else
+	        {
+	                $current_rank++;
+	        }
+	        $standings[$i]['rank'] = $current_rank;
+	}
+    }
+
+#for($i=1; $i < count($standings); $i++) {
+#    if($standings[$i]['problems_completed'] != $standings[$i-1]['problems_completed'] && $standings[$i]['penalty'] == $standings[$i-1]['penalty'])
+#    {
+#    	#if the problems completed and the penalty seconds are the same, then they are the same rank
+#    }
+#    else
+#    {
+#	$current_rank++;
+#    }
+#    $standings[$i]['rank'] = $current_rank;
+#}
+
+echo "<br><table align=center bgcolor=#000000 width=90% cellpadding=0 cellspacing=0 border=0><tr><td>\n";
+echo "<table align=center width=100% cellpadding=5 cellspacing=1 border=0>\n";
+echo "<tr><td colspan=99 align=center bgcolor=";
+    if($contest_freeze_ts < time()) {
+        echo "red>";
+    }
+    else {
+        echo "$hd_bg_color1>";
+    }
+echo "<font color=$hd_txt_color1><b>Standings</b></font></td></tr>\n";
+echo "<tr bgcolor=$hd_bg_color2>\n";
+echo "<td>&nbsp</td>\n";
+echo "<td align=center><font color=$hd_txt_color2><b>Team Name</b></font></td>\n";
+for($i=1; $i<=$num_problems; $i++) {
+    echo "<td align=center><font color=$hd_txt_color2>";
+    echo "<b>Prob #$i</b></font></td>";
+}
+echo "<td align=center><font color=$hd_txt_color2><b>Completed</b></font></td>";
+echo "</tr>\n";
+
+for($i=0; $i<count($standings); $i++) {
+    if($i%2 == 0) {
+	echo "<tr bgcolor=\"$data_bg_color1\">\n";
+    }
+    else {
+	echo "<tr bgcolor=\"$data_bg_color2\">\n";
+    }
+    echo "<td>\n";
+    echo "<font face=\"Arial\" size=\"3\">\n";
+    echo trim($standings[$i]['rank']);
+    echo "</font>\n";
+    echo "</td>\n";
+
+    echo "<td>\n";
+    echo "<font face=\"Arial\" size=\"3\">\n";
+    echo $standings[$i]['team_name'];
+    echo "</font>\n";
+    echo "</td>\n";
+
+	foreach($problems as $problem) {
+	echo "<td align=center>\n";
+	echo "<font face=arial size=3>\n";
+	if(isset($standings[$i]['problems'][$problem['id']]['penalty'])) {
+	    echo $standings[$i]['problems'][$problem['id']]['penalty'];
+	}
+	else {
+	    echo "--";
+	}
+	echo "/";
+	if(isset($standings[$i]['problems'][$problem['id']]['attempt'])) {
+	    echo $standings[$i]['problems'][$problem['id']]['attempt'];
+	}
+	else {
+    	    echo "--";
+	}
+	echo "</font>\n";
+	echo "</td>\n";
+    }
+
+    echo "<td align=center>\n";
+    if(!isset($standings[$i]['problems_completed']) || $standings[$i]['problems_completed']==0) {
+	echo "0";
+    }
+    else {
+	echo $standings[$i]['problems_completed'];
+    }
+    echo " ";
+    if(!isset($standings[$i]['penalty']) || $standings[$i]['penalty']==0) {
+	echo "(0)";
+    }
+    else {
+	echo "(".$standings[$i]['penalty'].")";
+    }
+
+    echo "</td>\n";
+    echo "</tr>\n";
+}
+echo "</table>\n";
+echo "</table>\n";
+echo "<br>\n";
+//---------------------------------------------------------
+# Broken -- does generate PDF doc, but way off.
+echo "[<!--<a href=\"export_pdf.php\">-->PDF View<!--</a>--> - tba]\n";
+//---------------------------------------------------------
+include("lib/footer.inc");
+
+function checkexhib($team)
+{
+	global $selected_category;
+	if($selected_category != 'Exhibition') {
+		$sql  = "SELECT * FROM CATEGORIES AS C, CATEGORY_TEAM AS T WHERE C.CATEGORY_ID = T.CATEGORY_ID AND C.CATEGORY_NAME = 'Exhibition'";
+		$sql .= " AND T.TEAM_ID = $team";
+		$ex = mysql_query($sql);
+		$num_rows = mysql_num_rows($ex);
+		return $num_rows;
+	}
+	else {
+		#allows teams to be ranked if they are exhibition if the page is exhibition
+		return 0;
+	}
+}
+?>
diff --git a/public_html/judge/start.php b/public_html/judge/start.php
new file mode 100755
index 0000000..c7b7862
--- /dev/null
+++ b/public_html/judge/start.php
@@ -0,0 +1,153 @@
+<?
+#
+# Copyright (C) 2013 Jonathan Geisler
+# Copyright (C) 2005 David Crim
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: judge/start.php
+#
+include_once("lib/config.inc");
+include_once("lib/judge.inc");
+include_once("lib/header.inc");
+
+judge_header(0);
+
+function make_file_readable($fp, $missing_files) {
+	if (file_exists($fp)) {
+		chmod($fp, 0755);
+	} else {
+		++$missing_files;
+	}
+}
+
+if($_POST['submit'] == 'Start')
+{
+	$cur_hour = date(G);
+	$cur_minute = date(i);
+	$cur_second = date(s);
+#	system("crontab $base_dir/start_contest.crontab", $result);
+	system("touch $base_dir/../active-contests/$contest_name", $result);
+        if ($result != 0){
+                echo "<p><font color=$hd_txt_color2>Warning! Crontab Failed to start, please contact the system administrator</font></p>";
+        }
+
+	foreach($_POST['chksite'] as $site)
+	{
+		if($site == 'contest')
+		{
+			$contest_started = true;
+//set permissions for html and pdf files
+$sql = "SELECT * FROM PROBLEMS";
+$result = mysql_query($sql);
+if(mysql_num_rows($result) > 0) { 
+       while($row = mysql_fetch_assoc($result)){
+		$dir_name = "../problems/" . $row['PROBLEM_LOC'];
+		chmod($dir_name, 0755);
+
+		$missing_files = 0;
+		$problem_name = "$dir_name/" . $row['PROBLEM_NAME'];
+		make_file_readable("$problem_name.html", &$missing_files);
+		make_file_readable("$problem_name.ps", &$missing_files);
+		make_file_readable("$problem_name.pdf", &$missing_files);
+		if ($missing_files == 3) {
+			echo "Warning: no problem file for " . $row['PROBLEM_NAME'] . "<br />";
+		}
+        }
+}
+	//		print "cur hour: $cur_hour cur minute: $cur_minute cur second: $cur_second";
+			$sql = "UPDATE CONTEST_CONFIG set START_TIME = '$cur_hour:$cur_minute:$cur_second'";
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				print "Grevious error: update failed: " . mysql_error() . "\n<br>$sql";
+			}
+			$sql = "UPDATE CONTEST_CONFIG set START_TS = '" . time() . "'";
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				print "Grevious error: update failed: " . mysql_error() . "\n<br>$sql";
+			}
+			$sql = "UPDATE CONTEST_CONFIG set HAS_STARTED = '1'";
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				print "Grevious error: update failed: " . mysql_error() . "\n<br>$sql";
+			}
+		}
+		else
+		{
+			$sql = "UPDATE SITE set START_TIME = '$cur_hour:$cur_minute:$cur_second' WHERE SITE_ID = '$site'";
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				print "Grevious error: update failed: " . mysql_error() . "\n<br>$sql";
+			}
+			$sql = "UPDATE SITE set START_TS = '" . time() . "' WHERE SITE_ID = '$site'";
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				print "Grevious error: update failed: " . mysql_error() . "\n<br>$sql";
+			}
+			$sql = "UPDATE SITE set HAS_STARTED = '1' WHERE SITE_ID = '$site'";
+			$result = mysql_query($sql);
+			if(!$result)
+			{
+				print "Grevious error: update failed: " . mysql_error() . "\n<br>$sql";
+			}
+		}
+	}
+}
+
+echo "<form action=start.php method=post>";
+echo "<table align=center width=60% cellpadding=5 cellspacing=1 border=0>\n";
+echo "<tr><td colspan=2 align=center bgcolor=$hd_bg_color1>\n";
+echo "<font color=$hd_txt_color1><b>Start Contest</b></font></td></tr>\n";
+echo "<tr><td bgcolor=$hd_bg_color2>Start contest</td><td bgcolor=$hd_bg_color2 align=center>";
+//$cur_time = time();
+if(!$contest_started)
+{
+	echo "<input type=checkbox name=chksite[] value='contest'>";
+}
+else
+{
+	echo "<input type=checkbox name=chksite[] value='contest' disabled checked>";
+//	$contest_started = true;
+}
+
+echo "</td></tr>";
+
+$sql = "SELECT * FROM SITE";
+$result = mysql_query($sql);
+if(!$result)
+{
+	echo "<tr><td bgcolor=$hd_bg_color2>SELECT from SITE table failed</tr></td>";
+}
+
+while($row = mysql_fetch_assoc($result))
+{
+	echo "<tr><td bgcolor=$data_bg_color1>" . $row['SITE_NAME'];
+	echo "</td><td align=center bgcolor=$data_bg_color1>";
+	if(!$contest_started)
+	{	
+		echo "<input type=checkbox name=chksite[] value='" . $row['SITE_ID'] . "' disabled></td></tr>";
+	}
+	else
+	{
+		$site_started = $row['HAS_STARTED'];
+		if(!$site_started)
+		{
+			echo "<input type=checkbox name=chksite[] value='" . $row['SITE_ID'] . "' ></td></tr>";
+		}
+		else
+		{
+			echo "<input type=checkbox name=chksite[] value='" . $row['SITE_ID'] . "' disabled checked></td></tr>";
+		}
+	}
+}
+echo "<tr><td>&nbsp;</td><td align=center><input type=submit name=submit value=Start></form></td></tr>";
+echo "</table>\n";
+	
+    include("lib/footer.inc");
+?>
diff --git a/public_html/judge/troubleshoot.php b/public_html/judge/troubleshoot.php
new file mode 100755
index 0000000..b4a62bf
--- /dev/null
+++ b/public_html/judge/troubleshoot.php
@@ -0,0 +1,138 @@
+<?
+#
+# Copyright (C) 2005 Steve Overton
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: judge/troubleshoot.php
+#
+    include_once("lib/config.inc");
+    include_once("lib/judge.inc");
+    include_once("lib/header.inc");
+
+echo "<br><table align=center bgcolor=#000000 width=90% cellpadding=0 
+    cellspacing=0 border=0><tr><td>\n";
+echo "<table align=center width=100% cellpadding=5 cellspacing=1 
+    border=0>\n";
+echo "<tr><td colspan=3 align=center bgcolor=$hd_bg_color1>\n";
+echo "<font color=$hd_txt_color1><b>Troubleshooting</b></font></td></tr>\n";
+
+echo "<form name=troubleshoot method='post' action='troubleshoot.php'>";
+echo "<tr><td width=10% bgcolor=$hd_bg_color2>Team:</td>";
+echo "<td width=25% bgcolor=$data_bg_color1>";
+echo "<select name='team'>";
+    foreach($teams as $team) {
+	echo "<option value=$team[id]>";
+	echo "$team[id] - $team[name]</option>";
+    }
+echo "</td><td bgcolor=$data_bg_color1>";
+echo "All Teams?<input type=checkbox name=team_all></input>";
+echo "</td></tr>";
+echo "<tr><td bgcolor=$hd_bg_color2>Problem:</td>";
+echo "<td bgcolor=$data_bg_color1>";
+echo "<select name='prob'>";
+    foreach($problems as $problem) {
+	echo "<option value=$problem[id]>";
+	echo "$problem[id] - $problem[name]</option>";
+    }
+echo "</td><td bgcolor=$data_bg_color1>";
+echo "All Problems?<input type=checkbox name=problem_all></input>";
+echo "</td></tr>";
+echo "<tr><td bgcolor=$data_bg_color1></td>";
+echo "<td bgcolor=$data_bg_color1><center>";
+echo "<input type=submit name=submit value='Submit'></input>";
+echo "</center></td>";
+echo "<td bgcolor=$data_bg_color1></td></tr></form>";
+
+if($_SERVER['REQUEST_METHOD'] == 'POST') { 
+    $team_id = $_POST['team'];
+    $problem_id = $_POST['prob'];
+    if(isset($_POST['team_all'])) {
+	$all_team = $_POST['team_all'];
+    }
+    if(isset($_POST['problem_all'])) {
+	$all_problems = $_POST['problem_all'];
+    }
+    
+    $i = 0;
+    foreach ($teams as $team) {
+	if(isset($all_team) || $team['id'] == $team_id) {
+	    $trouble[$i]['team_id'] = $team['id'];
+	    $trouble[$i]['team_name'] = $team['name'];
+    
+	    echo "<tr><td colspan=3 align = center bgcolor=$hd_bg_color2>";
+	    echo "Team: " . $trouble[$i]['team_id'];
+	    echo "</td></tr>";
+	    echo "<tr><td bgcolor=$data_bg_color1>"; 
+	    echo "Team Name:</td><td bgcolor=$data_bg_color1>";
+	    echo $trouble[$i]['team_name'];
+	    echo "</td><td bgcolor=$data_bg_color1></td></tr>";
+	
+    	    foreach ($problems as $problem) {
+    		$sql  = "SELECT * ";
+    		$sql .= "FROM JUDGED_SUBMISSIONS ";
+    		$sql .= "WHERE TEAM_ID = $team[id] ";
+    		$sql .= "AND PROBLEM_ID = $problem[id] ";
+    		$result = mysql_query($sql);
+    		
+    		$problem_header = 0;
+    		do{
+    		    if($row = mysql_fetch_assoc($result)) {
+    			if(isset($all_problems) 
+			    || $problem_id == $row['PROBLEM_ID']) {
+    			
+			    if(!$problem_header) {
+				echo "<tr><td bgcolor=$hd_bg_color1>";
+				echo "Problem:</td><td bgcolor=$data_bg_color1>";
+				echo $problem['id'];
+				echo "</td><td bgcolor=$data_bg_color1></td></tr>";
+				$problem_header = 1;
+			    }
+			    # Attempt
+			    echo "<tr><td bgcolor=$hd_bg_color2>";
+			    echo "Attempt:</td><td bgcolor=$data_bg_color1>";
+			    echo $row['ATTEMPT'];
+			    echo "</td><td bgcolor=$data_bg_color1></td></tr>";
+	
+	    		    # Source code
+	    		    echo "<tr><td bgcolor=$data_bg_color1></td>\n";
+	    		    echo "<td bgcolor=$data_bg_color1>Source Code:</td>\n";
+	    		    echo "<td bgcolor=$data_bg_color1>";
+	    		    echo "<a href='judge_output.php?problem=$problem[id]&sub_source=$row[SOURCE_FILE]&format=2' target='blank'>";
+	    		    echo $base_dir . "/judged/" . $row['SOURCE_FILE'] . "</a></td>\n";
+	    		    echo "</td></tr>\n";
+	    		    
+	    		    # Output files
+	    		    $tmp = explode(".", $row['SOURCE_FILE']);
+	    		    $file_name = $tmp[0];
+	    		    $output_files = glob($base_dir . "/judged/" . $file_name 
+	    			. "_" . $problem['id'] . "*.out");
+	    		    foreach($output_files as $out) {
+	    			echo "<tr><td bgcolor=$data_bg_color1></td>\n";
+	    			echo "<td bgcolor=$data_bg_color1>Output File:</td>\n";
+	    			echo "<td bgcolor=$data_bg_color1>";
+	    			echo "<a href='judge_output.php?problem=$problem[id]&sub_source=$out&format=3' target='blank'>";
+	    			echo "$out</a></td>\n";
+	    			echo "</td></tr>\n";
+	    		    }
+	    		    
+	    		    # Diff files
+	    		    $diff_files = glob($base_dir . "/judged/" . $file_name 
+	    			. "_" . $problem['id'] . "*.out.diff");
+	    		    foreach($diff_files as $diff) {
+	    			echo "<tr><td bgcolor=$data_bg_color1></td>";
+	    			echo "<td bgcolor=$data_bg_color1>Diff File</td>";
+	    			echo "<td bgcolor=$data_bg_color1>";
+	    			echo "<a href='judge_output.php?problem=$problem[id]&sub_source=$diff&format=3' target='blank'>";
+	    			echo $diff . "</td></tr>";
+	    		    }
+			}		
+    		    }
+		}while($row);
+	    }
+	}
+	$i++;
+    }
+}
+?>
diff --git a/public_html/lib/config.inc b/public_html/lib/config.inc
new file mode 100755
index 0000000..2bb933b
--- /dev/null
+++ b/public_html/lib/config.inc
@@ -0,0 +1,38 @@
+<?php
+#
+# Copyright (C) 2002 David Whittington
+# Copyright (C) 2004 Jonathan Geisler
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: lib/config.inc
+#
+	include_once("database.inc");
+
+	$page_bg_color  = "#cccccc";
+	$body_bg_color  = "#ffffff";
+	$title_bg_color = "#3480ba";
+	$hd_bg_color1   = "#3480ba";
+	$hd_bg_color2   = "#cccc99";
+	$data_bg_color1 = "#dddddd";
+	$data_bg_color2 = "#cccc99";
+
+	$page_txt_color  = "#000000";
+	$body_txt_color  = "#ffffff";
+	$title_txt_color = "#ffffff";
+	$hd_txt_color1   = "#ffffff";
+	$hd_txt_color2   = "#000000";
+	$data_txt_color1 = "#000000";
+	$data_txt_color2 = "#000000";
+
+	$judge_user = "judge";
+	$judge_pass = "tdz7q7rj";
+
+#
+# $base_dir must be updated for the machine it is installed on.
+# Intentionally commenting it out in "official" sources to force
+# others to put in the right location for their archive.
+#
+#	$base_dir = "/home/jgeisler/ProgContest/judge/contest";
+?>
diff --git a/public_html/lib/data.inc b/public_html/lib/data.inc
new file mode 100755
index 0000000..1e3455a
--- /dev/null
+++ b/public_html/lib/data.inc
@@ -0,0 +1,160 @@
+<?
+#
+# Copyright (C) 2002, 2003 David Whittington
+# Copyright (C) 2003, 2005 Jonathan Geisler
+# Copyright (C) 2005 Victor Replogle
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: lib/data.inc
+#
+
+$link = mysql_connect($db_host, $db_user, $db_pass);
+if (!$link) {
+    print "Sorry.  Database connect failed.  Retrying...";
+    exit;
+}
+
+$connect_good = mysql_select_db($db_name);
+if (!$connect_good) {
+    print "Sorry.  Database selection failed.  Retrying...";
+    exit;
+}
+
+$contest_info = mysql_query("SELECT * FROM CONTEST_CONFIG");
+if (!$contest_info) {
+    print "Sorry.  Database request (CONTEST_CONFIG) failed.  Retrying...";
+    exit;
+}
+
+
+$row = mysql_fetch_assoc($contest_info);
+    if (mysql_num_rows($contest_info) < 1) {
+	print "Sorry.  No contest configuration information exists.<br /> ";
+	print "Please contact a system administrator.";
+	exit;
+    }
+
+    $contest_host = $row['HOST'];
+    $contest_name = $row['CONTEST_NAME'];
+    $contest_date = $row['CONTEST_DATE'];
+    list ($contest_year, $contest_month, $contest_day)
+	= split('-', $contest_date);
+
+    $contest_start_time = $row['START_TIME'];
+    list ($contest_start_hour, $contest_start_minute)
+	= split(':', $contest_start_time);
+    $contest_freeze_time = $row['FREEZE_DELAY'];
+    $contest_end_time = $row['CONTEST_END_DELAY'];
+    $base_dir = $row['BASE_DIRECTORY'];
+
+#    $contest_start_ts = mktime($contest_start_hour,
+#			       $contest_start_minute,
+#			       0,
+#			       $contest_month,
+#			       $contest_day,
+#			       $contest_year);
+	$contest_start_ts = $row['START_TS'];
+    $contest_freeze_ts = $contest_start_ts + $contest_freeze_time;
+    $contest_end_ts = $contest_start_ts + $contest_end_time;
+	$contest_started = $row['HAS_STARTED'];
+
+if(isset($team_id)){
+    $sql = "SELECT * FROM SITE, TEAMS ";
+    $sql .= "WHERE SITE.SITE_ID = TEAMS.SITE_ID AND TEAMS.TEAM_ID = $team_id";
+    $site_info = mysql_query($sql);
+    $row = mysql_fetch_assoc($site_info);
+    $site_start_time = $row['START_TIME'];
+    list ($site_start_hour, $site_start_minute, $site_start_second)
+	= split(':', $site_start_time);
+#  $site_start_ts = mktime($site_start_hour,
+#			       $site_start_minute,
+#			       $site_start_second,
+#			       $contest_month,
+#			       $contest_day,
+#			       $contest_year);
+	$site_start_ts = $row['START_TS'];
+    $site_start_offset = $site_start_ts - $contest_start_ts;
+	$site_started = $row['HAS_STARTED'];
+    }
+
+
+$teams_query = mysql_query("SELECT * FROM TEAMS");
+if (!$teams_query) {
+    print "Sorry.  Database request (TEAMS) failed.  Retrying...";
+    exit;
+}
+$num_teams = mysql_num_rows($teams_query);
+while ($row = mysql_fetch_assoc($teams_query)) {
+    $team_id_ctr = $row['TEAM_ID'];
+    $team_user = $row['USERNAME'];
+    $team_password = $row['PASSWORD'];
+    $my_team_name = $row['TEAM_NAME'];
+
+    $users[$team_user]['team_id'] = $team_id_ctr;
+    $users[$team_user]['password'] = $team_password;
+    $users[$team_user]['team_name'] = $my_team_name;
+
+    $teams[$team_id_ctr]['id'] = $team_id_ctr;
+    $teams[$team_id_ctr]['user'] = $team_user;
+    $teams[$team_id_ctr]['password'] = $team_password;
+    // Hack to fix display name. Bit bigtime in standings display. I believe "$team_name" should be "$my_team_name". 
+    // See setting "$users[$team_user]['team_name']" above to see why I think that..
+    // $teams[$team_id_ctr]['name'] = $team_name;
+    $teams[$team_id_ctr]['name'] = $my_team_name;
+    $teams[$team_id_ctr]['organization'] = $row['ORGANIZATION'];
+    $teams[$team_id_ctr]['coach_name'] = $row['COACH_NAME'];
+    $teams[$team_id_ctr]['alternate_name'] = $row['ALTERNATE_NAME'];
+    $teams[$team_id_ctr]['contestant_1_name'] = $row['CONTESTANT_1_NAME'];
+    $teams[$team_id_ctr]['contestant_2_name'] = $row['CONTESTANT_2_NAME'];
+    $teams[$team_id_ctr]['contestant_3_name'] = $row['CONTESTANT_3_NAME'];
+}
+
+$sql = "SELECT ct.TEAM_ID, c.CATEGORY_NAME";
+$sql .= " FROM CATEGORY_TEAM ct, CATEGORIES c";
+$sql .= " WHERE ct.CATEGORY_ID = c.CATEGORY_ID";
+$categories_query = mysql_query($sql);
+if (!$categories_query) {
+    print "Sorry.  Database request (CATEGORIES) failed.  Retrying...";
+    exit;
+}
+while ($row = mysql_fetch_assoc($categories_query)) {
+    $cat_name = $row['CATEGORY_NAME'];
+    if ($cat_name) {
+	$categories[$cat_name]['name'] = $cat_name;
+	if (!isset($categories[$cat_name]['team_ids'])
+		|| !is_array($categories[$cat_name]['team_ids'])) {
+	    $categories[$cat_name]['team_ids'] = array();
+	}
+	array_push($categories[$cat_name]['team_ids'], $row['TEAM_ID']);
+	//print $categories[$cat_name]['team_ids'].$row['TEAM_ID']."<br />";
+    }
+}
+
+$problem_url = "problems";
+$problems_query = mysql_query("SELECT * FROM PROBLEMS ORDER BY PROBLEM_ID");
+if (!$problems_query) {
+    print "Sorry.  Database request (PROBLEMS) failed.  Retrying...";
+    exit;
+}
+$num_problems = mysql_num_rows($problems_query);
+while ($row = mysql_fetch_assoc($problems_query)) {
+    $problem_id = $row['PROBLEM_ID'];
+    $problems[$problem_id]['id'] = $row['PROBLEM_ID'];
+    $problems[$problem_id]['name'] = $row['PROBLEM_NAME'];
+    $problems[$problem_id]['loc'] = $row['PROBLEM_LOC'];
+}
+
+$responses_query = mysql_query("SELECT * FROM RESPONSES");
+if (!$responses_query) {
+    print "Sorry.  Database request (RESPONSES) failed.  Retrying...";
+    exit;
+}
+while ($row = mysql_fetch_assoc($responses_query)) {
+    $response_id = $row['RESPONSE_ID'];
+    $responses[$response_id]['response'] = $row['RESPONSE'];
+    $responses[$response_id]['color'] = $row['RESPONSE_COLOR'];
+}
+
+?>
diff --git a/public_html/lib/database.inc b/public_html/lib/database.inc
new file mode 100755
index 0000000..65b6156
--- /dev/null
+++ b/public_html/lib/database.inc
@@ -0,0 +1,14 @@
+<?php
+#
+# Copyright (C) 2005 David Crim
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: lib/config.inc
+#
+	$db_host = "YOUR.DB.HOST";
+	$db_user = "contest_skeleton";
+	$db_pass = "YOUR_PASSWORD_HERE";
+	$db_name = "CONTEST_DATABASE_HERE";
+?>
diff --git a/public_html/lib/footer.inc b/public_html/lib/footer.inc
new file mode 100755
index 0000000..26cc197
--- /dev/null
+++ b/public_html/lib/footer.inc
@@ -0,0 +1,15 @@
+
+</td></tr></table>
+</td></tr></table>
+
+<!--
+    Copyright (C) 2002 David Whittington
+
+	See the file "COPYING" for further information about the copyright
+	and warranty status of this work.
+
+    arch-tag: lib/footer.inc
+!-->
+
+</body>
+</html>
diff --git a/public_html/lib/header.inc b/public_html/lib/header.inc
new file mode 100755
index 0000000..128517a
--- /dev/null
+++ b/public_html/lib/header.inc
@@ -0,0 +1,146 @@
+<?
+#
+# Copyright (C) 2002, 2003 David Whittington
+# Copyright (C) 2003 Jonathan Geisler
+# Copyright (C) 2005 Victor Replogle
+# Copyright (C) 2005 Steve Overton
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: lib/header.inc
+#
+    include_once ("lib/session.inc");
+    include_once ("lib/config.inc");
+    include_once ("lib/data.inc");
+
+?>
+
+<!DOCTYPE HTML PUBLIC "-//W3C/DTD HTML 4.0 Transitional//EN">
+<html>
+<body bgcolor="<?=$page_bg_color?>" link="0000cc" alink="000066" vlink="0000cc">
+<table width="90%" align="center" cellpadding="1" cellspacing="0" border="0" bgcolor="#000000">
+	<tr><td>
+		<table width="100%" cellpadding="5" cellspacing="0" border="0">
+			<tr bgcolor="<?=$title_bg_color?>">	
+				<td>
+                <!-- Beautification hack. 2006-09-25 -sb -->
+                <img src="images/favicon.ico">
+
+  				<font color="#ffffff">
+  				<b><?=$contest_name?></b> - <small><?=$contest_host?></small>
+  				</font>
+				</td>
+				<td align="right">
+ 					 <font color="#ffffff">
+ 					 <b><?=$team_name?></b>
+ 					 </font>
+				</td>
+			</tr>
+			<tr>	
+				<td bgcolor="#dcdcdc" align="left"><b>
+				<a href="problems.php">Problems</a> &nbsp;
+  				<a href="submissions.php?state=0">Submissions</a> &nbsp;  
+  				<a href="standings.php">Standings</a> &nbsp;  
+  				<a href="clarifications.php?problem_id=-1">Clarifications</a> &nbsp;
+  				<!--<a href="testcompile.php">-->Test Compile (N/A)<!--</a>--> &nbsp;
+				<a href="readme.php">ReadMe</a></b>
+				</td>
+				<td align="right" bgcolor="#dcdcdc">
+				<?
+				/*
+				 * the following lines find out how far
+				 * away the freezing of the standings is
+				 * and how many seconds the end of the contest is.
+				 * Then, it stores these values for use below.
+				 * Date was used previously but needed to be adjusted
+				 * for the time zone.  gmdate does this automatically;
+				 * therefore, a much better solution.
+				 */
+				$end_diff = $contest_end_ts + $site_start_offset - time();
+				$freeze_diff = $contest_freeze_ts + $site_start_offset - time();
+				if(!$site_started)
+				{
+					print "</td></tr><tr><td colspan=2 bgcolor=red><center><h2>Contest has not yet started</h2></center></td></tr>";
+					include_once "footer.inc";
+					die;
+				}
+				if($end_diff <0)
+				{
+					print "</td></tr><tr><td colspan=2 bgcolor=green><center><h2>Contest is over</h2></center></td></tr>";
+					include_once "footer.inc";
+					die;
+				}
+				$time_till_contest_over
+				    = gmdate('H:i:s', $end_diff);
+				$time_till_freeze_starts
+				    = gmdate('H:i:s', $freeze_diff);
+				$time_till_contest_starts
+				    = gmdate('H:i:s', $site_start_offset + $contest_start_ts - time());
+				print "<b>Official Time: " . date("H:i:s") . "</b>";
+
+				//1200 = 20 minutes left
+				//600 = 10 minutes left
+				//300 = 5 minutes left
+				if ($freeze_diff > 1200) {
+					$freeze_color = "#000000";
+				}
+				elseif ($freeze_diff > 600) {
+					$freeze_color = "#00aa00";
+				}
+				elseif ($freeze_diff > 300) {
+					$freeze_color = "#ff8200";
+				}
+				elseif ($freeze_diff > 0) {
+					$freeze_color = "#ff0000";
+				}
+				else {
+					print "<br />";
+					print "Standings frozen.";
+				}
+
+				if ($end_diff > 1200){
+					$end_color = "#000000";
+				}
+				elseif ($end_diff > 600){
+					$end_color = "#0000ff";
+				}
+				elseif ($end_diff > 0){
+					$end_color = "#ff0000";
+				}
+				else {
+					$end_color = "#000000";
+					print "<br />";
+					print "Contest over.";
+				}
+
+				if ($contest_start_ts > Time() ) {
+					print "<font color = \"#000000\">";
+					print "<br />";
+					print "Contest starts in: ";
+					print $time_till_contest_starts;
+					print "</font>";
+				}
+				elseif ($freeze_diff > 0) {
+					print "<font color = \"$freeze_color\">";
+					print "<br />";
+					print "Time left until freeze begins: ";
+					print $time_till_freeze_starts;
+					print "</font>";
+				}
+				elseif ($end_diff > 0) {
+					print "<font color = \"$end_color\">";
+					print "<br />";
+					if ($end_diff < 300) {
+						print "WARNING!! ";
+					}
+					print "Time until Contest ends: ";
+					print $time_till_contest_over;
+					print "</font>";
+				}
+				?>
+				<font color = "#000000">
+				</td>
+			</tr>
+			<tr>
+				<td bgcolor="#ffffff" colspan="2">
diff --git a/public_html/lib/motd.inc b/public_html/lib/motd.inc
new file mode 100755
index 0000000..f7717ca
--- /dev/null
+++ b/public_html/lib/motd.inc
@@ -0,0 +1,27 @@
+<?
+#
+# Copyright (C) 2002 David Whittington 
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: lib/motd.inc
+#
+
+    /*
+    **  motd.inc
+    **
+    **  This file is included in main.php and is the first thing
+    **  that people will see when they log in.  A general welcome
+    **  or perhaps rules could be relevant here.  Maybe just have
+    **  links to other sections of the site.  Whatever you want.
+    **
+    **  Just edit plain HTML or add PHP code if you so desire.
+    */
+
+?>
+Welcome to <?=$contest_host?>'s <?=$contest_name?>!<br><br>
+
+This web interface is designed to allow you to keep an eye on your
+standings and to view your results as the contest progresses.  Should
+you have problems, please see an administrator to remedy the issue.
diff --git a/public_html/lib/session.inc b/public_html/lib/session.inc
index 50a149d..d8bc3f1 100755
--- a/public_html/lib/session.inc
+++ b/public_html/lib/session.inc
@@ -1,3 +1,14 @@
+<?
+#
+# Copyright (C) 2002 David Whittington
+# Copyright (C) 2005 Victor Replogle
+# Copyright (C) 2005 Steve Overton
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: lib/session.inc
+#
 <?php
     include_once("create.inc");
 
diff --git a/public_html/logout.php b/public_html/logout.php
new file mode 100755
index 0000000..8501fc2
--- /dev/null
+++ b/public_html/logout.php
@@ -0,0 +1,17 @@
+<?php
+#
+# Copyright (C) 2002 David Whittington
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: logout.php
+#
+	include_once('lib/database.inc');
+
+	session_name("TOUCHE-$db_name");
+	session_start();
+	session_destroy();
+	header("Location: index.php");
+	exit(0);
+?>
diff --git a/public_html/main.php b/public_html/main.php
new file mode 100755
index 0000000..8719b74
--- /dev/null
+++ b/public_html/main.php
@@ -0,0 +1,18 @@
+<?
+#
+# Copyright (C) 2002 David Whittington
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: main.php
+#
+    include_once("lib/header.inc");
+    
+    if (file_exists("lib/motd.inc")) {
+	    include_once("lib/motd.inc");
+    } else {
+	    echo "<br><b>No welcome message defined.</b><br><br>\n";
+    }
+    include_once("lib/footer.inc");
+?>
diff --git a/public_html/problems.php b/public_html/problems.php
new file mode 100755
index 0000000..558ff83
--- /dev/null
+++ b/public_html/problems.php
@@ -0,0 +1,55 @@
+<?
+#
+# Copyright (C) 2003 David Whittington
+# Copyright (C) 2003 Jonathan Geisler
+# Copyright (C) 2005 Steve Overton
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: judge/problems.php
+#
+    include_once("lib/header.inc");
+    include_once("lib/config.inc");
+    include_once("lib/data.inc");
+    include_once("lib/session.inc");
+
+echo "<br><table align=center bgcolor=#000000 width=50%
+    cellpadding=0 cellspacing=0 border=0><tr><td>\n";
+echo "<table align=center width=100% cellpadding=5 cellspacing=1 border=0>\n";
+echo "<tr><td colspan=5 align=center bgcolor=$hd_bg_color1>\n";
+echo "<font color=$hd_txt_color1><b>Problems Listing</b></font></td></tr>\n";
+
+
+#echo "<table width=400 align=center>\n";
+echo "<tr><td bgcolor=$hd_bg_color2>Problem Name</td>";
+echo "<td bgcolor=$hd_bg_color2 align=center>HTML</td>";
+#echo "<td bgcolor=$hd_bg_color2 align=center>PS</td>";
+echo "<td bgcolor=$hd_bg_color2 align=center>PDF</td></tr>";
+#echo "<tr><td bgcolor=$data_bg_color1>All problems</td>";
+#echo "<td bgcolor=$data_bg_color1 align=center>";
+#echo "<a href='$problem_url/problems.html'>HTML</td>";
+//echo "<td bgcolor=$data_bg_color1 align=center>";
+//echo "<a href='$problem_url/problems.ps'>PS</td>";
+#echo "<td bgcolor=$data_bg_color1 align=center>";
+#echo "<a href='$problem_url/problems.pdf'>PDF</td>";
+#echo "</tr>";
+
+$problem_counter = 1;
+foreach ($problems as $problem) {
+    echo "<tr><td bgcolor=$data_bg_color1>$problem_counter - $problem[name]</td>";
+//    echo "<tr><td bgcolor=$data_bg_color1>$problem[id] - $problem[name]</td>";
+    echo "<td bgcolor=$data_bg_color1 align=center>";
+    echo "<a href='$problem_url/$problem[loc]/$problem[name].html'>HTML</a></td>";
+  //  echo "<td bgcolor=$data_bg_color1 align=center>";
+  //  echo "<a href='$problem_url/$problem[loc]/problem.ps'>PS</a></td>";
+    echo "<td bgcolor=$data_bg_color1 align=center>";
+    echo "<a href='$problem_url/$problem[loc]/$problem[name].pdf'>PDF</a></td>";
+    echo "</tr>";
+    $problem_counter++;
+}
+echo "</table>\n";
+
+    include("lib/footer.inc");
+?>
+
diff --git a/public_html/public_html b/public_html/public_html
new file mode 120000
index 0000000..458684b
--- /dev/null
+++ b/public_html/public_html
@@ -0,0 +1 @@
+/home/mgoldsbe/localTouche/public_html/
\ No newline at end of file
diff --git a/public_html/readme.php b/public_html/readme.php
new file mode 100755
index 0000000..797facd
--- /dev/null
+++ b/public_html/readme.php
@@ -0,0 +1,19 @@
+<?
+# Readme file
+# Copyright (C) 2002, 2003 David Whittington
+# Copyright (C) 2005 Jonathan Geisler
+# Copyright (C) 2005 Victor Replogle
+# Copyright (C) 2005 Steve Overton
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: submissions.php
+#
+	include_once("lib/header.inc");
+	include_once("lib/config.inc");
+	include_once("lib/data.inc");
+	echo "<b><center>Readme File</center></b><br>\n";
+	include("../readme/inst.html");
+	include("lib/footer.inc");
+?>
diff --git a/public_html/standings.php b/public_html/standings.php
new file mode 100755
index 0000000..d05d9ba
--- /dev/null
+++ b/public_html/standings.php
@@ -0,0 +1,312 @@
+<?php
+#
+# Copyright (C) 2002 David Whittington
+# Copyright (C) 2005 Jonathan Geisler
+# Copyright (C) 2005 Victor Replogle
+# Copyright (C) 2005 Steve Overton
+# Copyright (C) 2005 David Crim
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: standings.php
+#
+    include_once("lib/header.inc");
+    include_once("lib/config.inc");
+    include_once("lib/data.inc");
+    include_once("lib/session.inc");
+
+    if($contest_freeze_ts > time()) {
+    	echo "<meta http-equiv = 'refresh' content = '60'>\n";
+    }
+   
+    $link = mysql_connect ($db_host , $db_user, $db_pass) or die ("Could not connect to database");
+    mysql_select_db ($db_name) or die ("Could not select database");
+
+/*
+    // There is apparently a problem with $HTTP_GET_VARS vs. $_GET. $HTTP_GET_VARS
+    // does not contain the correct answers with the Evansville test. So I'm trying
+    // to get it to work either way according to whatever that version of PHP wants.
+    // --sb 2006-10-21
+    // Original code is 5 lines below.
+    if (!isset($HTTP_GET_VARS['selected_category'])) {
+	$selected_category = "Overall";
+    } else {
+	$selected_category = $HTTP_GET_VARS['selected_category'];
+    }
+*/
+    if (isset($_GET['selected_category'])) {
+        $selected_category = $_GET['selected_category'];
+    }
+    else if (isset($HTTP_GET_VARS['selected_category'])) {
+        $selected_category = $HTTP_GET_VARS['selected_category'];
+    } else {
+        $selected_category = "Overall";
+    }
+
+
+    echo "<center>\n";
+    if ($selected_category=="Overall") {
+	echo "Overall";
+    } else {
+	echo "<a href=\"standings.php?selected_category=Overall\">Overall</a>";
+    }
+
+    foreach ($categories as $category) {
+	if ($selected_category == $category['name']) {
+	    echo " | $category[name]";
+	} else {
+	    echo " | <a href=\"standings.php?selected_category=$category[name]\">$category[name]</a>";
+	}
+    }
+    echo "</center>\n";
+
+    if ($selected_category == "Overall") {
+	$i=0;
+	foreach ($teams as $team) {
+	    $standings[$i]['team_id'] = $team['id'];
+	    $standings[$i]['team_name'] = $team['name'];
+	    if(!isset($standings[$i]['penalty'])){
+		$standings[$i]['penalty'] = 0;
+	    }
+	    if(!isset($standings[$i]['problems_completed'])){
+		$standings[$i]['problems_completed'] = 0;
+	    }
+	    $i++;
+	}
+    } else {
+	$i=0;
+	foreach ($categories[$selected_category]['team_ids'] as $category_team_id) {
+	    $standings[$i]['team_id'] = $category_team_id;
+	    $standings[$i]['team_name'] = $teams[$category_team_id]['name'];
+	    if(!isset($standings[$i]['penalty'])){
+		$standings[$i]['penalty'] = 0;
+	    }
+	    if(!isset($standings[$i]['problems_completed'])){
+		$standings[$i]['problems_completed'] = 0;
+	    }
+	    $i++;
+	}
+    }
+
+    $sql = "SELECT START_TS ";
+    $sql .= "FROM SITE, TEAMS ";
+    $sql .= "WHERE SITE.SITE_ID = TEAMS.SITE_ID AND ";
+    $sql .= "TEAMS.TEAM_ID = $team_id";
+    $result = mysql_query($sql);
+    $row = mysql_fetch_assoc($result);
+    $site_current_time = time() - ($row['START_TS'] - $contest_start_ts);
+    
+
+    for ($i = 0; $i < count($standings); $i++) {
+	$sql  = "SELECT PROBLEM_ID, TS, ATTEMPT, RESPONSE_ID ";
+	$sql .= "FROM JUDGED_SUBMISSIONS ";
+	$sql .= "WHERE ";
+	$sql .= "    TEAM_ID='".$standings[$i]['team_id'] . "'";
+	if ($standings[$i]['team_id'] != $team_id) {
+		$sql .= " AND ";
+		$sql .= "    TS<'$contest_freeze_ts'  AND ";
+		$sql .= "    TS<'$site_current_time' ";
+	}
+	#also need to make sure it's not more than the current contest
+	$sql .= "ORDER BY PROBLEM_ID ASC ";
+
+	$result = mysql_query($sql);
+
+	while($row = mysql_fetch_assoc($result)) {
+	    if($row['RESPONSE_ID'] == 9) {
+		// each incorrect submission counts as 20 penalty points
+		$incorrect_submission_penalty = ($row['ATTEMPT'] - 1) * 20;
+		// each minute counts as one penalty point
+		$time_penalty = (int) ((($row['TS'] - $contest_start_ts) / 60)/* + 0.5*/);
+		$standings[$i]['problems'][$row['PROBLEM_ID']]['ts'] = $row['TS'];
+		$standings[$i]['problems'][$row['PROBLEM_ID']]['penalty'] = $time_penalty + $incorrect_submission_penalty;
+		$standings[$i]['problems_completed']++;
+	    } 
+	    $standings[$i]['problems'][$row['PROBLEM_ID']]['attempt'] = $row['ATTEMPT'];
+	    $standings[$i]['problems'][$row['PROBLEM_ID']]['response_id'] = $row['RESPONSE_ID'];
+	}
+    }
+
+    // total up the penalty points
+    for($i=0; $i < count($standings); $i++) {
+	foreach ($problems as $problem) {
+	    if(!isset($standings[$i]['problems'])){
+		$standings[$i]['problems'] = 0;
+	    }
+
+	    $standings[$i]['penalty'] += $standings[$i]['problems'][$problem['id']]['penalty'];
+	}
+    }
+
+    function cmp ($a, $b) {
+	if ($a['problems_completed'] > $b['problems_completed']) {
+	    return -1;
+	} elseif ($a['problems_completed'] < $b['problems_completed']) {
+	    return 1;
+	} else {
+	    if ($a['penalty'] < $b['penalty']) {
+		return -1;
+	    } elseif ($a['penalty'] > $b['penalty']) {
+		return 1;
+	    }
+	}
+	return 0;
+    }
+    
+    usort($standings, "cmp");
+    //find the first team that is not exhibition
+    $x = 0;
+    while(checkexhib($standings[$x]['team_id']) == 1) {
+	$standings[$x]['rank'] = '-';
+	$x++;
+    }
+    $standings[$x]['rank'] = 1;
+
+    $current_rank = 1;
+    for($i=$x+1; $i < count($standings); $i++) {
+        //check to see if the team is exhibition, if it is, don't rank them
+        $excheck = checkexhib($standings[$i]['team_id']);
+
+        //echo $standings[$i]['team_id'] ." - " . $excheck . "<br>";
+        if($excheck == 1)
+        {
+                $standings[$i]['rank'] = '-';
+        }
+        else
+        {
+		if($standings[$i]['problems_completed'] == $standings[$i-1]['problems_completed'] && 
+		    $standings[$i]['penalty'] == $standings[$i-1]['penalty']) 
+		{
+			#if the problems completed and the penalty seconds are the same then they are the same rank
+		}
+		else
+		{
+			$current_rank++;
+		}
+		$standings[$i]['rank'] = $current_rank;
+	}
+    }
+
+    echo "<br><table align=center bgcolor=#000000 width=90% cellpadding=0 cellspacing=0 border=0><tr><td>\n";
+    echo "<table align=center width=100% cellpadding=5 cellspacing=1 border=0>\n";
+    echo "<tr><td align=center colspan=99 bgcolor=";
+    if($contest_freeze_ts < time()) {
+	echo "red>";
+    }
+    else {
+	echo "$hd_bg_color1>";
+    }
+    echo "<font color=$hd_txt_color1><b>Standings";
+    if($contest_freeze_ts < time()) {
+	echo " - Frozen";
+    }
+    echo "</b></font>";
+    echo "</td></tr>\n";
+    echo "<tr bgcolor=$hd_bg_color2>\n";
+    echo "<td>&nbsp</td>\n";
+    echo "<td align=center><font color=$hd_txt_color2><b>Team Name</b></font></td>\n";
+    for($i=1; $i<=$num_problems; $i++) { // changes this later
+	echo "<td align=center><font color=$hd_txt_color2><b>Prob #$i</b></font></td>";
+    }
+    echo "<td align=center><font color=$hd_txt_color2><b>Completed</b></font></td>";
+    echo "</tr>\n";
+
+    for($i=0; $i<count($standings); $i++) {
+	if($i%2 == 0) {
+	    echo "<tr bgcolor=\"$data_bg_color1\">\n";
+	} else {
+	    echo "<tr bgcolor=\"$data_bg_color2\">\n";
+	}
+	echo "<td>\n";
+	echo "<font face=\"Arial\" size=\"3\">\n";
+	echo trim($standings[$i]['rank']);
+	echo "</font>\n";
+	echo "</td>\n";
+
+	echo "<td>\n";
+	echo "<font face=\"Arial\" size=\"3\">\n";
+	echo $standings[$i]['team_name'];
+	echo "</font>\n";
+	echo "</td>\n";
+
+	//hack so if problems don't start at 0
+	$sql = "select PROBLEM_ID from PROBLEMS ORDER by PROBLEM_ID";
+	$result = mysql_query($sql);
+	$row = mysql_fetch_assoc($result);
+	$min = $row['PROBLEM_ID'];
+	for($j=$min; $j<($min + $num_problems); $j++) { // change this later
+	    echo "<td align=center>\n";
+	    echo "<font face=arial size=3>\n";
+	    if(isset($standings[$i]['problems'][$j]['penalty'])) {
+		echo gmdate("H:i", $standings[$i]['problems'][$j]['ts'] - $site_start_ts);
+	    } else {
+		echo "--";
+	    }
+	    echo "/";
+	    if(isset($standings[$i]['problems'][$j]['attempt'])) {
+		echo $standings[$i]['problems'][$j]['attempt'];
+	    } else {
+		echo "--";
+	    }
+	    echo "</font>\n";
+	    echo "</td>\n";
+	}
+
+	echo "<td align=center>\n";
+	if(!isset($standings[$i]['problems_completed']) || $standings[$i]['problems_completed']==0) {
+	    echo "0";
+	} else {
+	    echo $standings[$i]['problems_completed'];
+	}
+	echo " ";
+	if(!isset($standings[$i]['penalty']) || $standings[$i]['penalty']==0) {
+	    echo "(0)";
+	} else {
+	    $tmp = chg_sec($standings[$i]['penalty']*60);
+	    echo "($tmp)";		
+	}
+
+	echo "</td>\n";
+	echo "</tr>\n";
+    }
+    echo "</table>\n";
+    echo "</table>\n";
+    echo "<br>\n";
+    include("lib/footer.inc");
+
+    #function to print seconds into hours:mins
+    function chg_sec($secs)
+    {
+    	$mins = 0;
+	$hours = 0;
+	
+	$mins += (int) floor ($secs / 60);
+	$secs = (int) $secs % 60;
+		          
+	$hours += (int) floor ($mins / 60);
+	$mins = $mins % 60;
+    	
+	if($mins < 10)
+	    $mins = "0$mins";
+	
+	return ("$hours:$mins"); 
+    }
+
+function checkexhib($team)
+{
+        global $selected_category;
+        if($selected_category != 'Exhibition') {
+                $sql  = "SELECT * FROM CATEGORIES AS C, CATEGORY_TEAM AS T WHERE C.CATEGORY_ID = T.CATEGORY_ID AND C.CATEGORY_NAME = 'Exhibition'";
+                $sql .= " AND T.TEAM_ID = $team";
+                $ex = mysql_query($sql);
+                $num_rows = mysql_num_rows($ex);
+                return $num_rows;
+        }
+        else {
+                #allows teams to be ranked if they are exhibition if the page is exhibition
+                return 0;
+        }
+}
+
+?>
diff --git a/public_html/submissions.php b/public_html/submissions.php
new file mode 100755
index 0000000..8e94e42
--- /dev/null
+++ b/public_html/submissions.php
@@ -0,0 +1,135 @@
+<?
+#
+# Copyright (C) 2002, 2003 David Whittington
+# Copyright (C) 2005 Jonathan Geisler
+# Copyright (C) 2005 Victor Replogle
+# Copyright (C) 2005 Steve Overton
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: submissions.php
+#
+	include_once("lib/header.inc");
+	include_once("lib/config.inc");
+	include_once("lib/data.inc");
+
+	$state = $_GET['state'];
+	
+	if ($state == 1) {
+		echo "<center><br><font color=\"#ee0000\">No file selected for submission!</font><br></center>\n";
+	}
+	
+	if ($state == 2) {
+		echo "<center><br><font color=\"#ee0000\">You have alread solved this problem!</font><br></center>\n";
+	}
+	
+	if ($state == 3) {
+		echo "<center><br><font color=\"#00aa00\">Submission successful. Judging pending.</b></font><br></center>\n";
+	}
+	
+	if ($state == 4) {
+		echo "<center><br><font color=\"#ee0000\">Judging pending on a previous submission, please wait.</b></font><br></center>\n";
+	}
+	?>
+	<br><b><center>Submit a Solution</center></b><br>
+	<table align="center" bgcolor="#000000" width="90%" cellpadding="0"  cellspacing="0" border="0"><tr><td>
+		<table align="center" width="100%" cellpadding="5" cellspacing="1" border="0">
+			
+			<form method="post" enctype="multipart/form-data" action="submit_solution.php">
+			<tr><td align="center" bgcolor="<?echo "$data_bg_color1"?>" colspan="3">
+			<table>
+				<tr><td align="right">Source File (C, C++, or Java) &nbsp</td>
+				<td><input type="file" name="source_file"></td></tr>
+				<tr><td align="right">Problem &nbsp</td><td>
+				<select name="problem_id">
+	<?
+	$prob_num = 1;
+	foreach ($problems as $problem) {
+		echo " <option value=\"$problem[id]\">$prob_num - $problem[name]</option>";
+		$prob_num++;
+	}
+	echo "</select>";
+	echo "</td></tr><tr><td colspan=\"2\" align=\"center\">\n";
+	echo "<p>\n";
+	echo "<input type=\"submit\" value=\"Submit Solution\">\n";
+	echo "<input type=\"reset\" value=\"Cancel\">\n";
+	echo "</td></tr></table>\n";
+	echo "</td></tr>\n";
+	echo "</form></table>\n";
+	echo "</td></tr></table>\n";
+	
+	reset($problems);
+	$prob_num = 1;
+	echo "<br><b><center>Submissions</center></b><br>\n";
+	foreach ($problems as $problem) {
+		echo "<table align=\"center\" bgcolor=\"#000000\" width=\"90%\" cellpadding=\"0\"  cellspacing=\"0\" border=\"0\"><tr><td>\n";
+		echo "<table align=\"center\" width=\"100%\" cellpadding=\"5\" cellspacing=\"1\" border=\"0\">\n";
+		echo "	<tr><td bgcolor=\"$hd_bg_color1\" colspan=\"3\">\n";
+		echo "		<font color=\"$hd_txt_color1\"><b>Problem #$prob_num: ".$problem['name']."<b><br>\n";
+		echo "	</td></tr>\n";
+	
+		$sql =  "SELECT TS, ATTEMPT, RESPONSE_ID ";
+		$sql .= "FROM JUDGED_SUBMISSIONS ";
+		$sql .= "WHERE ";
+		$sql .= "    PROBLEM_ID='$problem[id]' AND TEAM_ID='$team_id' ";
+		$sql .= "ORDER BY ATTEMPT ASC";
+		$result = mysql_query($sql);
+		echo mysql_error();
+		$sql2 =  "SELECT TS, ATTEMPT   ";
+		$sql2 .= "FROM QUEUED_SUBMISSIONS ";
+		$sql2 .= "WHERE ";
+		$sql2 .= "    PROBLEM_ID='$problem[id]' AND TEAM_ID='$team_id' ";
+		$sql2 .= "ORDER BY ATTEMPT";
+		$result2 = mysql_query($sql2);
+		echo mysql_error();
+		if(mysql_num_rows($result)||mysql_num_rows($result2)) {
+			echo "	<tr bgcolor=\"$hd_bg_color2\">\n";
+			echo "		<td align=\"center\" width=\"33%\">Attempt</small></td>\n";
+			echo "		<td align=\"center\" width=\"33%\">Submission Time</small></td>\n";
+			echo "		<td align=\"center\" width=\"34%\">Result</td>\n";
+			echo "	</tr>\n";
+			while($row = mysql_fetch_array($result)) {
+				// --- START HACK ALERT ---
+                                // sb hack - 2007-09-27
+                                // Should be ECORRECT, not 9
+                                // Was the following line.
+                                //if($row['RESPONSE_ID'] == 0) {
+
+                                if($row['RESPONSE_ID'] == 9) {
+                                // --- END HACK ALERT ---
+					$color = "green";
+				}
+				else {
+					$color = "red";
+				}
+				echo "<tr bgcolor=\"$data_bg_color1\">\n";
+				echo "<td align=\"center\"><font color=\"$color\">".$row['ATTEMPT']."</font></td>\n";
+				echo "<td align=\"center\"><font color=\"$color\">".
+					date("g:i:s a", $row['TS'])."</font></td>\n";
+				echo "<td align=center><font color=\"$color\">";
+				echo $responses[$row['RESPONSE_ID']]['response'];
+				echo "</font></td>\n";
+				echo "</tr>\n";
+			}
+			while($row = mysql_fetch_array($result2)) {
+				$color = "red";
+				echo "<tr bgcolor=\"$data_bg_color1\">\n";
+				echo "<td align=\"center\"><font color=\"$color\">".$row['ATTEMPT']."</font></td>\n";
+				echo "<td align=\"center\"><font color=\"$color\">".
+					date("g:i:s a", $row['TS'])."</font></td>\n";
+				echo "<td align=center><font color=\"$color\">";
+				echo "Queued for judging";
+				echo "</font></td>\n";
+				echo "</tr>\n";
+			}
+		}
+		echo "</td></tr>\n";
+		echo "</table>\n";
+		echo "</td></tr></table>\n";
+		echo "<br>\n";
+		$prob_num++;
+	}
+	
+	include_once("lib/footer.inc");
+?>
diff --git a/public_html/submit_solution.php b/public_html/submit_solution.php
new file mode 100755
index 0000000..1ea38cf
--- /dev/null
+++ b/public_html/submit_solution.php
@@ -0,0 +1,99 @@
+<?
+#
+# Copyright (C) 2002 David Whittington
+# Copyright (C) 2004 Jonathan Geisler
+# Copyright (C) 2005 David Crim
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: submit-solution.php
+#
+	include_once('lib/config.inc');
+	include_once('lib/data.inc');
+	include_once('lib/session.inc');
+
+	$problem_id = $_POST['problem_id'];
+
+	$link = mysql_connect ($db_host, $db_user, $db_pass) or die ("Could not connect to database");
+	mysql_select_db ($db_name) or die ("Could not select database");
+
+	// check to see if a file is actually being submitted
+	if ($_FILES[source_file][size] == 0) {
+		header("location: submissions.php?state=1");
+		exit(0);
+	}
+
+	//check if the contest has ended, if it has, then don't let them submit
+	if($contest_end_ts < time()) {
+		header("location: submissions.php?state=5");
+		exit(0);
+	}
+	
+	// check to see if we already have a successful submission 
+	$sql  = "SELECT * FROM JUDGED_SUBMISSIONS ";
+	$sql .= "WHERE TEAM_ID='$team_id' AND PROBLEM_ID='$problem_id' AND RESPONSE_ID='9' ";
+	$result = mysql_query($sql);
+	echo mysql_error();
+	if (mysql_num_rows($result)>0) {
+		header("location: submissions.php?state=2");
+		exit(0);
+	}
+        $sql  = "SELECT * FROM JUDGED_SUBMISSIONS ";
+        $sql .= "WHERE TEAM_ID='$team_id' AND PROBLEM_ID='$problem_id' AND RESPONSE_ID='0' ";
+        $result = mysql_query($sql);
+        echo mysql_error();
+        if (mysql_num_rows($result)>0) {
+                header("location: submissions.php?state=4");
+                exit(0);
+        }
+	$sql  = "SELECT * FROM QUEUED_SUBMISSIONS ";
+	$sql .= "WHERE TEAM_ID='$team_id' AND PROBLEM_ID='$problem_id'";
+	$result = mysql_query($sql);
+	echo mysql_error();
+	if (mysql_num_rows($result)>0) {
+		header("location: submissions.php?state=4");
+		exit(0);
+	}
+
+	$sql  = "SELECT ATTEMPT ";
+	$sql .= "FROM JUDGED_SUBMISSIONS ";
+	$sql .= "WHERE ";
+	$sql .= "    TEAM_ID='$team_id' AND PROBLEM_ID='$problem_id' ";
+	$sql .= "ORDER BY ATTEMPT DESC";
+	$result = mysql_query($sql);
+	
+	if (mysql_num_rows($result) > 0) {
+		$row = mysql_fetch_assoc($result);
+		$attempt = $row[ATTEMPT]+1;
+	} else {
+		$attempt = 1;
+	}
+
+	$ts = time();
+
+	#dcrim - immeadiatly change the timestamp into contest timespace
+	#this allows differant sites to start at differant times, yet still have
+	#all the times be synchronized
+	$ts = $ts - $site_start_offset;
+	
+
+	$extension="";
+	for ($i=strlen($_FILES[source_file][name])-1; $i>=0; $i--) {
+		if ($_FILES[source_file][name][$i]==".") {
+			break;
+		}
+		$extension = $_FILES[source_file][name][$i].$extension;
+	}
+
+	$queue_file_name = "$team_id-$problem_id-$ts.$extension";
+    move_uploaded_file($_FILES[source_file][tmp_name],
+		       "$base_dir/queue/$queue_file_name");
+    chmod("$base_dir/queue/$queue_file_name", 0644);
+
+	$sql  = "INSERT INTO QUEUED_SUBMISSIONS (TEAM_ID, PROBLEM_ID, ATTEMPT, TS, SOURCE_FILE) ";
+	$sql .= "VALUES ('$team_id','$problem_id', '$attempt', '$ts','$queue_file_name') ";
+	$result = mysql_query($sql);
+
+	header("location: submissions.php?state=3");
+	exit(0);
+?>
diff --git a/public_html/submit_test.php b/public_html/submit_test.php
new file mode 100755
index 0000000..ef77016
--- /dev/null
+++ b/public_html/submit_test.php
@@ -0,0 +1,196 @@
+<?
+# TEST COMPILE
+# Copyright (C) 2002, 2003 David Whittington
+# Copyright (C) 2005 Jonathan Geisler
+# Copyright (C) 2005 Victor Replogle
+# Copyright (C) 2005 Steve Overton
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: submissions.php
+
+	include_once("lib/config.inc");
+	include_once("lib/data.inc");
+
+	# Set up default directories
+	$problem_handle['comp_dir'] = "$base_dir/test_compile/";
+	
+    // check to see if a file is actually being submitted
+    if ($_FILES[source_file][name] == false) {
+		header("location: testcompile.php?state=1");
+        exit(0);
+    }
+	$orig_file_name = $_FILES[source_file][name];
+        $extension="";
+        for ($i=strlen($_FILES[source_file][name])-1; $i>=0; $i--) {
+                if ($_FILES[source_file][name][$i]==".") {
+                        break;
+                }
+                $extension = $_FILES[source_file][name][$i].$extension;
+        }
+	$ts = time();
+        $uploadfile = "$team_id-$ts";
+		
+	$query = "SELECT Ext FROM FILE_EXTENSIONS";
+	$result = mysql_query($query);
+   	$numrows = mysql_num_rows($result);
+	$valid = false;
+
+	for($i = 0; $i < $numrows; $i = $i + 1) {
+		$row=mysql_fetch_array($result);
+		if($row['Ext'] == $extension) {
+			$valid = true;
+		}
+	}
+	//If file extension exits in File_Extensions table of DB, move file for judging
+	if(!$valid) {
+		header("location: testcompile.php?state=3");
+		exit(0);
+	}
+	$temp_file = $problem_handle['comp_dir'] . $uploadfile . "." . $extension;
+
+	if(move_uploaded_file($_FILES[source_file][tmp_name],$temp_file)) {
+		chmod("$base_dir/test_compile/$uploadfile.$extension", 0644);
+		#Save Original File
+	        $temp_store = read_entire_file($problem_handle['comp_dir'].$uploadfile.".".$extension);
+		save_file($problem_handle['comp_dir'].$uploadfile.".".$extension."-orig",$temp_store);
+	}
+	else {
+		header("location: testcompile.php?state=4");
+		exit(0);
+	}
+
+	$auto_response_number = ENONE;
+	$sql  = "SELECT * ";
+	$sql .= "FROM FILE_EXTENSIONS ";
+	$sql .= "WHERE EXT = '$extension' ";
+	$sql_result = mysql_query($sql);
+	if(!$sql_result){
+        	sql_error($sql);
+        }
+
+	//Get Language of extension
+	$row = mysql_fetch_assoc($sql_result);
+        $ext_id = $row['EXT_ID'];
+        $sql  = "SELECT * ";
+        $sql .= "FROM LANGUAGE_FILE_EXTENSIONS ";
+        $sql .= "WHERE EXT_ID = $ext_id ";
+        $sql_result = mysql_query($sql);
+        $row = mysql_fetch_assoc($sql_result);
+        $lang_id = $row['LANGUAGE_ID'];
+
+        $sql  = "SELECT * ";
+        $sql .= "FROM LANGUAGE ";
+        $sql .= "WHERE LANGUAGE_ID = $lang_id ";
+        $sql_result = mysql_query($sql);
+        $row = mysql_fetch_assoc($sql_result);
+
+        $lang_name = $row['LANGUAGE_NAME'];
+        $max_cpu_time = $row['MAX_CPU_TIME'];
+
+        $replace_headers = $row['REPLACE_HEADERS'];
+        $check_bad_words = $row['CHECK_BAD_WORDS'];
+
+        # The contents of the file in the judged directory
+        $problem_handle['judged_source'] = read_entire_file($problem_handle['comp_dir'].$uploadfile.".".$extension);
+	
+        $problem_handle['file_name'] = $uploadfile;
+        $problem_handle['file_extension'] = $extension;
+        $submission_output = "";
+
+	# Include the specific language file
+        include_once("Lang/$lang_name.inc");
+
+        $use_proc_fs = $problem_handle['use_proc_fs'];
+        # Check for forbidden words
+        if($auto_response_number == ENONE && $check_bad_words) {
+		$sql  = "SELECT WORD ";
+                $sql .= "FROM FORBIDDEN_WORDS ";
+                $sql .= "WHERE LANGUAGE_ID = $lang_id ";
+                $sql_result = mysql_query($sql);
+                if(!$sql_result) {
+                	sql_error($sql);
+                }
+                while($row = mysql_fetch_row($sql_result)) {
+                	if(preg_match("/(.*$row[0].*)/", $problem_handle['judged_source'], $context)) {
+                                $auto_response_number = EFORBIDDEN;
+                      		$submission_output .= "Found word: $row[0]    ";
+                                $submission_output .= "($context[0])\n";
+                        }
+                }
+	}
+	# Replace headers
+        if($auto_response_number == ENONE && $replace_headers) {
+        	$sql  = "SELECT HEADER ";
+                $sql .= "FROM HEADERS ";
+                $sql .= "WHERE LANGUAGE_ID = $lang_id ";
+                $sql_result = mysql_query($sql);
+                if(!$sql_result){
+                	sql_error($sql);
+                }
+                $headers = array();
+                while($row = mysql_fetch_row($sql_result)) {
+                	array_push($headers, $row[0]);
+                }
+## Major boo-boo here. Blows up. Needs to be fixed. E.g.
+##-----
+## Fatal error: Call to undefined function: () in /home/contest/public_html/SBtest4/submit_test.php on line 136
+##-----
+echo "Test compilation currently disabled due to problem. Sorry.<br />\n";
+		exit(0);
+#                $problem_handle['preprocess']($headers);
+                save_file($problem_handle['comp_dir'].$uploadfile.".".$extension,$problem_handle['judged_source']);
+	}
+        # Compile
+        if($auto_response_number == ENONE) {
+	      $problem_handle['judged_dir'] = $problem_handle['comp_dir'];
+  	      $sys_command = $problem_handle['compile']();
+              $tmp = system($sys_command,$result);
+              if($result == 127) {
+          	    $auto_response_number = EUNKNOWN;
+              	    $submission_output .= "**Unknown Error**";
+		$_SESSION['compile_errors'] = $problem_handle['process_errors']($submission_output, $orig_file_name);
+		header("location: testcompile.php?state=5");
+		exit(0);
+              }
+              else if($result) {
+		$auto_response_number = ECOMPILE;
+              	$submission_output .=
+                read_entire_file($problem_handle['comp_dir'] . $problem_handle['file_name'] . ".err");
+		$_SESSION['compile_errors'] = $problem_handle['process_errors']($submission_output, $orig_file_name);
+		header("location: testcompile.php?state=5");
+		exit(0);
+              }
+	}
+	header("location: testcompile.php?state=2");
+	exit(0);
+
+
+# Read the entire file into a string
+# Input: $filename - file path to read
+function read_entire_file($filename) {
+    if(file_exists($filename)){
+                return file_get_contents($filename);
+        }
+        else{
+                return "";
+        }
+}
+
+# Write the submission file to the judged directory
+# Input: $filename - file path to write to
+#        $file - string to write to the file
+function save_file($filename,$file) {
+    if($handle = fopen($filename,"w+")) {
+                if($file && !fwrite($handle,$file)){
+                        $submission_output .= "Error: Unable to write to the file!";
+                        fclose($handle);
+                }
+        }
+    else{
+                $submission_output .= "Error: Unable to open the file!";
+        }
+}
+
+?>
diff --git a/public_html/testcompile.php b/public_html/testcompile.php
new file mode 100755
index 0000000..486ce0e
--- /dev/null
+++ b/public_html/testcompile.php
@@ -0,0 +1,63 @@
+<?
+# TEST COMPILE
+# Copyright (C) 2002, 2003 David Whittington
+# Copyright (C) 2005 Jonathan Geisler
+# Copyright (C) 2005 Victor Replogle
+# Copyright (C) 2005 Steve Overton
+#
+# See the file "COPYING" for further information about the copyright
+# and warranty status of this work.
+#
+# arch-tag: submissions.php
+#
+	include_once("lib/header.inc");
+	include_once("lib/config.inc");
+	include_once("lib/data.inc");
+
+	$state = $_GET['state'];
+	$errors = $_SESSION['compile_errors'];
+	unset($_SESSION['compile_errors']);
+    if ($state == 1) {
+	    echo "<center><font color=\"#ee0000\">No file selected for submission!</font><br><br></center>\n";
+    }
+    if ($state == 2) {
+        echo "<center><font color=\"#00aa00\">Submission successful. No compile errors.</b></font><br><br></center>\n";
+    }
+    if ($state == 3){
+        echo "<center><font color=\"#ee0000\">Invalid file type.</b></font><br><br></center>\n";
+    }
+    if ($state == 4){
+        echo "<center><font color=\"#ee0000\">Error receiving file.</b></font><br><br></center>\n";
+    }
+    if ($state == 5){
+        echo "<center><font color=\"#ee0000\">Compile Errors</b></font><br><br></center>\n";
+	$errors = str_replace("\n", "<br />", $errors);
+	echo "<p> $errors </p>";
+    }
+
+	
+	echo "<b><center>Test Compile</center></b><br>\n";
+	echo "<table align=\"center\" bgcolor=\"#000000\" width=\"90%\" ";
+	echo "cellpadding=\"0\"  cellspacing=\"0\" border=\"0\"><tr><td>\n";
+	echo "<table align=\"center\" width=\"100%\" cellpadding=\"5\" ";
+	echo "cellspacing=\"1\" border=\"0\"><form method=\"post\" enctype=\"multipart/form-data\" action=\"submit_test.php\">\n";
+	echo "<tr><td align=\"center\" bgcolor=\"$data_bg_color1\" colspan=\"3\">\n";
+	echo "<table>";
+	echo "<tr><td align=\"right\">";
+	echo "Source File (C, C++, or Java) &nbsp\n";
+	echo "</td><td>";
+	echo "<input type=\"file\" name=\"source_file\">\n";
+	echo "</td></tr><tr><td align=\"right\">";
+	echo "</td></tr><tr><td colspan=\"2\" align=\"center\">\n";
+	echo "<p>\n";
+	echo "<input type=\"submit\" value=\"Submit Solution\">\n";
+	echo "<input type=\"reset\" value=\"Cancel\">\n";
+	echo "</td></tr></table>\n";
+	echo "</td></tr>\n";
+	echo "</form></table>\n";
+	echo "</td></tr></table>\n";
+	
+	reset($problems);
+	mysql_close ($link);
+	include_once("lib/footer.inc");
+?>
diff --git a/readme/WARNINGS b/readme/WARNINGS
new file mode 100755
index 0000000..9ab418d
--- /dev/null
+++ b/readme/WARNINGS
@@ -0,0 +1,2 @@
+No implementation found for style `listings'
+No implementation found for style `url'
diff --git a/readme/images.aux b/readme/images.aux
new file mode 100755
index 0000000..f23e546
--- /dev/null
+++ b/readme/images.aux
@@ -0,0 +1 @@
+\relax 
diff --git a/readme/images.log b/readme/images.log
new file mode 100755
index 0000000..217074a
--- /dev/null
+++ b/readme/images.log
@@ -0,0 +1,130 @@
+This is TeX, Version 3.14159 (Web2C 7.4.5) (format=latex 2006.9.14)  30 SEP 2006 00:29
+**./images.tex
+(./images.tex
+LaTeX2e <2001/06/01>
+Babel <v3.7h> and hyphenation patterns for american, french, german, ngerman, n
+ohyphenation, loaded.
+
+(/usr/share/texmf/tex/latex/base/article.cls
+Document Class: article 2001/04/21 v1.4e Standard LaTeX document class
+(/usr/share/texmf/tex/latex/base/size10.clo
+File: size10.clo 2001/04/21 v1.4e Standard LaTeX file (size option)
+)
+\c@part=\count79
+\c@section=\count80
+\c@subsection=\count81
+\c@subsubsection=\count82
+\c@paragraph=\count83
+\c@subparagraph=\count84
+\c@figure=\count85
+\c@table=\count86
+\abovecaptionskip=\skip41
+\belowcaptionskip=\skip42
+\bibindent=\dimen102
+) (/usr/share/texmf/tex/latex/base/ifthen.sty
+Package: ifthen 2001/05/26 v1.1c Standard LaTeX ifthen package (DPC)
+) (/usr/share/texmf/tex/latex/listings/listings.sty
+Package: listings 2002/04/01 1.0 (Carsten Heinz)
+(/usr/share/texmf/tex/latex/graphics/keyval.sty
+Package: keyval 1999/03/16 v1.13 key=value parser (DPC)
+\KV@toks@=\toks14
+)
+\lst@mode=\count87
+\lst@gtempboxa=\box26
+\lst@token=\toks15
+\lst@length=\count88
+\lst@currlwidth=\dimen103
+\lst@column=\count89
+\lst@pos=\count90
+\lst@lostspace=\dimen104
+\lst@width=\dimen105
+\lst@newlines=\count91
+\lst@lineno=\count92
+\c@lstlisting=\count93
+\lst@maxwidth=\dimen106
+(/usr/share/texmf/tex/latex/listings/lstpatch.sty
+File: lstpatch.sty 2002/10/13 1.0i (Carsten Heinz)
+) (/usr/share/texmf/tex/latex/listings/lstmisc.sty
+File: lstmisc.sty 2002/04/01 1.0 (Carsten Heinz)
+\c@lstnumber=\count94
+\lst@skipnumbers=\count95
+\lst@framebox=\box27
+) (/usr/share/texmf/tex/latex/listings/listings.cfg
+File: listings.cfg 2002/04/01 v1.0 listings configuration
+)) (/usr/share/texmf/tex/latex/html/url.sty
+Package: url 1999/03/02  ver 1.4  Verb mode for urls, email addresses, and file
+ names
+) (/usr/share/texmf/tex/latex/graphics/color.sty
+Package: color 1999/02/16 v1.0i Standard LaTeX Color (DPC)
+(/usr/share/texmf/tex/latex/config/color.cfg
+File: color.cfg 2001/08/31 v1.1 color configuration of teTeX/TeXLive
+)
+Package color Info: Driver file: dvips.def on input line 125.
+(/usr/share/texmf/tex/latex/graphics/dvips.def
+File: dvips.def 1999/02/16 v3.0i Driver-dependant file (DPC,SPQR)
+) (/usr/share/texmf/tex/latex/graphics/dvipsnam.def
+File: dvipsnam.def 1999/02/16 v3.0i Driver-dependant file (DPC,SPQR)
+)) (/usr/share/texmf/tex/latex/base/inputenc.sty
+Package: inputenc 2001/07/10 v0.99a Input encoding file 
+)
+\sizebox=\box28
+\lthtmlwrite=\write3
+(./images.aux)
+\openout1 = `images.aux'.
+
+LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 129.
+LaTeX Font Info:    ... okay on input line 129.
+LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 129.
+LaTeX Font Info:    ... okay on input line 129.
+LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 129.
+LaTeX Font Info:    ... okay on input line 129.
+LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 129.
+LaTeX Font Info:    ... okay on input line 129.
+LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 129.
+LaTeX Font Info:    ... okay on input line 129.
+LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 129.
+LaTeX Font Info:    ... okay on input line 129.
+
+latex2htmlLength hsize=349.0pt
+
+latex2htmlLength vsize=697.295pt
+
+latex2htmlLength hoffset=0.0pt
+
+latex2htmlLength voffset=0.0pt
+
+latex2htmlLength topmargin=0.0pt
+
+latex2htmlLength topskip=0.00003pt
+
+latex2htmlLength headheight=0.0pt
+
+latex2htmlLength headsep=0.0pt
+
+latex2htmlLength parskip=0.0pt plus 1.0pt
+
+latex2htmlLength oddsidemargin=0.0pt
+
+latex2htmlLength evensidemargin=0.0pt
+
+l2hSize :lstlisting15:24.0pt::0.0pt::349.0pt.
+[1
+
+
+
+]
+l2hSize :lstlisting17:24.0pt::0.0pt::349.0pt.
+[2
+
+
+] (./images.aux) ) 
+Here is how much of TeX's memory you used:
+ 1730 strings out of 95847
+ 23853 string characters out of 1195948
+ 67753 words of memory out of 1000001
+ 4708 multiletter control sequences out of 10000+50000
+ 3640 words of font info for 14 fonts, out of 500000 for 1000
+ 14 hyphenation exceptions out of 1000
+ 26i,5n,42p,171b,527s stack positions out of 1500i,500n,5000p,200000b,5000s
+
+Output written on images.dvi (2 pages, 632 bytes).
diff --git a/readme/images.pl b/readme/images.pl
new file mode 100755
index 0000000..55cdc7c
--- /dev/null
+++ b/readme/images.pl
@@ -0,0 +1,22 @@
+# LaTeX2HTML 2002-2-1 (1.71)
+# Associate images original text with physical files.
+
+
+$key = q/{lstlisting}slashslashshouldIeatwithaforkorspoon?{lstlisting};AAT/;
+$cached_env_img{$key} = q|<IMG
+ WIDTH="350" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
+ SRC="|."$dir".q|img1.png"
+ ALT="\begin{lstlisting}
+// should I eat with a fork or spoon?
+\end{lstlisting}">|; 
+
+$key = q/{lstlisting}execute(){lstlisting};AAT/;
+$cached_env_img{$key} = q|<IMG
+ WIDTH="80" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
+ SRC="|."$dir".q|img2.png"
+ ALT="\begin{lstlisting}
+execute()
+\end{lstlisting}">|; 
+
+1;
+
diff --git a/readme/images.tex b/readme/images.tex
new file mode 100755
index 0000000..63fec10
--- /dev/null
+++ b/readme/images.tex
@@ -0,0 +1,168 @@
+\batchmode
+\documentclass{article}
+\RequirePackage{ifthen}
+
+
+
+
+
+\setlength{\marginparwidth}{0in} 
+
+\setlength{\oddsidemargin}{0in} 
+
+\setlength{\textwidth}{6in} 
+
+\setlength{\textheight}{8.5in} 
+
+
+\usepackage{listings}
+\usepackage{url}
+
+
+
+
+\usepackage[dvips]{color}
+
+
+\pagecolor[gray]{.7}
+
+\usepackage[]{inputenc}
+
+
+
+\makeatletter
+
+\makeatletter
+\count@=\the\catcode`\_ \catcode`\_=8 
+\newenvironment{tex2html_wrap}{}{}%
+\catcode`\<=12\catcode`\_=\count@
+\newcommand{\providedcommand}[1]{\expandafter\providecommand\csname #1\endcsname}%
+\newcommand{\renewedcommand}[1]{\expandafter\providecommand\csname #1\endcsname{}%
+  \expandafter\renewcommand\csname #1\endcsname}%
+\newcommand{\newedenvironment}[1]{\newenvironment{#1}{}{}\renewenvironment{#1}}%
+\let\newedcommand\renewedcommand
+\let\renewedenvironment\newedenvironment
+\makeatother
+\let\mathon=$
+\let\mathoff=$
+\ifx\AtBeginDocument\undefined \newcommand{\AtBeginDocument}[1]{}\fi
+\newbox\sizebox
+\setlength{\hoffset}{0pt}\setlength{\voffset}{0pt}
+\addtolength{\textheight}{\footskip}\setlength{\footskip}{0pt}
+\addtolength{\textheight}{\topmargin}\setlength{\topmargin}{0pt}
+\addtolength{\textheight}{\headheight}\setlength{\headheight}{0pt}
+\addtolength{\textheight}{\headsep}\setlength{\headsep}{0pt}
+\setlength{\textwidth}{349pt}
+\newwrite\lthtmlwrite
+\makeatletter
+\let\realnormalsize=\normalsize
+\global\topskip=2sp
+\def\preveqno{}\let\real@float=\@float \let\realend@float=\end@float
+\def\@float{\let\@savefreelist\@freelist\real@float}
+\def\liih@math{\ifmmode$\else\bad@math\fi}
+\def\end@float{\realend@float\global\let\@freelist\@savefreelist}
+\let\real@dbflt=\@dbflt \let\end@dblfloat=\end@float
+\let\@largefloatcheck=\relax
+\let\if@boxedmulticols=\iftrue
+\def\@dbflt{\let\@savefreelist\@freelist\real@dbflt}
+\def\adjustnormalsize{\def\normalsize{\mathsurround=0pt \realnormalsize
+ \parindent=0pt\abovedisplayskip=0pt\belowdisplayskip=0pt}%
+ \def\phantompar{\csname par\endcsname}\normalsize}%
+\def\lthtmltypeout#1{{\let\protect\string \immediate\write\lthtmlwrite{#1}}}%
+\newcommand\lthtmlhboxmathA{\adjustnormalsize\setbox\sizebox=\hbox\bgroup\kern.05em }%
+\newcommand\lthtmlhboxmathB{\adjustnormalsize\setbox\sizebox=\hbox to\hsize\bgroup\hfill }%
+\newcommand\lthtmlvboxmathA{\adjustnormalsize\setbox\sizebox=\vbox\bgroup %
+ \let\ifinner=\iffalse \let\)\liih@math }%
+\newcommand\lthtmlboxmathZ{\@next\next\@currlist{}{\def\next{\voidb@x}}%
+ \expandafter\box\next\egroup}%
+\newcommand\lthtmlmathtype[1]{\gdef\lthtmlmathenv{#1}}%
+\newcommand\lthtmllogmath{\dimen0\ht\sizebox \advance\dimen0\dp\sizebox
+  \ifdim\dimen0>.95\vsize
+   \lthtmltypeout{%
+*** image for \lthtmlmathenv\space is too tall at \the\dimen0, reducing to .95 vsize ***}%
+   \ht\sizebox.95\vsize \dp\sizebox\z@ \fi
+  \lthtmltypeout{l2hSize %
+:\lthtmlmathenv:\the\ht\sizebox::\the\dp\sizebox::\the\wd\sizebox.\preveqno}}%
+\newcommand\lthtmlfigureA[1]{\let\@savefreelist\@freelist
+       \lthtmlmathtype{#1}\lthtmlvboxmathA}%
+\newcommand\lthtmlpictureA{\bgroup\catcode`\_=8 \lthtmlpictureB}%
+\newcommand\lthtmlpictureB[1]{\lthtmlmathtype{#1}\egroup
+       \let\@savefreelist\@freelist \lthtmlhboxmathB}%
+\newcommand\lthtmlpictureZ[1]{\hfill\lthtmlfigureZ}%
+\newcommand\lthtmlfigureZ{\lthtmlboxmathZ\lthtmllogmath\copy\sizebox
+       \global\let\@freelist\@savefreelist}%
+\newcommand\lthtmldisplayA{\bgroup\catcode`\_=8 \lthtmldisplayAi}%
+\newcommand\lthtmldisplayAi[1]{\lthtmlmathtype{#1}\egroup\lthtmlvboxmathA}%
+\newcommand\lthtmldisplayB[1]{\edef\preveqno{(\theequation)}%
+  \lthtmldisplayA{#1}\let\@eqnnum\relax}%
+\newcommand\lthtmldisplayZ{\lthtmlboxmathZ\lthtmllogmath\lthtmlsetmath}%
+\newcommand\lthtmlinlinemathA{\bgroup\catcode`\_=8 \lthtmlinlinemathB}
+\newcommand\lthtmlinlinemathB[1]{\lthtmlmathtype{#1}\egroup\lthtmlhboxmathA
+  \vrule height1.5ex width0pt }%
+\newcommand\lthtmlinlineA{\bgroup\catcode`\_=8 \lthtmlinlineB}%
+\newcommand\lthtmlinlineB[1]{\lthtmlmathtype{#1}\egroup\lthtmlhboxmathA}%
+\newcommand\lthtmlinlineZ{\egroup\expandafter\ifdim\dp\sizebox>0pt %
+  \expandafter\centerinlinemath\fi\lthtmllogmath\lthtmlsetinline}
+\newcommand\lthtmlinlinemathZ{\egroup\expandafter\ifdim\dp\sizebox>0pt %
+  \expandafter\centerinlinemath\fi\lthtmllogmath\lthtmlsetmath}
+\newcommand\lthtmlindisplaymathZ{\egroup %
+  \centerinlinemath\lthtmllogmath\lthtmlsetmath}
+\def\lthtmlsetinline{\hbox{\vrule width.1em \vtop{\vbox{%
+  \kern.1em\copy\sizebox}\ifdim\dp\sizebox>0pt\kern.1em\else\kern.3pt\fi
+  \ifdim\hsize>\wd\sizebox \hrule depth1pt\fi}}}
+\def\lthtmlsetmath{\hbox{\vrule width.1em\kern-.05em\vtop{\vbox{%
+  \kern.1em\kern0.8 pt\hbox{\hglue.17em\copy\sizebox\hglue0.8 pt}}\kern.3pt%
+  \ifdim\dp\sizebox>0pt\kern.1em\fi \kern0.8 pt%
+  \ifdim\hsize>\wd\sizebox \hrule depth1pt\fi}}}
+\def\centerinlinemath{%
+  \dimen1=\ifdim\ht\sizebox<\dp\sizebox \dp\sizebox\else\ht\sizebox\fi
+  \advance\dimen1by.5pt \vrule width0pt height\dimen1 depth\dimen1 
+ \dp\sizebox=\dimen1\ht\sizebox=\dimen1\relax}
+
+\def\lthtmlcheckvsize{\ifdim\ht\sizebox<\vsize 
+  \ifdim\wd\sizebox<\hsize\expandafter\hfill\fi \expandafter\vfill
+  \else\expandafter\vss\fi}%
+\providecommand{\selectlanguage}[1]{}%
+\makeatletter \tracingstats = 1 
+
+
+\begin{document}
+\pagestyle{empty}\thispagestyle{empty}\lthtmltypeout{}%
+\lthtmltypeout{latex2htmlLength hsize=\the\hsize}\lthtmltypeout{}%
+\lthtmltypeout{latex2htmlLength vsize=\the\vsize}\lthtmltypeout{}%
+\lthtmltypeout{latex2htmlLength hoffset=\the\hoffset}\lthtmltypeout{}%
+\lthtmltypeout{latex2htmlLength voffset=\the\voffset}\lthtmltypeout{}%
+\lthtmltypeout{latex2htmlLength topmargin=\the\topmargin}\lthtmltypeout{}%
+\lthtmltypeout{latex2htmlLength topskip=\the\topskip}\lthtmltypeout{}%
+\lthtmltypeout{latex2htmlLength headheight=\the\headheight}\lthtmltypeout{}%
+\lthtmltypeout{latex2htmlLength headsep=\the\headsep}\lthtmltypeout{}%
+\lthtmltypeout{latex2htmlLength parskip=\the\parskip}\lthtmltypeout{}%
+\lthtmltypeout{latex2htmlLength oddsidemargin=\the\oddsidemargin}\lthtmltypeout{}%
+\makeatletter
+\if@twoside\lthtmltypeout{latex2htmlLength evensidemargin=\the\evensidemargin}%
+\else\lthtmltypeout{latex2htmlLength evensidemargin=\the\oddsidemargin}\fi%
+\lthtmltypeout{}%
+\makeatother
+\setcounter{page}{1}
+\onecolumn
+
+% !!! IMAGES START HERE !!!
+
+{\newpage\clearpage
+\lthtmlfigureA{lstlisting15}%
+\begin{lstlisting}
+// should I eat with a fork or spoon?
+\end{lstlisting}%
+\lthtmlfigureZ
+\lthtmlcheckvsize\clearpage}
+
+{\newpage\clearpage
+\lthtmlfigureA{lstlisting17}%
+\begin{lstlisting}
+execute()
+\end{lstlisting}%
+\lthtmlfigureZ
+\lthtmlcheckvsize\clearpage}
+
+
+\end{document}
diff --git a/readme/img1.png b/readme/img1.png
new file mode 100755
index 0000000..988360e
Binary files /dev/null and b/readme/img1.png differ
diff --git a/readme/img2.png b/readme/img2.png
new file mode 100755
index 0000000..7ef192c
Binary files /dev/null and b/readme/img2.png differ
diff --git a/readme/index.html b/readme/index.html
new file mode 100755
index 0000000..4599bfc
--- /dev/null
+++ b/readme/index.html
@@ -0,0 +1,239 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
+
+<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
+original version by:  Nikos Drakos, CBLU, University of Leeds
+* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
+* with significant contributions from:
+  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
+<HTML>
+<HEAD>
+<TITLE>inst</TITLE>
+<META NAME="description" CONTENT="inst">
+<META NAME="keywords" CONTENT="inst">
+<META NAME="resource-type" CONTENT="document">
+<META NAME="distribution" CONTENT="global">
+
+<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
+<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
+
+<LINK REL="STYLESHEET" HREF="inst.css">
+
+<LINK REL="next" HREF="node1.html">
+</HEAD>
+
+<BODY >
+<!--Navigation Panel-->
+<A NAME="tex2html4"
+  HREF="node1.html">
+<IMG WIDTH="37" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="next"
+ SRC="file:/usr/lib/latex2html/icons/next.png"></A> 
+<IMG WIDTH="26" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="up"
+ SRC="file:/usr/lib/latex2html/icons/up_g.png"> 
+<IMG WIDTH="63" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="previous"
+ SRC="file:/usr/lib/latex2html/icons/prev_g.png">   
+<BR>
+<B> Next:</B> <A NAME="tex2html5"
+  HREF="node1.html">About this document ...</A>
+<BR>
+<BR>
+<!--End of Navigation Panel-->
+
+<P>
+This document is to explain how our setup works.  The environment is
+web based so you use a standard web browser to interface with our
+judging system.  When you submit a problem, we do a bunch of things to
+try to make sure your code is safe to run.  The first thing we do is
+look for ``bad words'' that may indicate you are trying to do
+something you shouldn't be doing.  These things include reading files,
+running assembly code, connecting to the network, etc.  The following
+is a list of all of these words:
+
+<UL>
+<LI>fork
+</LI>
+<LI>exec
+</LI>
+<LI>open
+</LI>
+<LI>system
+</LI>
+<LI>fstream
+</LI>
+<LI>socket
+</LI>
+<LI>accept
+</LI>
+<LI>listen
+</LI>
+<LI>connect
+</LI>
+<LI>mmap
+</LI>
+<LI>__asm__
+</LI>
+</UL>
+Currently our program is very dumb about how it looks through your
+code.  If it finds these words anywhere, it will flag the problem as
+incorrect and refuse to even compile it.  This includes comments, so
+the following code would be considered illegal even though it is
+harmless:
+<BR>
+<IMG
+ WIDTH="350" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
+ SRC="img1.png"
+ ALT="\begin{lstlisting}
+// should I eat with a fork or spoon?
+\end{lstlisting}">
+<BR>
+<BR>
+<IMG
+ WIDTH="80" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
+ SRC="img2.png"
+ ALT="\begin{lstlisting}
+execute()
+\end{lstlisting}">
+<BR>
+
+<P>
+After we do this check, we remove all the files you have included and
+replace them with a predefined set of library files.  If you try to
+access files outside those provided, you will come across problems.
+Here is the list of files by language:
+
+<UL>
+<LI><EM>C</EM>-assert.h, ctype.h, float.h, limits.h, malloc.h,
+	math.h, stdlib.h, stdio.h, string.h
+</LI>
+<LI><EM>C++</EM>-algorithm, bitset, cassert, cctype, cfloat,
+	climits, cmalloc, cmath, cstdlib, cstdio, cstring, iomanip,
+	iterator, list, map, new, queue, set, stack, stdexcept, string
+</LI>
+<LI><EM>Java</EM>-java.lang.*, java.io.*, java.util.*, java.math.*
+</LI>
+</UL>
+
+<P>
+When your program runs, we send all input to stdin and receive all
+output from stdout.  We ignore any output sent to stderr, so we
+suggest you send any debugging output there so you don't have to worry
+about removing that before submitting.
+
+<P>
+Because of the bytecode nature of Java, people need to be aware of
+several additional mechanisms if they are going to code in that
+language:
+
+<UL>
+<LI>Do not make public classes.  If you do so, the compiler will
+	expect the file to be named the same as your class name and
+	our program can't possibly be expected to know the name of the
+	class you are trying to run.
+</LI>
+<LI>The class in the file that contains the main() method must
+	also be named Main.  This just makes it easier for our system
+	to locate the main method and the class it is associated with.
+</LI>
+<LI>Put all your classes in a single file.  This should allow
+	the upload interface to work well no matter what kind of
+	solution you come up with.
+</LI>
+</UL>
+
+<P>
+The possible responses from the judge are:
+
+<OL>
+<LI>Accepted as correct
+</LI>
+<LI>Forbidden word in source (trying to open()) files, etc.)
+</LI>
+<LI>Undefined file type (can't determine which compiler to use
+	from file e.g., .txt)
+</LI>
+<LI>Compile error
+</LI>
+<LI>Exceeds time limit
+</LI>
+<LI>Incorrect output (problem gives wrong answer)
+</LI>
+<LI>Format error (problem gives right answer, but does not meet
+	output specifications)
+</LI>
+<LI>Runtime error (program crashes e.g., seg fault or uncaugt
+	exception)
+</LI>
+<LI>Unknown error (catch all for contingencies-shouldn't see
+	this)
+</LI>
+</OL>
+
+<P>
+Make sure your C/C++ programs return 0 at the end.  For some reason,
+gcc returns a failure code to the operating system if you do not
+include that statement at the end of your successful runs.
+
+<P>
+we offer contestants the opportunity to compile their programs using
+the same compiler as the server since its quite possible that some
+contestants are using different compilers that may accept
+(non-standard) syntax that our compiler doesn't accept.  We will
+return any errors that our compiler generates so that contestants can
+see exactly the problems we see with their code.
+
+<P>
+Please do not use the test compile as your main compilation tool,
+since we do not return an executable and the compilation process
+competes with other processes on the web server.  We don't want the web
+interface to slow down because too many people are hitting the
+compilation.  We anticipate this being used as a last minute check
+before the program is submitted for judging.  This should eliminate any
+compilation errors from contestants because they can always check
+before submission.
+
+<P>
+Here is the URL for the setup:
+
+<P>
+
+<UL>
+<LI>official contest:
+	<TT><A NAME="tex2html1"
+  HREF="http://jacob.css.taylor.edu/~tlitwill/test/TestContest">http://jacob.css.taylor.edu/~tlitwill/test/TestContest</A></TT>
+</LI>
+
+<P>
+We are using gcc 3.4.4 and Sun's 1.5.0_02 Java JDK.  We can give you more
+detailed version information if you need it.  Hopefully, this
+shouldn't be any type of problem since you shouldn't need any esoteric
+features of any language.
+
+<P>
+<BR><HR>
+<!--Table of Child-Links-->
+<A NAME="CHILD_LINKS"></A>
+
+<UL>
+<LI><A NAME="tex2html6"
+  HREF="node1.html">About this document ...</A>
+</UL>
+<!--End of Table of Child-Links-->
+<HR>
+<!--Navigation Panel-->
+<A NAME="tex2html4"
+  HREF="node1.html">
+<IMG WIDTH="37" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="next"
+ SRC="file:/usr/lib/latex2html/icons/next.png"></A> 
+<IMG WIDTH="26" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="up"
+ SRC="file:/usr/lib/latex2html/icons/up_g.png"> 
+<IMG WIDTH="63" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="previous"
+ SRC="file:/usr/lib/latex2html/icons/prev_g.png">   
+<BR>
+<B> Next:</B> <A NAME="tex2html5"
+  HREF="node1.html">About this document ...</A>
+<!--End of Navigation Panel-->
+<ADDRESS>
+Jonathan Geisler
+2006-09-30
+</ADDRESS>
+</BODY>
+</HTML>
diff --git a/readme/inst.css b/readme/inst.css
new file mode 100755
index 0000000..d1824af
--- /dev/null
+++ b/readme/inst.css
@@ -0,0 +1,30 @@
+/* Century Schoolbook font is very similar to Computer Modern Math: cmmi */
+.MATH    { font-family: "Century Schoolbook", serif; }
+.MATH I  { font-family: "Century Schoolbook", serif; font-style: italic }
+.BOLDMATH { font-family: "Century Schoolbook", serif; font-weight: bold }
+
+/* implement both fixed-size and relative sizes */
+SMALL.XTINY		{ font-size : xx-small }
+SMALL.TINY		{ font-size : x-small  }
+SMALL.SCRIPTSIZE	{ font-size : smaller  }
+SMALL.FOOTNOTESIZE	{ font-size : small    }
+SMALL.SMALL		{  }
+BIG.LARGE		{  }
+BIG.XLARGE		{ font-size : large    }
+BIG.XXLARGE		{ font-size : x-large  }
+BIG.HUGE		{ font-size : larger   }
+BIG.XHUGE		{ font-size : xx-large }
+
+/* heading styles */
+H1		{  }
+H2		{  }
+H3		{  }
+H4		{  }
+H5		{  }
+
+/* mathematics styles */
+DIV.displaymath		{ }	/* math displays */
+TD.eqno			{ }	/* equation-number cells */
+
+
+/* document-specific styles come next */
diff --git a/readme/inst.html b/readme/inst.html
new file mode 100755
index 0000000..af78e1d
--- /dev/null
+++ b/readme/inst.html
@@ -0,0 +1,212 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
+
+<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
+original version by:  Nikos Drakos, CBLU, University of Leeds
+* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
+* with significant contributions from:
+  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
+<HTML>
+<HEAD>
+<TITLE>inst</TITLE>
+<META NAME="description" CONTENT="inst">
+<META NAME="keywords" CONTENT="inst">
+<META NAME="resource-type" CONTENT="document">
+<META NAME="distribution" CONTENT="global">
+
+<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
+<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
+
+<LINK REL="STYLESHEET" HREF="inst.css">
+
+<LINK REL="next" HREF="node1.html">
+</HEAD>
+
+<BODY >
+
+<P>
+This document is to explain how our setup works.  The environment is
+web based so you use a standard web browser to interface with our
+judging system.  When you submit a problem, we do a bunch of things to
+try to make sure your code is safe to run.  The first thing we do is
+look for ``bad words'' that may indicate you are trying to do
+something you shouldn't be doing.  These things include reading files,
+running assembly code, connecting to the network, etc.  The following
+is a list of all of these words:
+
+<UL>
+<LI>fork
+</LI>
+<LI>exec
+</LI>
+<LI>open
+</LI>
+<LI>system
+</LI>
+<LI>fstream
+</LI>
+<LI>socket
+</LI>
+<LI>accept
+</LI>
+<LI>listen
+</LI>
+<LI>connect
+</LI>
+<LI>mmap
+</LI>
+<LI>__asm__
+</LI>
+</UL>
+Currently our program is very dumb about how it looks through your
+code.  If it finds these words anywhere, it will flag the problem as
+incorrect and refuse to even compile it.  This includes comments, so
+the following code would be considered illegal even though it is
+harmless:
+<BR>
+<IMG
+ WIDTH="350" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
+ SRC="http://jacob.css.taylor.edu/~judge/readme/img1.png"
+ ALT="\begin{lstlisting}
+// should I eat with a fork or spoon?
+\end{lstlisting}">
+<BR>
+<BR>
+<IMG
+ WIDTH="80" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
+ SRC="http://jacob.css.taylor.edu/~judge/readme/img2.png"
+ ALT="\begin{lstlisting}
+execute()
+\end{lstlisting}">
+<BR>
+
+<P>
+After we do this check, we remove all the files you have included and
+replace them with a predefined set of library files.  If you try to
+access files outside those provided, you will come across problems.
+Here is the list of files by language:
+
+<UL>
+<LI><EM>C</EM>: assert.h, ctype.h, float.h, limits.h, malloc.h,
+	math.h, stdlib.h, stdio.h, string.h
+</LI>
+<LI><EM>C++</EM>: algorithm, bitset, cassert, cctype, cfloat,
+	climits, cmalloc, cmath, cstdlib, cstdio, cstring, iomanip,
+	iterator, list, map, new, queue, set, stack, stdexcept, string
+</LI>
+<LI><EM>Java</EM>: java.lang.*, java.io.*, java.util.*, java.math.*
+</LI>
+</UL>
+
+<P>
+When your program runs, we send all input to stdin and receive all
+output from stdout.  We ignore any output sent to stderr, so we
+suggest you send any debugging output there so you don't have to worry
+about removing that before submitting.
+
+<P>
+Because of the bytecode nature of Java, people need to be aware of
+several additional mechanisms if they are going to code in that
+language:
+
+<UL>
+<LI><b>Do not make public classes!</b>  If you do so, the compiler will
+	expect the file to be named the same as your class name and
+	our program can't possibly be expected to know the name of the
+	class you are trying to run.
+</LI>
+<LI><b>The class in the file that contains the main() method must
+	also be named Main</b>.  This just makes it easier for our system
+	to locate the main method and the class it is associated with.
+</LI>
+<LI><b>Put all your classes in a single file</b>.  This should allow
+	the upload interface to work well no matter what kind of
+	solution you come up with.
+</LI>
+</UL>
+
+<P>
+The possible responses from the judge are:
+
+<OL>
+<LI>Accepted as correct
+</LI>
+<LI>Forbidden word in source (trying to open()) files, etc.)
+</LI>
+<LI>Undefined file type (can't determine which compiler to use
+	from file e.g., .txt)
+</LI>
+<LI>Compile error
+</LI>
+<LI>Exceeds time limit
+</LI>
+<LI>Incorrect output (problem gives wrong answer)
+</LI>
+<LI>Format error (problem gives right answer, but does not meet
+	output specifications)
+</LI>
+<LI>Runtime error (program crashes e.g., seg fault or uncaugt
+	exception)
+</LI>
+<LI>Unknown error (catch all for contingencies-shouldn't see
+	this)
+</LI>
+</OL>
+
+<P>
+Make sure your C/C++ programs return 0 at the end.  For some reason,
+gcc returns a failure code to the operating system if you do not
+include that statement at the end of your successful runs.
+
+<P>
+we offer contestants the opportunity to compile their programs using
+the same compiler as the server since its quite possible that some
+contestants are using different compilers that may accept
+(non-standard) syntax that our compiler doesn't accept.  We will
+return any errors that our compiler generates so that contestants can
+see exactly the problems we see with their code.
+
+<P>
+Please do not use the test compile as your main compilation tool,
+since we do not return an executable and the compilation process
+competes with other processes on the web server.  We don't want the web
+interface to slow down because too many people are hitting the
+compilation.  We anticipate this being used as a last minute check
+before the program is submitted for judging.  This should eliminate any
+compilation errors from contestants because they can always check
+before submission.
+
+<P>
+Here are the URLs for each setup:
+
+<P>
+
+<UL>
+<LI>official contest:
+	<TT><A NAME="tex2html1"
+  HREF="http://jacob.css.taylor.edu/~contest/TU2008Contest">http://jacob.css.taylor.edu/~contest/TU2008Contest</A></TT>
+</LI>
+<LI>practice contest:
+	<TT><A NAME="tex2html2"
+  HREF="http://jacob.css.taylor.edu/~contest/TU2008Warmup">http://jacob.css.taylor.edu/~contest/TU2008Warmup</A></TT>
+</LI>
+</UL>
+
+<P>
+We are using gcc 3.4.4 and Sun's 1.5.0_02 Java JDK.  We can give you more
+detailed version information if you need it.  Hopefully, this
+shouldn't be any type of problem since you shouldn't need any esoteric
+features of any language.
+
+<P>
+<BR><HR>
+<!--Table of Child-Links-->
+<A NAME="CHILD_LINKS"></A>
+
+<!--End of Table of Child-Links-->
+<HR>
+<ADDRESS>
+Jonathan Geisler
+2008-04-19
+</ADDRESS>
+</BODY>
+</HTML>
diff --git a/readme/labels.pl b/readme/labels.pl
new file mode 100755
index 0000000..34bd4cc
--- /dev/null
+++ b/readme/labels.pl
@@ -0,0 +1,13 @@
+# LaTeX2HTML 2002-2-1 (1.71)
+# Associate labels original text with physical files.
+
+
+1;
+
+
+# LaTeX2HTML 2002-2-1 (1.71)
+# labels from external_latex_labels array.
+
+
+1;
+
diff --git a/readme/node1.html b/readme/node1.html
new file mode 100755
index 0000000..ac3b21a
--- /dev/null
+++ b/readme/node1.html
@@ -0,0 +1,72 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
+
+<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
+original version by:  Nikos Drakos, CBLU, University of Leeds
+* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
+* with significant contributions from:
+  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
+<HTML>
+<HEAD>
+<TITLE>About this document ...</TITLE>
+<META NAME="description" CONTENT="About this document ...">
+<META NAME="keywords" CONTENT="inst">
+<META NAME="resource-type" CONTENT="document">
+<META NAME="distribution" CONTENT="global">
+
+<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
+<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
+
+<LINK REL="STYLESHEET" HREF="inst.css">
+
+<LINK REL="previous" HREF="inst.html">
+<LINK REL="up" HREF="inst.html">
+</HEAD>
+
+<BODY >
+<!--Navigation Panel-->
+<IMG WIDTH="37" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="next"
+ SRC="file:/usr/lib/latex2html/icons/next_g.png"> 
+<A NAME="tex2html11"
+  HREF="inst.html">
+<IMG WIDTH="26" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="up"
+ SRC="file:/usr/lib/latex2html/icons/up.png"></A> 
+<A NAME="tex2html7"
+  HREF="inst.html">
+<IMG WIDTH="63" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="previous"
+ SRC="file:/usr/lib/latex2html/icons/prev.png"></A>   
+<BR>
+<B> Up:</B> <A NAME="tex2html12"
+  HREF="inst.html">inst</A>
+<B> Previous:</B> <A NAME="tex2html8"
+  HREF="inst.html">inst</A>
+<BR>
+<BR>
+<!--End of Navigation Panel-->
+
+<H1><A NAME="SECTION00010000000000000000">
+About this document ...</A>
+</H1>
+ <P>
+This document was generated using the
+<A HREF="http://www.latex2html.org/"><STRONG>LaTeX</STRONG>2<tt>HTML</tt></A> translator Version 2002-2-1 (1.71)
+<P>
+Copyright &#169; 1993, 1994, 1995, 1996,
+<A HREF="http://cbl.leeds.ac.uk/nikos/personal.html">Nikos Drakos</A>, 
+Computer Based Learning Unit, University of Leeds.
+<BR>
+Copyright &#169; 1997, 1998, 1999,
+<A HREF="http://www.maths.mq.edu.au/~ross/">Ross Moore</A>, 
+Mathematics Department, Macquarie University, Sydney.
+<P>
+The command line arguments were: <BR>
+ <STRONG>latex2html</STRONG> <TT><A NAME="tex2html3"
+  HREF="../inst.tex">inst.tex</A></TT>
+<P>
+The translation was initiated by Jonathan Geisler on 2006-09-30
+<BR><HR>
+<ADDRESS>
+Jonathan Geisler
+2006-09-30
+</ADDRESS>
+</BODY>
+</HTML>
