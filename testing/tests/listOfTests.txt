enhancements from the issues log on github are not included, but everything else is

for the most part things are organized by user type, and then by page

An x at the beginning of a line means that we have written a test for that. A - is just a stand in for a bullet point and implies that the test or tests are not yet written.

I DONT KNOW WHERE THESE GO 
Java logs get overwritten
    [[ cannot currently go in the UI testing because the files are only
    generated by the automated tester and never presented anywhere
    using the web interface.  Either, separate tests will need to be
    made for this functionality, OR a new UI needs to be built to
    display these log files to the administrator/judge.  I think the
    latter is preferred because then people could run this system
    without having to have login privileges on the machine. ]]
Diff output missing newlines
    [[ When looking at the results of a program submission, there is a
    link to the output generated by the program side-by-side with the
    expected results.  This is where the bug is.  It does not display
    things properly and needs to be fixed.]]

FEATURES AND FUNCTIONALITY (aka things to write tests for)
 - for creating the contest and administration pages

ALL PAGES?
- shall have header bar
 - header bar shall contain logo
 
CREATE CONTEST (1)
- The name of the contest cannot contain certain characters (sql injection) - test thoroughly 
    [[there are also sh injection possibilities since the contest name
    gets passed to shell commands as part of the creation.  As a
    result, you'll really have to limit the set of legal characters to
    avoid both types of injection.]]
x initial page shall support login to system
- shall have header text "ADMIN" once logged in (is this really necessary? In current implementation, it's hidden in the header bar)
- shall have text "Initial Contest Setup"
x page shall have short text input fields for the contest name, contest host name, database host name, and a password to use with the database host
 -* the page shall test for valid input in all four fields before allowing the form to submit
- page shall have submit button
 -* submit button shall work iff all fields are filled in (OR trying to submit w/o all fields filled in shall pop up with an error rather than going to the next page)
 - if all fields are filled in, submit button shall POST to createcontest2.php
 
CREATE CONTEST (2)
- the script shall create folders with the given name of the contest to run the contest from
    [[again, this will be hard to test from the UI since they are
    created on the server and not exposed to the web browser.  From
    now on, I'll label this type of issue as "Not web accessible."]]
 - it shall copy relevant files from the repository to the appropriate places in the contest directory
 - it shall remove any unexpected files from the new folders (in case of a repeat contest name calling on existing folders)
    [[repeat contest names are not allowed.  This should be an error
    that redirects back to the first contest page and requires the
    user to give a new name.]] Interesting. The current code (so I assumed the intention) seems to find the folders, and delete all contents before populating them, accounting for the possibility that they already exist, and the most likely cause of that, in my mind, was repeat contest names
 - it shall make the "jails" folders that contestent-submitted code will be executed within
    [[Not web accessible.]]
  - these folders shall also be emptied, then have appropriate contents copied over from the repository
    [[Not necessary since the folders will be created by creation
    (empty already), or copying know good template (don't want to
    delete anything from the template).]]
 - the script shall set the permissions of the newly created contest folders to 755 (rwx for the server, just r-x for everyone else)
    [[Not web accessible.]]
 - the script shall set up the database:
  - with the specified database password
    [[Not web accessible.]]
  - in the designated location
    [[Not web accessible.]]
  - with the partial information from the CREATE CONTEST (1) page
    [[Not web accessible.]]
- the script shall change placeholder text in the readme to a current URL that links to the current contest
x if any of these functions fail, the page shall print an error message
x the page shall include a link to the administration login page (if the contest is created successfully)

ADMIN PAGES----------------------------------------------------------------

Index
x page shall support login to system
 - for new administrators, the username and password are both "admin" (if changed, reflect change in the readmes and/or instruction documents)
[[-on first login the password is required to be changed]] I meant if the default, first-login password was changed, sorry for not being clear
 x for returning administrators, the username and password shall be whatever they have set

ChangePW
x the page shall contain the text "Login Information" in a statement suggesting change. (The current "Please change your Login Information" is sufficient, as is the fragment/title "New Login Information")
x the page shall contain a form with one short text input field and two password input fields and a submit button
 - the fields shall check whether their input is valid (the two password fields must have the same content)
 - the submit button shall have the text "Change"
 x the submit button shall refresh the page if the form does not have valid input
 - the submit button shall POST to (this same php document)? if the input is valid, then redirect to the SetupContest page
  - this action shall update the database of user/password combinations
    [[Not web accessible.]]

ALL FOLLOWING ADMIN PAGES
x the page shall contain the text ADMIN in the header bar
x the page shall have a menu bar with all the pages admins are expected to visit (it's pretty much in place; I'm not listing them out here)
x the page shall have a display stating the amount of time until standings are frozen, or the statement "Standings are now frozen", as well as the time until the contest ends or the statement "contest is over"
    [[If the contest has not started the statement should indicate the
    contest has not been started yet.]]
- any time a submit button is pressed, the page pops up with a good or bad alert message to communicate whether the expected behaviour happened or not but we only want the error messages
    [[Definitely no pop ups for good behavior!!!]]
  
SetupContest
- the page shall have a form which includes the following
 x titles for sub-sections (Edit Contest Info, Customize Judging Experience)
 - text entry fields, pre-filled with existing information from the database:
  x the host's name
  x the contest's name
  x the full directory path the server uses to access contest files
      [[Not modifiable.  In fact, it should probably not be displayed to
    the admin since we don't want them to know how things work
    internally?]] Why is it here then? [[Because it was developed
    assuming the admin DID know the internals deeply and wouldn't be
    bothered by this fact.  We're trying to move away from that
    heritage so that the system could be installed and run by anyone
    even if they don't know how the system works.]]
  x the judge account username and password (password field)
 x number entry fields, pre-filled with either the default values or whatever has been set in the database:
  x time (hour, minute, second) until standings are frozen
  x time (hour, minute, second) until the contest closes
  x penalty for incorrect submissions (in minutes)
 x check boxes to turn on or off the following options
  x ignore standard error (default off)(make sure functionality behind this works)
  x check for forbidden words in all three languages (default on for any with files in the FORBIDDEN table of the database, off otherwise)
  x automatically include headers for all three langauges (default ?)
  x display team names to judge (default off)
  
 x a submit button which will always POST data to the database
 [[The POST does not go to the database directly.  It goes to some
    PHP script that parses the information and updates the database.  I
    think that page is self so that it can redisplay the results after
    doing the POST.]]
-the submit button currently redirects to the SetupProblems page. It is the only button with a redirect. Do we actually want that?
    [[Sort of.  The first time we click on the submit button we want
    that, but any future update should stay at the page.]] Do we want
    all the submit buttons to redirect to the next page?  [[No,
    because many of the remaining pages expect multiple entries.  For
    example, we add multiple problems, sites, teams, etc.]]

SetupProblems
- the page shall have a form which contains the following:
 x a title with the text "Add or Edit Problems"
 x short text entry fields for the problem name, shortened problem name, and problem location (as in where to put it on the server? Not actually sure what this is)
 [[Yes, problem location is on the server and probably needs the
    same sanitation as used earlier for contest creation for injection
    purposes.  Spaces are especially deadly here.]]
 x long text entry field for notes about the problem THIS CURRENTLY DOES NOT ALLOW APOSTROPHES WHICH MIGHT BE A PROBLEM
 x upload form for the html version of the problem
  -[[Check that these are not visible until the contest is started!
    We've had people try to check by looking at problems before
    contests were started and saved by this feature being present.]]
 x upload form for the pdf version of the problem
  -[[Check that these are not visible until the contest is started!
    We've had people try to check by looking at problems before
    contests were started and saved by this feature being present.]]
 x submit button which shall POST the new problem to the database
- the page shall have a second form which contains the following:
 x title text "Edit Current Problems"
 x a table of existing problems with these on each row:
  x the problem name
  x a link with the text "Edit"
   x this shall GET the data for that problem from the database and fill it into the first form
  x a link with text "Delete"
   x this link shall DELETE the problem from the database
- if any of the database connections fail, the page shall contain an error message

- Deleting a problem and then creating another one breaks the numbering of problems (and causes problems to not be auto-judged) - test thoroughly 
- Problem description files cannot be uploaded while creating problem, only from edit - intentional?
    [[Dunno...need a better description to answer]]
- Problem description file cannot be changed once uploaded - have a test for this
    [[I'm not sure what this is referring to and why that is the case.
    Almost everything on the site should be editable.]]

SetupDataSets
    [[This page should not be enabled on the menu bar until at least
    one problem has been added to the contest.  If someone tries to go
    here prior to a problem, they should be redirected to the
    SetupProblems link so they can add a problem first.]]
x the page shall contain a table of all the problems, with the following for each problem:
 - the problem name
 - a link to add a new data set (which will GET the problem (based on its id) from the database and fill in the following form)
 x on individual lines, any I/O data sets already submitted for that problem and a link to delete each one (which obviously sends a DELETE request to the database)
- the page shall contain a form which initially contains the text "Select a problem to add a data set"
- once a problem has been selected, this form shall have two file-upload inputs
 - these are respectively for the input and output files the contestants' programs will be interacting with/trying to match
 - the submit button shall produce an error if either of the uploaders do not have files chosen, or if there is an actual error in saving the files to the database
    [[Files are saved in the filesystem--not the database--but errors
    could exist in the saving process.]]
 - otherwise, the submit button shall upload the pair to the database and upload the table described before
 - the form shall also have a title, which is the name of the problem the data sets are being added to
- Naming a data set certain things breaks things - test thoroughly
    [[I think the biggest item I know of right now is any suffix other
    than .in and .out.  Our system appends .in and .out to the
    uploaded files and then the automated judge breaks when it sees
    something like test.txt.in instead of test.in .  Currently, I hand
    correct this by ensuring there is only one suffix in the filename
    (e.g., test_txt.in instead of test.txt.in) to make sure the system
    runs as expected.]]
 
SetupSite
x the page shall have a form with the title "Add a new site" and a single short entry text field for the site name
 - the submit button on this form shall POST to the database
- the page shall also have a table with the title "Edit a Site"
 - the table shall include, on each row:
  - the name of the site
  - a link to Edit the site (GET)
  - a link to Delete the site (DELETE)
- when the Edit link is clicked, the form's title shall include the site name
 - the form shall auto-fill the original name of the site
 - if the user renames the site and clicks submit, the new name is stored (POST) in the database

SetupTeams
    [[This page should not be enabled on the menu bar until at least
    one site has been added to the contest.  If someone tries to go
    here prior to a problem, they should be redirected to the
    SetupSite link so they can add a site first.]]
- the page shall have a form containing the following:
 x a title "Add a new team"
 - short text entry fields for all of the following:
  x team name
  x organization name
  x username
  x password (yes, this is plain text - you need to be able to give the random password to the team)
   - the password field shall be filled with a randomly generated string of letters and numbers
   [[It is default generated to an 8 character hex value.  I would
    like to ensure that we don't use both ones and lower case ells or
    other text that can easily be confused when reading random
    strings.]]
  x coach
  x contestant 1, 2, 3, and alternate
  x team email
 x a drop-down box to pick a site from the ones which have been created
 x a checkbox to indicate whether a team is a test team - one which is eligible to compete in the contest when it has been test-started before it is officially started
- deleting a team during a running contest does not break things 
- updating teams does not always work - test thoroughly 
- Editing a different team, while editing a team breaks things 
 
 - the submit button for this form shall POST to the server regardless of whether all the fields are filled in or not
  - the submit button shall check for valid entries for the username and password options before allowing the request to go through
- the page shall have a table of teams with the following on each row:
 - the team name
 - a link which will GET the team for editing
 - a link which will DELETE the team from the database
 - some indication whether the team is a test team or not (I don't like the current implementation that the "Test Team?" column looks like a bunch of checkboxes but a user cannot click on them)
 - when the Edit link is clicked, the form shall auto-fill its fields from the database, including the checkbox indicating whether the team is a test team
 
SetupCategories
x the page shall have a form to add a new category (title, short text entry, submit button)
 - the submit button shall only work if there is text in the text field. If there is, the form shall POST to the database and create the new category
x the page shall include a table of categories with a title as well as the standard category name, edit (GET), and DELETE options
 x when Edit is pressed, the form shall put the name of the category into the lone text field and change the title and button text to "Rename category"
x the form shall have a second table/form, this one with:
 x column titles "Team Name" and then the names of categories such that all categories have a column
 - the rows shall be the team names such that every team is included in the "Team Name" column
 - the rest of the fields in the table shall be editable checkboxes
 - when the submit button is pressed, the form shall POST and DELETE as necessary to the CATEGORY_TEAMS table in the database
    [[NOTE: A team is not required to have a category.]]
    [[NOTE: A category is not required to have a team.]]
 
SetupHeaders / SetupForbidden (these are so similar, I'm not writing the requirements twice. Change precise text as needed)
x the page shall have a table with"
 x the title "Edit Current [Headers/Forbidden]"
 x each row shall have an accepted language name and an option to edit(GET), but no DELETE (if you want to add or remove accepted languages, you have to go back and add or remove from the source code)
  x [[Do not show a language's forbidden words entry if it was
    unchecked on the first set up page.  In other words, if we don't
    support forbidden words for Java, do not allow the user to enter
    any words for it and be under the mistaken impression that there
    are forbidden words for a language when that feature has been
    turned of.]]
 - Edit shall GET the document for the appropriate language from the database and put it into a form on the page
  - this form shall have a title indicating which language's document is being edited and the text of the document in a long text entry field
  - the submit button shall POST the edited document back to the database
    [[These files do not represent documents, but lists of values
    pulled from/inserted into the database.]]

Misc
x the page shall contain a form (table with many sub-forms?) with the following:
    [[I forget if we implemented it with one form and multiple submit
    buttons within one form or multiple forms each with a single
    submit button.  Either implementation is acceptable.]]
 x hh:mm:ss time entry field to input an amount of time to extend the contest by + submit button
 x a button to "clear" the contest (probably needs a better name; it just reverts all sites to inactive and removes submissions. Problem , team, category, and other data will remain as it was
 x a short entry text field and button to clone a contest (when given a name, clones all contest data from one database to another in the same system, otherwise does nothing)
 x a short entry text field which takes an administrator's email and a button that promises to compress the problem files and send them to the entered email address
  - [[This should send more than the problem files.  It should send
    everything generated by the contest.  That includes problem files,
    submitted solutions, log files, output results for each
    submission, etc.  It should not include things like the jails that
    were automatically generated by the creation of the contest.
    ALSO, this should send break up that information by teams and send
    relevant information to each team's email address associated with
    the team.  In other words, the team should get a historical
    account of how it did on the contest without being able to see the
    results of other teams.]]
  - this should definitely send an email unless something goes wrong, at which point it produces an error message for the user
    [[Not web accessible.]]
 - an option (button) to regrade the autoresponses for the problems, which we will write functionality for soon, and idk yet how exactly we'll want it to work
    [[We want it to work initially by regrading the results and
    displaying an updated status with the new results.  Even better,
    it should regrade the results and present to the judge a list of
    submissions that need to be reviewed since they 1) differed from
    the auto graded results to judged results in the original contest,
    or 2) differed from the initial results to the regraded results.
    The judge can then review any results in the list and then see the
    updated standings once those are all complete.]]

Start
x the page shall contain a table with a title "Start Contest" and the following:
 x in each row, the name of a site, started or not
  x if the site has not yet been officially started, a checkbox on the same row
  x if the site has been started, text will replace the checkbox saying so
  x if the site has been test-started, text indicating that status as well as the checkbox
 x two submit buttons (one for start, one for test-start) which will start/test-start the contest for all sites with checked boxes.


JUDGE---------------------------------------------------------------------
NOT PAGE SPECIFIC
judge/clarification_response_form.php has not been bootstrap-ed - test for this
Login functionality
2 Timers [[What does this mean?]] (at the top of the page - the timers)
Queued submissions counter displays 
	x Submissions are cleared from the queue appropriately
Unanswered clarifications counter 
Time of day (top of the page)
Displaying submissions (applies to multiple, but not all pages)
	-Judge submission link
		x Link exists
		-Judging submission page
			-All submission description info is correct
			-"Final result" drop down default value is equal to auto response
			-Information from comparing .out file to submission is correct
			    [[You need to remember that sometimes
			    there will be multiple outputs to compare
			    and they will have different competing
			    results.  There need to be scenarios for
			    several different outputs so this isn't
			    lost.  For example, all but one correct;
			    many different error types, some format
			    errors and some incorrect errors; both run
			    time error and run length error; etc.]]
	-Filtering
		[[Make it very clear that filtering is taking place.
		The system currently being used is weak in this area.
		The updated look-and-feel should improve in this
		area.]]
		-Unfiltered results all display  
		-Filter by problem
			-Links exist for all problems
			-Clicking a link causes correct results to be displayed 
			-Short descriptions are displayed for all, except selected link
			-*Tool tips containing the full name for the links of shortened names
		-Filter by team 
			-Drop down contains all teams
			-Filtering causes correct results to be displayed
			-Selecting a different option from the drop down automatically refreshes
	-Correct information
		-Problem information is correct
		-Team ID or name is correct
			-*Team ID or name is correctly displayed (depending on the "show team names to judges" check box)
		-Auto response is accurate

JUDGE SUBMISSIONS
x Only un-judged submissions are shown

REVIEW JUDGEMENTS
Only submissions judged by the current user are shown (is there only one judge account?)
    [[Only submission judged are shown since there is only one judge
    account and we don't keep track of who judged which problem.
    Typically, in small contests there is only one judge; in big
    contests judged are dedicated to specific problems, so everyone
    knows who gave the initial judgement.]]

PROBLEMS
x All problems are displayed
Problem name and number are correct
x HTML and PDF files display correctly

CLARIFICATIONS
Both "sort by" options sort results correctly
*All clarifications that should be shown are shown (not sure what is failing about this)
Pending, all, general, and $problemName links filter clarifications correctly
All problem names are shown as an option for sorting
"Respond to Clarification" and "Ignore Clarification" links exist where they should and work
All information is correct, and correctly displayed for each shown clarification 
Make new clarification/respond to clarification 
	x link exists from clarifications page
	-All  problems, as well as general, are available from dropdown
	-Question is correctly displayed (or not displayed)
	
STANDINGS
[[see comments about standings from contestant pages--same applies
here.]]
All problems displayed
Time taken for each problem displayed correctly (not displayed for incomplete questions)
Problems completed displayed correctly
"Points" (in minutes) displayed correctly
Team name, ranking displayed correctly
Teams ordered by ranking
Category filter works

CONTESTANT---------------------------------------------------------------
NOT PAGE SPECIFIC
Both times display correctly
    -For the correct site 

ALTERNATE SUBSTITUTION PAGE
Page shows only when it should
    [[which is...]] (the first time that a team with an alternate logs in)
Result is stored correctly (only way to test is by looking in the data base)

PROBLEMS PAGE
Problem number and name are with the correct documents
x html and pdf display correctly
Documents are only viewable for active contests


SUBMISSIONS
xFile upload 
Submissions are displayed correctly
	-Correct information (especially the result from judge)

STANDINGS
[[This is extremely important.  You need to give multiple scenarios to
show all the possible standings that could occur.  Saying "correct
standings" is too generic and vague to be ensure you've tested all the
essential components of the standings.  Some examples that could
easily be forgotten include: ties between teams; problem submitted,
but not yet graded; and no correct submissions for a problem.  There
are many more scenarios that need to be explored.]]
Team name stays connected to correct standings
x All problems are displayed
x Minutes displayed for each problem correct
x Number of attempts for each problem displayed correctly
x Number of problems complete displayed correctly 
x "Score" (in minutes) displayed correctly
Freeze stops rankings and other team's scores from changing (freeze happens at correct time for each site)
Category filter works

CLARIFICATIONS
Filters work
All information is correct

README
x Document displays
Update document??
